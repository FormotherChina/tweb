{"version":3,"sources":["webpack:///./src/components/monkeys/password.ts","webpack:///./src/components/ripple.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/components/button.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/misc.ts","webpack:///./src/components/inputField.ts","webpack:///./src/helpers/dom/selectElementContents.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/helpers/dom/dispatchEvent.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/helpers/dom/isSwipingBackSafari.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/helpers/dom/htmlToSpan.ts"],"names":["PasswordMonkey","passwordInputField","size","needFrame","this","container","document","createElement","classList","add","loadPromise","loadAnimationAsAsset","loop","autoplay","width","height","noCache","then","_animation","animation","addEventListener","currentFrame","direction","setSpeed","pause","onVisibilityClickAdditional","passwordVisible","setDirection","curFrame","play","waitForFirstFrame","remove","rippleClickId","ripple","elem","callback","Promise","resolve","onEnd","prepend","attachListenerTo","querySelector","r","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","window","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","sqrt","abs","x","y","style","append","isRippleUnneeded","e","target","includes","tagName","touchEnd","settings","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","passwordInput","page","className","withInputWrapper","titleLangKey","subtitleLangKey","btnNext","btnNextI18n","IntlElement","key","element","label","name","getStateInterval","input","inputWrapper","state","getState","setInterval","_state","hint","wrapEmojiText","setLabel","onSubmit","value","toggle","update","preloader","setValueSilently","random","check","response","_","clearInterval","m","default","mount","monkey","removeAttribute","catch","err","type","select","isMobile","imageDiv","all","load","focus","pushToState","CLICK_EVENT_NAME","attachClickEvent","options","listenerSetter","bind","touchMouseDown","detachClickEvent","simulateClickEvent","asDiv","icon","noRipple","rippleSquare","onlyMobile","disabled","setAttribute","text","replaceContent","node","innerHTML","firstChild","lastChild","replaceWith","textContent","putPreloader","returnDiv","html","div","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","onMouseMove","openedMenu","diffX","right","diffY","bottom","closeBtnMenu","onClick","parentElement","menuOverlay","dispatchEvent","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","insertBefore","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","body","windowWidth","windowHeight","verticalSide","sides","intermediateX","intermediateY","possibleSides","_cancelContextMenuOpening","_cancelContextMenuOpeningTimeout","cancelContextMenuOpening","clearTimeout","attachContextMenuListener","removeManual","timeout","capture","onCancel","init","findUpAttribute","entities","preventDefault","originalEvent","clipboardData","getData","trim","match","span","curChild","nextSibling","nodeType","nodeValue","richValue","getRichValue","entities2","parseEntities","filter","mergeEntities","wrapDraftText","execCommand","InputState","required","validate","undefined","maxLength","showLengthOn","min","round","placeholder","plainText","processInput","labelText","firstElementChild","observer","MutationObserver","isInputEmpty","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","border","labelEl","showingLength","wasError","inputLength","diff","isError","el","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","selectElementContents","labelOptions","setHeight","newHeight","currentHeight","transitionDuration","log","fireFakeInput","originalValue","isValid","isChanged","silent","setDraftValue","Error","Valid","setState","appNavigationController","navigations","id","manual","debug","currentHash","location","hash","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","history","scrollRestoration","good","noBlurOnPop","i","index","ret","findItemByType","backByItem","indexOf","splice","push","noHistory","origin","pathname","single","simulateEvent","event","Event","bubbles","cancelable","SetTransition","forwards","onTransitionEnd","useRafs","raf","cancelAnimationFrame","afterTimeout","toggleDisability","elements","disable","forEach","sequentialDom","promises","scheduled","kind","promise","scheduleFlush","do","read","write","field","withEntities","lines","line","join","combineSameEntities","sortEntities","isSwipingBackSafari","TouchEvent","passwordManager","invokeApi","result","currentHashPromise","newHashPromise","params","password","new_settings","email","currentPassword","invokeCrypto","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","hashes","new_password_hash","inputCheckPassword","auth","setUser","user","code","attribute","closest","markdownTags","bold","entityName","underline","italic","monospace","strikethrough","link","mentionName","BLOCK_TAG_NAMES","Set","getRichElementValue","selNode","selOffset","offset","tabulation","tabulationMatch","getAttribute","substr","parentNode","tag","url","href","user_id","follow","toUserId","isSelected","isBlock","has","HTMLImageElement","alt","wasLength","hasAttribute","LoginPage","title","subtitle","PasswordInputField","super","onVisibilityClick","toggleVisible","autocomplete","stealthy","tabIndex","cloneNode","htmlToSpan"],"mappings":"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","file":"12.1293b611e39ab0087e56.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { LottieLoader } from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationAsAsset({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'TwoFactorSetupMonkeyPeek').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {IS_TOUCH_SUPPORTED} from \"../environment/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(\r\n  elem: HTMLElement, \r\n  callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), \r\n  onEnd: (id: number) => void = null, \r\n  prepend = false,\r\n  attachListenerTo = elem\r\n) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!IS_TOUCH_SUPPORTED) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    ) && (\r\n      attachListenerTo === elem \r\n      || !findUpAsChild(e.target, attachListenerTo)\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(IS_TOUCH_SUPPORTED) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    attachListenerTo.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      attachListenerTo.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        attachListenerTo.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    attachListenerTo.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(attachListenerTo.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/misc';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport passwordManager from '../lib/mtproto/passwordManager';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && passwordManager.getState().then(_state => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordInputField.setValueSilently('' + Math.random()); // prevent saving suggestion\r\n    passwordInputField.setValueSilently(value); // prevent saving suggestion\r\n\r\n    passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport simulateEvent from \"./dispatchEvent\";\r\n\r\nexport const CLICK_EVENT_NAME: 'mousedown' /* | 'touchend' */ | 'click' = (IS_TOUCH_SUPPORTED ? 'mousedown' : 'click') as any;\r\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\r\nexport function attachClickEvent(elem: HTMLElement | Window, callback: (e: /* TouchEvent |  */MouseEvent) => void, options: AttachClickOptions = {}) {\r\n  const add = options.listenerSetter ? options.listenerSetter.add(elem) : elem.addEventListener.bind(elem);\r\n  // const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\r\n\r\n  options.touchMouseDown = true;\r\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\r\n    add('mousedown', callback, options);\r\n  } else if(CLICK_EVENT_NAME === 'touchend') {\r\n    const o = {...options, once: true};\r\n\r\n    const onTouchStart = (e: TouchEvent) => {\r\n      const onTouchMove = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        remove('touchend', onTouchEnd, o);\r\n      };\r\n  \r\n      const onTouchEnd = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        callback(e);\r\n        if(options.once) {\r\n          remove('touchstart', onTouchStart);\r\n        }\r\n      };\r\n  \r\n      add('touchend', onTouchEnd, o);\r\n      add('touchmove', onTouchMove, o);\r\n    };\r\n\r\n    add('touchstart', onTouchStart);\r\n  } else {\r\n    add(CLICK_EVENT_NAME, callback, options);\r\n  } */\r\n  add(CLICK_EVENT_NAME, callback, options);\r\n}\r\n\r\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\r\n  // if(CLICK_EVENT_NAME === 'touchend') {\r\n  //   elem.removeEventListener('touchstart', callback, options);\r\n  // } else {\r\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\r\n  // }\r\n}\r\n\r\nexport function simulateClickEvent(elem: HTMLElement) {\r\n  simulateEvent(elem, CLICK_EVENT_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nconst Button = (className: string, options: Partial<{\r\n  noRipple: true, \r\n  onlyMobile: true, \r\n  icon: string, \r\n  rippleSquare: true, \r\n  text: LangPackKey, \r\n  disabled: boolean,\r\n  asDiv: boolean\r\n}> = {}) => {\r\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\r\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\r\n\r\n  if(!options.noRipple) {\r\n    if(options.rippleSquare) {\r\n      button.classList.add('rp-square');\r\n    }\r\n\r\n    ripple(button);\r\n  }\r\n\r\n  if(options.onlyMobile) {\r\n    button.classList.add('only-handhelds');\r\n  }\r\n\r\n  if(options.disabled) {\r\n    button.setAttribute('disabled', 'true');\r\n  }\r\n\r\n  if(options.text) {\r\n    button.append(i18n(options.text));\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default Button;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { IS_APPLE, IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appNavigationController from \"./appNavigationController\";\r\n\r\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\r\n  const html = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\r\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n  </svg>`;\r\n\r\n  if(returnDiv) {\r\n    const div = document.createElement('div');\r\n    div.classList.add('preloader');\r\n    div.innerHTML = html;\r\n\r\n    if(elem) {\r\n      elem.appendChild(div);\r\n    }\r\n\r\n    return div;\r\n  }\r\n  \r\n  elem.insertAdjacentHTML('beforeend', html);\r\n  return elem.lastElementChild as HTMLElement;\r\n}\r\n\r\nMOUNT_CLASS_TO.putPreloader = putPreloader;\r\n\r\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\r\n  elem.classList.remove('tgico-' + icon);\r\n  elem.disabled = true;\r\n  putPreloader(elem);\r\n\r\n  return () => {\r\n    elem.innerHTML = '';\r\n    elem.classList.add('tgico-' + icon);\r\n    elem.removeAttribute('disabled');\r\n  };\r\n}\r\n\r\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\r\n  Array.from(elements).forEach(el => {\r\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\r\n    if(!match) return;\r\n    to[match[1]] = el as HTMLElement;\r\n  });\r\n} */\r\n\r\nlet onMouseMove = (e: MouseEvent) => {\r\n  let rect = openedMenu.getBoundingClientRect();\r\n  let {clientX, clientY} = e;\r\n  \r\n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\r\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\r\n  \r\n  if(diffX >= 100 || diffY >= 100) {\r\n    closeBtnMenu();\r\n    //openedMenu.parentElement.click();\r\n  }\r\n  //console.log('mousemove', diffX, diffY);\r\n};\r\n\r\nconst onClick = (e: MouseEvent | TouchEvent) => {\r\n  //cancelEvent(e);\r\n  closeBtnMenu();\r\n};\r\n\r\n// ! no need in this due to the same handler in appNavigationController\r\n/* const onKeyDown = (e: KeyboardEvent) => {\r\n  if(e.key === 'Escape') {\r\n    closeBtnMenu();\r\n    cancelEvent(e);\r\n  }\r\n}; */\r\n\r\nexport const closeBtnMenu = () => {\r\n  if(openedMenu) {\r\n    openedMenu.classList.remove('active');\r\n    openedMenu.parentElement.classList.remove('menu-open');\r\n    //openedMenu.previousElementSibling.remove(); // remove overlay\r\n    if(menuOverlay) menuOverlay.remove();\r\n    openedMenu = null;\r\n\r\n    rootScope.dispatchEvent('context_menu_toggle', false);\r\n  }\r\n  \r\n  if(openedMenuOnClose) {\r\n    openedMenuOnClose();\r\n    openedMenuOnClose = null;\r\n  }\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\r\n    window.removeEventListener('contextmenu', onClick);\r\n  }\r\n\r\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.removeByType('menu');\r\n  }\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  if(openedMenu) {\r\n    closeBtnMenu();\r\n  }\r\n  \r\n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\r\n    const rect = openedMenu.getBoundingClientRect();\r\n    const {innerWidth, innerHeight} = window;\r\n\r\n    console.log(innerWidth, innerHeight, rect);\r\n  } */\r\n});\r\n\r\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\r\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\r\n  closeBtnMenu();\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.pushItem({\r\n      type: 'menu',\r\n      onPop: (canAnimate) => {\r\n        closeBtnMenu();\r\n      }\r\n    });\r\n  }\r\n  \r\n  openedMenu = menuElement;\r\n  openedMenu.classList.add('active');\r\n  openedMenu.parentElement.classList.add('menu-open');\r\n\r\n  if(!menuOverlay) {\r\n    menuOverlay = document.createElement('div');\r\n    menuOverlay.classList.add('btn-menu-overlay');\r\n\r\n    // ! because this event must be canceled, and can't cancel on menu click (below)\r\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n      cancelEvent(e);\r\n      onClick(e);\r\n    });\r\n  }\r\n\r\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\r\n\r\n  //document.body.classList.add('disable-hover');\r\n  \r\n  openedMenuOnClose = onClose;\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\r\n    window.addEventListener('contextmenu', onClick, {once: true});\r\n  }\r\n\r\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\r\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n    cancelEvent(e);\r\n    onClick(e);\r\n  }); */\r\n  \r\n  // ! safari iOS doesn't handle window click event on overlay, idk why\r\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  rootScope.dispatchEvent('context_menu_toggle', true);\r\n}\r\n\r\nconst PADDING_TOP = 8;\r\nconst PADDING_LEFT = 8;\r\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\r\n  //let {clientX, clientY} = e;\r\n\r\n  // * side mean the OPEN side\r\n\r\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\r\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\r\n  const rect = document.body.getBoundingClientRect();\r\n  const windowWidth = rect.width;\r\n  const windowHeight = rect.height;\r\n\r\n  side = mediaSizes.isMobile ? 'right' : 'left';\r\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\r\n\r\n  const getSides = () => {\r\n    return {\r\n      x: {\r\n        left: pageX,\r\n        right: pageX - menuWidth\r\n      },\r\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      y: {\r\n        top: pageY,\r\n        bottom: pageY - menuHeight\r\n      },\r\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n    };\r\n  };\r\n\r\n  const sides = getSides();\r\n\r\n  const possibleSides = {\r\n    x: {\r\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\r\n      right: sides.x.right >= PADDING_LEFT\r\n    },\r\n    y: {\r\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\r\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\r\n    }\r\n  };\r\n\r\n  /* if(side === undefined) {\r\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\r\n      side = 'right';\r\n    }\r\n  } */\r\n\r\n  {\r\n    /* const x = sides.x;\r\n\r\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\r\n    if(side) {\r\n      s.findAndSplice(s => s === side);\r\n      s.unshift(side);\r\n    }\r\n\r\n    const possibleSide = s.find(s => possibleSides.x[s]); */\r\n    let left: number;\r\n    /* if(possibleSide) {\r\n      left = x[possibleSide];\r\n      side = possibleSide;\r\n    } else {\r\n      left = sides.intermediateX;\r\n      side = undefined;\r\n    } */\r\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\r\n  \r\n    elem.style.left = left + 'px';\r\n  }\r\n\r\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\r\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\r\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\r\n    verticalSide = 'bottom';\r\n  } else {\r\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\r\n    verticalSide = 'top';\r\n  } */\r\n\r\n  {\r\n    let top: number;\r\n\r\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\r\n  \r\n    elem.style.top = top + 'px';\r\n  }\r\n  \r\n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\r\n  elem.classList.add(\r\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\r\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\r\n    '-' +\r\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\r\n}\r\n\r\nlet _cancelContextMenuOpening = false, _cancelContextMenuOpeningTimeout = 0;\r\nexport function cancelContextMenuOpening() {\r\n  if(_cancelContextMenuOpeningTimeout) {\r\n    clearTimeout(_cancelContextMenuOpeningTimeout);\r\n  }\r\n    \r\n  _cancelContextMenuOpeningTimeout = window.setTimeout(() => {\r\n    _cancelContextMenuOpeningTimeout = 0;\r\n    _cancelContextMenuOpening = false;\r\n  }, .4e3);\r\n\r\n  _cancelContextMenuOpening = true;\r\n}\r\n\r\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\r\n  const add = listenerSetter ? listenerSetter.add(element) : element.addEventListener.bind(element);\r\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\r\n\r\n  if(IS_APPLE && IS_TOUCH_SUPPORTED) {\r\n    let timeout: number;\r\n\r\n    const options: EventListenerOptions = {capture: true};\r\n\r\n    const onCancel = () => {\r\n      clearTimeout(timeout);\r\n      // @ts-ignore\r\n      remove('touchmove', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchend', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchcancel', onCancel, options);\r\n    };\r\n\r\n    add('touchstart', (e: TouchEvent) => {\r\n      if(e.touches.length > 1) {\r\n        onCancel();\r\n        return;\r\n      }\r\n  \r\n      add('touchmove', onCancel, options);\r\n      add('touchend', onCancel, options);\r\n      add('touchcancel', onCancel, options);\r\n\r\n      timeout = window.setTimeout(() => {\r\n        if(_cancelContextMenuOpening) {\r\n          onCancel();\r\n          return;\r\n        }\r\n\r\n        callback(e.touches[0]);\r\n        onCancel();\r\n\r\n        if(openedMenu) {\r\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n        }\r\n      }, .4e3);\r\n    });\r\n\r\n    /* if(!isSafari) {\r\n      add('contextmenu', (e: any) => {\r\n        cancelEvent(e);\r\n      }, {passive: false, capture: true});\r\n    } */\r\n  } else {\r\n    add('contextmenu', IS_TOUCH_SUPPORTED ? (e: any) => {\r\n      callback(e);\r\n\r\n      if(openedMenu) {\r\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n      }\r\n    } : callback);\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport selectElementContents from \"../helpers/dom/selectElementContents\";\r\nimport { MessageEntity } from \"../layer\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport SetTransition from \"./singleTransition\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    let text: string, entities: MessageEntity[];\r\n\r\n    // @ts-ignore\r\n    let html: string = (e.originalEvent || e).clipboardData.getData('text/html');\r\n    if(html.trim()) {\r\n      const match = html.match(/<body>([\\s\\S]*)<\\/body>/);\r\n      if(match) {\r\n        html = match[1].trim();\r\n      }\r\n\r\n      let span: HTMLElement = document.createElement('span');\r\n      span.innerHTML = html;\r\n\r\n      let curChild = span.firstChild;\r\n      while(curChild) { // * fix whitespace between elements like <p>asd</p>\\n<p>zxc</p>\r\n        let nextSibling = curChild.nextSibling;\r\n        if(curChild.nodeType === 3) {\r\n          if(!curChild.nodeValue.trim()) {\r\n            curChild.remove();\r\n          }\r\n        }\r\n\r\n        curChild = nextSibling;\r\n      }\r\n\r\n      const richValue = getRichValue(span, true);\r\n      text = richValue.value;\r\n      entities = richValue.entities;\r\n\r\n      let entities2 = RichTextProcessor.parseEntities(text);\r\n      entities2 = entities2.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n      RichTextProcessor.mergeEntities(entities, entities2);\r\n    } else {\r\n      // @ts-ignore\r\n      text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n      entities = RichTextProcessor.parseEntities(text);\r\n      entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    }\r\n\r\n    text = RichTextProcessor.wrapDraftText(text, {entities});\r\n    \r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true,\r\n  required?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  // protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength !== undefined && options.showLengthOn === undefined) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        // this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if(!this.value) { // * avoid selecting whole empty field on iOS devices\r\n      return;\r\n    }\r\n\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    } else {\r\n      selectElementContents(this.input);\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput(setHeight = true) {\r\n    const {scrollHeight: newHeight/* , clientHeight */} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    const currentHeight = +this.input.style.height.replace('px', '');\r\n    if(currentHeight === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const TRANSITION_DURATION_FACTOR = 50;\r\n    const transitionDuration = Math.round(\r\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\r\n    );\r\n\r\n    // this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.transitionDuration = `${transitionDuration}ms`;\r\n\r\n    if(setHeight) {\r\n      this.input.style.height = newHeight ? newHeight + 'px' : '';\r\n    }\r\n\r\n    const className = 'is-changing-height';\r\n    SetTransition(this.input, className, true, transitionDuration, () => {\r\n      this.input.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public isValidToChange() {\r\n    return this.isValid() && this.isChanged();\r\n  }\r\n\r\n  public setDraftValue(value = '', silent = false) {\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n    this.setDraftValue(value, silent);\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// https://stackoverflow.com/a/6150060\nexport default function selectElementContents(el: HTMLElement) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const sel = window.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport { logger } from \"../lib/logger\";\r\nimport { doubleRaf } from \"../helpers/schedulers\";\r\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { indexOfAndSplice } from \"../helpers/array\";\r\nimport isSwipingBackSafari from \"../helpers/dom/isSwipingBackSafari\";\r\n\r\nexport type NavigationItem = {\r\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \r\n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | \r\n    'global-search' | 'voice' | 'mobile-search',\r\n  onPop: (canAnimate: boolean) => boolean | void,\r\n  onEscape?: () => boolean,\r\n  noHistory?: boolean,\r\n  noBlurOnPop?: boolean,\r\n};\r\n\r\nexport class AppNavigationController {\r\n  private navigations: Array<NavigationItem> = [];\r\n  private id = Date.now();\r\n  private manual = false;\r\n  private log = logger('NC');\r\n  private debug = true;\r\n  private currentHash = window.location.hash;\r\n  public onHashChange: () => void;\r\n\r\n  constructor() {\r\n    let isPossibleSwipe = false;\r\n    window.addEventListener('popstate', (e) => {\r\n      this.debug && this.log('popstate', e, isPossibleSwipe);\r\n\r\n      if(window.location.hash !== this.currentHash) {\r\n        this.onHashChange && this.onHashChange();\r\n        this.replaceState();\r\n        return;\r\n      }\r\n      this.currentHash = window.location.hash;\r\n\r\n      const id: number = e.state;\r\n      if(id !== this.id/*  && !this.navigations.length */) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      const item = this.navigations.pop();\r\n      if(!item) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      this.manual = !isPossibleSwipe;\r\n      this.handleItem(item);\r\n      //this.pushState(); // * prevent adding forward arrow\r\n    });\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      const item = this.navigations[this.navigations.length - 1];\r\n      if(!item) return;\r\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\r\n        cancelEvent(e);\r\n        this.back(item.type);\r\n      }\r\n    }, {capture: true, passive: false});\r\n\r\n    if(IS_MOBILE_SAFARI) {\r\n      const options = {passive: true};\r\n      window.addEventListener('touchstart', (e) => {\r\n        if(e.touches.length > 1) return;\r\n        this.debug && this.log('touchstart');\r\n\r\n        if(isSwipingBackSafari(e)) {\r\n          isPossibleSwipe = true;\r\n\r\n          window.addEventListener('touchend', () => {\r\n            setTimeout(() => {\r\n              isPossibleSwipe = false;\r\n            }, 100);\r\n          }, {passive: true, once: true});\r\n        }\r\n\r\n        /* const detach = () => {\r\n          window.removeEventListener('touchend', onTouchEnd);\r\n          window.removeEventListener('touchmove', onTouchMove);\r\n        };\r\n\r\n        let moved = false;\r\n        const onTouchMove = (e: TouchEvent) => {\r\n          this.debug && this.log('touchmove');\r\n          if(e.touches.length > 1) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          moved = true;\r\n        };\r\n\r\n        const onTouchEnd = (e: TouchEvent) => {\r\n          this.debug && this.log('touchend');\r\n          if(e.touches.length > 1 || !moved) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          isPossibleSwipe = true;\r\n          doubleRaf().then(() => {\r\n            isPossibleSwipe = false;\r\n          });\r\n\r\n          detach();\r\n        };\r\n\r\n        window.addEventListener('touchend', onTouchEnd, options);\r\n        window.addEventListener('touchmove', onTouchMove, options); */\r\n      }, options);\r\n    }\r\n\r\n    history.scrollRestoration = 'manual';\r\n\r\n    this.pushState(); // * push init state\r\n  }\r\n\r\n  private handleItem(item: NavigationItem) {\r\n    const good = item.onPop(!this.manual ? false : undefined);\r\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\r\n    if(good === false) {\r\n      this.pushItem(item);\r\n    } else if(!item.noBlurOnPop) {\r\n      blurActiveElement(); // no better place for it\r\n    }\r\n\r\n    this.manual = false;\r\n  }\r\n\r\n  public findItemByType(type: NavigationItem['type']) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        return {item, index: i};\r\n      }\r\n    }\r\n  }\r\n\r\n  public back(type?: NavigationItem['type']) {\r\n    if(type) {\r\n      const ret = this.findItemByType(type);\r\n      if(ret) {\r\n        this.backByItem(ret.item, ret.index);\r\n        return;\r\n      }\r\n    }\r\n\r\n    history.back();\r\n  }\r\n\r\n  public backByItem(item: NavigationItem, index = this.navigations.indexOf(item)) {\r\n    this.manual = true;\r\n    // ! commented because 'popstate' event will be fired with delay\r\n    //if(index !== (this.navigations.length - 1)) {\r\n      this.navigations.splice(index, 1);\r\n      this.handleItem(item);\r\n    //}\r\n  }\r\n\r\n  public pushItem(item: NavigationItem) {\r\n    this.navigations.push(item);\r\n    this.debug && this.log('pushstate', item, this.navigations);\r\n\r\n    if(!item.noHistory) {\r\n      this.pushState();\r\n    }\r\n  }\r\n\r\n  private pushState() {\r\n    this.manual = false;\r\n    history.pushState(this.id, '');\r\n  }\r\n\r\n  public replaceState() {\r\n    history.replaceState(this.id, '', location.origin + location.pathname);\r\n  }\r\n\r\n  public removeItem(item: NavigationItem) {\r\n    if(!item) {\r\n      return;\r\n    }\r\n    \r\n    indexOfAndSplice(this.navigations, item);\r\n  }\r\n\r\n  public removeByType(type: NavigationItem['type'], single = false) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        this.navigations.splice(i, 1);\r\n\r\n        if(single) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst appNavigationController = new AppNavigationController();\r\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\r\nexport default appNavigationController;\r\n","export default function simulateEvent(elem: EventTarget, name: string) {\n  const event = new Event(name, {bubbles: true, cancelable: true});\n  elem.dispatchEvent(event);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nconst SetTransition = (\r\n  element: HTMLElement, \r\n  className: string, \r\n  forwards: boolean, \r\n  duration: number, \r\n  onTransitionEnd?: () => void, \r\n  useRafs?: number\r\n) => {\r\n  const {timeout, raf} = element.dataset;\r\n  if(timeout !== undefined) {\r\n    clearTimeout(+timeout);\r\n  }\r\n\r\n  if(raf !== undefined) {\r\n    window.cancelAnimationFrame(+raf);\r\n    if(!useRafs) {\r\n      delete element.dataset.raf;\r\n    }\r\n  }\r\n\r\n  // if(forwards && className && element.classList.contains(className) && !element.classList.contains('animating')) {\r\n  //   return;\r\n  // }\r\n\r\n  if(useRafs && rootScope.settings.animationsEnabled && duration) {\r\n    element.dataset.raf = '' + window.requestAnimationFrame(() => {\r\n      delete element.dataset.raf;\r\n      SetTransition(element, className, forwards, duration, onTransitionEnd, useRafs - 1);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if(forwards && className) {\r\n    element.classList.add(className);\r\n  }\r\n\r\n  const afterTimeout = () => {\r\n    delete element.dataset.timeout;\r\n    if(!forwards && className) {\r\n      element.classList.remove('backwards', className);\r\n    }\r\n\r\n    element.classList.remove('animating');\r\n    \r\n    onTransitionEnd && onTransitionEnd();\r\n  };\r\n\r\n  if(!rootScope.settings.animationsEnabled || !duration) {\r\n    element.classList.remove('animating', 'backwards');\r\n    afterTimeout();\r\n    return;\r\n  }\r\n\r\n  element.classList.add('animating');\r\n\r\n  element.classList.toggle('backwards', !forwards);\r\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\r\n};\r\n\r\nexport default SetTransition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { fastRaf } from \"./schedulers\";\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"./dom/isInDOM\";\r\n\r\nclass SequentialDom {\r\n  private promises: Partial<{\r\n    read: CancellablePromise<void>,\r\n    write: CancellablePromise<void>\r\n  }> = {};\r\n  private raf = fastRaf.bind(null);\r\n  private scheduled = false;\r\n\r\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\r\n    let promise = this.promises[kind];\r\n    if(!promise) {\r\n      this.scheduleFlush();\r\n      promise = this.promises[kind] = deferredPromise<void>();\r\n    }\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n    \r\n    return promise;\r\n  }\r\n\r\n  public measure(callback?: VoidFunction) {\r\n    return this.do('read', callback);\r\n  }\r\n\r\n  public mutate(callback?: VoidFunction) {\r\n    return this.do('write', callback);\r\n  }\r\n\r\n  /**\r\n   * Will fire instantly if element is not connected\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\r\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private scheduleFlush() {\r\n    if(!this.scheduled) {\r\n      this.scheduled = true;\r\n\r\n      this.raf(() => {\r\n        this.promises.read && this.promises.read.resolve();\r\n        this.promises.write && this.promises.write.resolve();\r\n\r\n        this.scheduled = false;\r\n        this.promises = {};\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sequentialDom = new SequentialDom();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\r\nexport default sequentialDom;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities?.length) {\r\n    // ! cannot do that here because have the same check before the sending in RichTextProcessor.parseMarkdown\r\n    /* const entity = entities[entities.length - 1];\r\n    const length = value.length;\r\n    const trimmedLength = value.trimRight().length;\r\n    if(length !== trimmedLength) {\r\n      entity.length -= length - trimmedLength;\r\n    } */\r\n\r\n    RichTextProcessor.combineSameEntities(entities);\r\n    RichTextProcessor.sortEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\n\nexport default function isSwipingBackSafari(e: TouchEvent | MouseEvent) {\n  return IS_MOBILE_SAFARI && e instanceof TouchEvent && e.touches[0].clientX < 30;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"bold\"], [style*=\"font-weight: 700\"], [style*=\"font-weight: 600\"], [style*=\"font-weight:700\"], [style*=\"font-weight:600\"], b, strong',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i, em',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike, del',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nconst tabulationMatch = '[style*=\"table-cell\"]';\r\n\r\n/* export function getDepth(child: Node, container?: Node) {\r\n  let depth = 0;\r\n\r\n  do {\r\n    if(child === container) {\r\n      return depth;\r\n    }\r\n\r\n    ++depth;\r\n  } while((child = child.parentNode) !== null);\r\n\r\n  return depth;\r\n} */\r\n\r\nconst BLOCK_TAG_NAMES = new Set([\r\n  'DIV',\r\n  'P',\r\n  'BR',\r\n  'LI',\r\n  'SECTION',\r\n  'H6',\r\n  'H5',\r\n  'H4',\r\n  'H3',\r\n  'H2',\r\n  'H1',\r\n]);\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    let nodeValue = node.nodeValue;\r\n\r\n    const tabulation = node.parentElement?.closest(tabulationMatch + ', [contenteditable]');\r\n    if(tabulation?.getAttribute('contenteditable') === null) {\r\n      nodeValue += ' ';\r\n      // line.push('\\t');\r\n      // ++offset.offset;\r\n    }\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.length) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        // let closestTag: MarkdownTag, closestElementByTag: Element, closestDepth = Infinity;\r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest?.getAttribute('contenteditable') !== null) {\r\n            /* const depth = getDepth(closest, parentElement.closest('[contenteditable]'));\r\n            if(closestDepth > depth) {\r\n              closestDepth = depth;\r\n              closestTag = tag;\r\n              closestElementByTag = closest;\r\n            } */\r\n            continue;\r\n          }\r\n\r\n          if(tag.entityName === 'messageEntityTextUrl') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              url: (closest as HTMLAnchorElement).href,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          } else if(tag.entityName === 'messageEntityMentionName') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              offset: offset.offset,\r\n              length: nodeValue.length,\r\n              user_id: (closest as HTMLElement).dataset.follow.toUserId()\r\n            });\r\n          } else {\r\n            entities.push({\r\n              _: tag.entityName as any,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = selNode === node;\r\n  const isBlock = BLOCK_TAG_NAMES.has(node.tagName);\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n    ++offset.offset;\r\n  } else if(node instanceof HTMLImageElement) {\r\n    const alt = node.alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  const wasLength = line.length;\r\n  if(isBlock && wasLength) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, wasLength);\r\n    ++offset.offset;\r\n  }\r\n\r\n  if(wasLength && node.tagName === 'P' && node.nextSibling) {\r\n    lines.push('');\r\n    ++offset.offset;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_MOBILE_SAFARI, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.name = 'notsearch_password';\r\n    input.autocomplete = 'off';\r\n\r\n    /* if(IS_SAFARI && !IS_MOBILE_SAFARI) {\r\n      input.setAttribute('readonly', '');\r\n      input.addEventListener('focus', () => {\r\n        input.removeAttribute('readonly');\r\n      }, {once: true});\r\n    } */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string) {\r\n  const span = document.createElement('span');\r\n  span.innerHTML = html;\r\n  return span;\r\n}\r\n"],"sourceRoot":""}