{"version":3,"sources":["webpack:///./src/components/passwordInputField.ts","webpack:///./src/helpers/dom/htmlToSpan.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/components/ripple.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/components/button.ts","webpack:///./src/components/misc.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/helpers/dom/selectElementContents.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/dispatchEvent.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/dom/isSwipingBackSafari.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/getRichElementValue.ts"],"names":["PasswordInputField","options","super","plainText","passwordVisible","onVisibilityClick","e","this","toggleVisible","classList","toggle","input","type","onVisibilityClickAdditional","setAttribute","name","autocomplete","stealthy","document","createElement","add","tabIndex","parentElement","prepend","insertBefore","cloneNode","nextSibling","container","append","addEventListener","htmlToSpan","html","span","innerHTML","isInputEmpty","element","hasAttribute","tagName","value","trim","PasswordMonkey","passwordInputField","size","needFrame","loadPromise","loadAnimationAsAsset","loop","autoplay","width","height","noCache","then","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","remove","rippleClickId","ripple","elem","callback","Promise","resolve","onEnd","attachListenerTo","querySelector","r","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","window","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","sqrt","abs","x","y","style","isRippleUnneeded","target","includes","touchEnd","settings","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","passwordInput","page","className","withInputWrapper","titleLangKey","subtitleLangKey","btnNext","btnNextI18n","IntlElement","key","label","getStateInterval","inputWrapper","state","getState","setInterval","_state","hint","wrapEmojiText","setLabel","onSubmit","update","preloader","setValueSilently","random","check","response","_","clearInterval","m","default","mount","monkey","removeAttribute","catch","err","select","isMobile","imageDiv","all","load","focus","pushToState","CLICK_EVENT_NAME","attachClickEvent","listenerSetter","bind","touchMouseDown","detachClickEvent","simulateClickEvent","asDiv","icon","noRipple","rippleSquare","onlyMobile","disabled","text","putPreloader","returnDiv","div","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","onMouseMove","openedMenu","diffX","right","diffY","bottom","closeBtnMenu","onClick","menuOverlay","dispatchEvent","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","body","windowWidth","windowHeight","verticalSide","sides","intermediateX","intermediateY","possibleSides","_cancelContextMenuOpening","_cancelContextMenuOpeningTimeout","cancelContextMenuOpening","clearTimeout","attachContextMenuListener","removeManual","timeout","capture","onCancel","replaceContent","node","firstChild","lastChild","replaceWith","textContent","init","findUpAttribute","entities","preventDefault","originalEvent","clipboardData","getData","usePlainText","match","curChild","nodeType","nodeValue","richValue","getRichValue","entities2","parseEntities","filter","mergeEntities","wrapDraftText","execCommand","InputState","required","validate","undefined","maxLength","showLengthOn","min","round","placeholder","canBeEdited","processInput","labelText","firstElementChild","String","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","border","labelEl","showingLength","wasError","inputLength","diff","isError","el","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","selectElementContents","labelOptions","setHeight","newHeight","currentHeight","transitionDuration","log","fireFakeInput","originalValue","isValid","isChanged","silent","setDraftValue","Error","Valid","setState","appNavigationController","navigations","id","manual","debug","currentHash","location","hash","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","history","scrollRestoration","good","noBlurOnPop","i","index","ret","findItemByType","backByItem","indexOf","splice","push","noHistory","origin","pathname","single","toggleDisability","elements","disable","forEach","simulateEvent","event","Event","bubbles","cancelable","SetTransition","forwards","onTransitionEnd","useRafs","raf","cancelAnimationFrame","afterTimeout","sequentialDom","promises","scheduled","kind","promise","scheduleFlush","do","read","write","isSwipingBackSafari","TouchEvent","passwordManager","invokeApi","result","currentHashPromise","newHashPromise","params","password","new_settings","email","currentPassword","invokeCrypto","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","hashes","new_password_hash","inputCheckPassword","auth","setUser","user","code","field","withEntities","lines","line","join","combineSameEntities","sortEntities","LoginPage","title","subtitle","attribute","closest","markdownTags","bold","entityName","underline","italic","monospace","strikethrough","link","mentionName","spoiler","BLOCK_TAG_NAMES","Set","getRichElementValue","selNode","selOffset","offset","substr","parentNode","tag","getAttribute","url","href","user_id","follow","toUserId","isSelected","isBlock","has","HTMLImageElement","alt","isTableCell","matches","wasEntitiesLength","wasLength"],"mappings":"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","file":"13.062462758d3f2349c63d.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_MOBILE_SAFARI, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.name = 'notsearch_password';\r\n    input.autocomplete = 'off';\r\n\r\n    /* if(IS_SAFARI && !IS_MOBILE_SAFARI) {\r\n      input.setAttribute('readonly', '');\r\n      input.addEventListener('focus', () => {\r\n        input.removeAttribute('readonly');\r\n      }, {once: true});\r\n    } */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string) {\r\n  const span = document.createElement('span');\r\n  span.innerHTML = html;\r\n  return span;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { LottieLoader } from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationAsAsset({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'TwoFactorSetupMonkeyPeek').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {IS_TOUCH_SUPPORTED} from \"../environment/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(\r\n  elem: HTMLElement, \r\n  callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), \r\n  onEnd: (id: number) => void = null, \r\n  prepend = false,\r\n  attachListenerTo = elem\r\n) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!IS_TOUCH_SUPPORTED) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    ) && (\r\n      attachListenerTo === elem \r\n      || !findUpAsChild(e.target, attachListenerTo)\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(IS_TOUCH_SUPPORTED) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    attachListenerTo.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      attachListenerTo.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        attachListenerTo.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    attachListenerTo.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(attachListenerTo.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/misc';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport passwordManager from '../lib/mtproto/passwordManager';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && passwordManager.getState().then(_state => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordInputField.setValueSilently('' + Math.random()); // prevent saving suggestion\r\n    passwordInputField.setValueSilently(value); // prevent saving suggestion\r\n\r\n    passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport simulateEvent from \"./dispatchEvent\";\r\n\r\nexport const CLICK_EVENT_NAME: 'mousedown' /* | 'touchend' */ | 'click' = (IS_TOUCH_SUPPORTED ? 'mousedown' : 'click') as any;\r\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\r\nexport function attachClickEvent(elem: HTMLElement | Window, callback: (e: /* TouchEvent |  */MouseEvent) => void, options: AttachClickOptions = {}) {\r\n  const add = options.listenerSetter ? options.listenerSetter.add(elem) : elem.addEventListener.bind(elem);\r\n  // const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\r\n\r\n  options.touchMouseDown = true;\r\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\r\n    add('mousedown', callback, options);\r\n  } else if(CLICK_EVENT_NAME === 'touchend') {\r\n    const o = {...options, once: true};\r\n\r\n    const onTouchStart = (e: TouchEvent) => {\r\n      const onTouchMove = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        remove('touchend', onTouchEnd, o);\r\n      };\r\n  \r\n      const onTouchEnd = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        callback(e);\r\n        if(options.once) {\r\n          remove('touchstart', onTouchStart);\r\n        }\r\n      };\r\n  \r\n      add('touchend', onTouchEnd, o);\r\n      add('touchmove', onTouchMove, o);\r\n    };\r\n\r\n    add('touchstart', onTouchStart);\r\n  } else {\r\n    add(CLICK_EVENT_NAME, callback, options);\r\n  } */\r\n  add(CLICK_EVENT_NAME, callback, options);\r\n}\r\n\r\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\r\n  // if(CLICK_EVENT_NAME === 'touchend') {\r\n  //   elem.removeEventListener('touchstart', callback, options);\r\n  // } else {\r\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\r\n  // }\r\n}\r\n\r\nexport function simulateClickEvent(elem: HTMLElement) {\r\n  simulateEvent(elem, CLICK_EVENT_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nexport type ButtonOptions = Partial<{\r\n  noRipple: true, \r\n  onlyMobile: true, \r\n  icon: string, \r\n  rippleSquare: true, \r\n  text: LangPackKey, \r\n  disabled: boolean,\r\n  asDiv: boolean\r\n}>;\r\n\r\nconst Button = (className: string, options: ButtonOptions = {}) => {\r\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\r\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\r\n\r\n  if(!options.noRipple) {\r\n    if(options.rippleSquare) {\r\n      button.classList.add('rp-square');\r\n    }\r\n\r\n    ripple(button);\r\n  }\r\n\r\n  if(options.onlyMobile) {\r\n    button.classList.add('only-handhelds');\r\n  }\r\n\r\n  if(options.disabled) {\r\n    button.setAttribute('disabled', 'true');\r\n  }\r\n\r\n  if(options.text) {\r\n    button.append(i18n(options.text));\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default Button;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { IS_APPLE, IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appNavigationController from \"./appNavigationController\";\r\n\r\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\r\n  const html = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\r\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n  </svg>`;\r\n\r\n  if(returnDiv) {\r\n    const div = document.createElement('div');\r\n    div.classList.add('preloader');\r\n    div.innerHTML = html;\r\n\r\n    if(elem) {\r\n      elem.appendChild(div);\r\n    }\r\n\r\n    return div;\r\n  }\r\n  \r\n  elem.insertAdjacentHTML('beforeend', html);\r\n  return elem.lastElementChild as HTMLElement;\r\n}\r\n\r\nMOUNT_CLASS_TO.putPreloader = putPreloader;\r\n\r\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\r\n  elem.classList.remove('tgico-' + icon);\r\n  elem.disabled = true;\r\n  putPreloader(elem);\r\n\r\n  return () => {\r\n    elem.innerHTML = '';\r\n    elem.classList.add('tgico-' + icon);\r\n    elem.removeAttribute('disabled');\r\n  };\r\n}\r\n\r\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\r\n  Array.from(elements).forEach(el => {\r\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\r\n    if(!match) return;\r\n    to[match[1]] = el as HTMLElement;\r\n  });\r\n} */\r\n\r\nlet onMouseMove = (e: MouseEvent) => {\r\n  let rect = openedMenu.getBoundingClientRect();\r\n  let {clientX, clientY} = e;\r\n  \r\n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\r\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\r\n  \r\n  if(diffX >= 100 || diffY >= 100) {\r\n    closeBtnMenu();\r\n    //openedMenu.parentElement.click();\r\n  }\r\n  //console.log('mousemove', diffX, diffY);\r\n};\r\n\r\nconst onClick = (e: MouseEvent | TouchEvent) => {\r\n  //cancelEvent(e);\r\n  closeBtnMenu();\r\n};\r\n\r\n// ! no need in this due to the same handler in appNavigationController\r\n/* const onKeyDown = (e: KeyboardEvent) => {\r\n  if(e.key === 'Escape') {\r\n    closeBtnMenu();\r\n    cancelEvent(e);\r\n  }\r\n}; */\r\n\r\nexport const closeBtnMenu = () => {\r\n  if(openedMenu) {\r\n    openedMenu.classList.remove('active');\r\n    openedMenu.parentElement.classList.remove('menu-open');\r\n    //openedMenu.previousElementSibling.remove(); // remove overlay\r\n    if(menuOverlay) menuOverlay.remove();\r\n    openedMenu = null;\r\n\r\n    rootScope.dispatchEvent('context_menu_toggle', false);\r\n  }\r\n  \r\n  if(openedMenuOnClose) {\r\n    openedMenuOnClose();\r\n    openedMenuOnClose = null;\r\n  }\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\r\n    window.removeEventListener('contextmenu', onClick);\r\n  }\r\n\r\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.removeByType('menu');\r\n  }\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  if(openedMenu) {\r\n    closeBtnMenu();\r\n  }\r\n  \r\n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\r\n    const rect = openedMenu.getBoundingClientRect();\r\n    const {innerWidth, innerHeight} = window;\r\n\r\n    console.log(innerWidth, innerHeight, rect);\r\n  } */\r\n});\r\n\r\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\r\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\r\n  closeBtnMenu();\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.pushItem({\r\n      type: 'menu',\r\n      onPop: (canAnimate) => {\r\n        closeBtnMenu();\r\n      }\r\n    });\r\n  }\r\n  \r\n  openedMenu = menuElement;\r\n  openedMenu.classList.add('active');\r\n  openedMenu.parentElement.classList.add('menu-open');\r\n\r\n  if(!menuOverlay) {\r\n    menuOverlay = document.createElement('div');\r\n    menuOverlay.classList.add('btn-menu-overlay');\r\n\r\n    // ! because this event must be canceled, and can't cancel on menu click (below)\r\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n      cancelEvent(e);\r\n      onClick(e);\r\n    });\r\n  }\r\n\r\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\r\n\r\n  //document.body.classList.add('disable-hover');\r\n  \r\n  openedMenuOnClose = onClose;\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\r\n    window.addEventListener('contextmenu', onClick, {once: true});\r\n  }\r\n\r\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\r\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n    cancelEvent(e);\r\n    onClick(e);\r\n  }); */\r\n  \r\n  // ! safari iOS doesn't handle window click event on overlay, idk why\r\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  rootScope.dispatchEvent('context_menu_toggle', true);\r\n}\r\n\r\nconst PADDING_TOP = 8;\r\nconst PADDING_LEFT = 8;\r\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\r\n  //let {clientX, clientY} = e;\r\n\r\n  // * side mean the OPEN side\r\n\r\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\r\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\r\n  const rect = document.body.getBoundingClientRect();\r\n  const windowWidth = rect.width;\r\n  const windowHeight = rect.height;\r\n\r\n  side = mediaSizes.isMobile ? 'right' : 'left';\r\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\r\n\r\n  const getSides = () => {\r\n    return {\r\n      x: {\r\n        left: pageX,\r\n        right: pageX - menuWidth\r\n      },\r\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      y: {\r\n        top: pageY,\r\n        bottom: pageY - menuHeight\r\n      },\r\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n    };\r\n  };\r\n\r\n  const sides = getSides();\r\n\r\n  const possibleSides = {\r\n    x: {\r\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\r\n      right: sides.x.right >= PADDING_LEFT\r\n    },\r\n    y: {\r\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\r\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\r\n    }\r\n  };\r\n\r\n  /* if(side === undefined) {\r\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\r\n      side = 'right';\r\n    }\r\n  } */\r\n\r\n  {\r\n    /* const x = sides.x;\r\n\r\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\r\n    if(side) {\r\n      s.findAndSplice(s => s === side);\r\n      s.unshift(side);\r\n    }\r\n\r\n    const possibleSide = s.find(s => possibleSides.x[s]); */\r\n    let left: number;\r\n    /* if(possibleSide) {\r\n      left = x[possibleSide];\r\n      side = possibleSide;\r\n    } else {\r\n      left = sides.intermediateX;\r\n      side = undefined;\r\n    } */\r\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\r\n  \r\n    elem.style.left = left + 'px';\r\n  }\r\n\r\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\r\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\r\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\r\n    verticalSide = 'bottom';\r\n  } else {\r\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\r\n    verticalSide = 'top';\r\n  } */\r\n\r\n  {\r\n    let top: number;\r\n\r\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\r\n  \r\n    elem.style.top = top + 'px';\r\n  }\r\n  \r\n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\r\n  elem.classList.add(\r\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\r\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\r\n    '-' +\r\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\r\n}\r\n\r\nlet _cancelContextMenuOpening = false, _cancelContextMenuOpeningTimeout = 0;\r\nexport function cancelContextMenuOpening() {\r\n  if(_cancelContextMenuOpeningTimeout) {\r\n    clearTimeout(_cancelContextMenuOpeningTimeout);\r\n  }\r\n    \r\n  _cancelContextMenuOpeningTimeout = window.setTimeout(() => {\r\n    _cancelContextMenuOpeningTimeout = 0;\r\n    _cancelContextMenuOpening = false;\r\n  }, .4e3);\r\n\r\n  _cancelContextMenuOpening = true;\r\n}\r\n\r\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\r\n  const add = listenerSetter ? listenerSetter.add(element) : element.addEventListener.bind(element);\r\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\r\n\r\n  if(IS_APPLE && IS_TOUCH_SUPPORTED) {\r\n    let timeout: number;\r\n\r\n    const options: EventListenerOptions = {capture: true};\r\n\r\n    const onCancel = () => {\r\n      clearTimeout(timeout);\r\n      // @ts-ignore\r\n      remove('touchmove', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchend', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchcancel', onCancel, options);\r\n    };\r\n\r\n    add('touchstart', (e: TouchEvent) => {\r\n      if(e.touches.length > 1) {\r\n        onCancel();\r\n        return;\r\n      }\r\n  \r\n      add('touchmove', onCancel, options);\r\n      add('touchend', onCancel, options);\r\n      add('touchcancel', onCancel, options);\r\n\r\n      timeout = window.setTimeout(() => {\r\n        if(_cancelContextMenuOpening) {\r\n          onCancel();\r\n          return;\r\n        }\r\n\r\n        callback(e.touches[0]);\r\n        onCancel();\r\n\r\n        if(openedMenu) {\r\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n        }\r\n      }, .4e3);\r\n    });\r\n\r\n    /* if(!isSafari) {\r\n      add('contextmenu', (e: any) => {\r\n        cancelEvent(e);\r\n      }, {passive: false, capture: true});\r\n    } */\r\n  } else {\r\n    add('contextmenu', IS_TOUCH_SUPPORTED ? (e: any) => {\r\n      callback(e);\r\n\r\n      if(openedMenu) {\r\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n      }\r\n    } : callback);\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport selectElementContents from \"../helpers/dom/selectElementContents\";\r\nimport { MessageEntity } from \"../layer\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport SetTransition from \"./singleTransition\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    let text: string, entities: MessageEntity[];\r\n\r\n    // @ts-ignore\r\n    let plainText: string = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n    let usePlainText = true;\r\n\r\n    // @ts-ignore\r\n    let html: string = (e.originalEvent || e).clipboardData.getData('text/html');\r\n    if(html.trim()) {\r\n      html = html.replace(/<style([\\s\\S]*)<\\/style>/, '');\r\n      html = html.replace(/<!--([\\s\\S]*)-->/, '');\r\n\r\n      const match = html.match(/<body>([\\s\\S]*)<\\/body>/);\r\n      if(match) {\r\n        html = match[1].trim();\r\n      }\r\n\r\n      let span: HTMLElement = document.createElement('span');\r\n      span.innerHTML = html;\r\n\r\n      let curChild = span.firstChild;\r\n      while(curChild) { // * fix whitespace between elements like <p>asd</p>\\n<p>zxc</p>\r\n        let nextSibling = curChild.nextSibling;\r\n        if(curChild.nodeType === 3) {\r\n          if(!curChild.nodeValue.trim()) {\r\n            curChild.remove();\r\n          }\r\n        }\r\n\r\n        curChild = nextSibling;\r\n      }\r\n\r\n      const richValue = getRichValue(span, true);\r\n      if(richValue.value.replace(/\\s/g, '').length === plainText.replace(/\\s/g, '').length) {\r\n        text = richValue.value;\r\n        entities = richValue.entities;\r\n        usePlainText = false;\r\n  \r\n        let entities2 = RichTextProcessor.parseEntities(text);\r\n        entities2 = entities2.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n        RichTextProcessor.mergeEntities(entities, entities2);\r\n      }\r\n    }\r\n    \r\n    if(usePlainText) {\r\n      text = plainText;\r\n      entities = RichTextProcessor.parseEntities(text);\r\n      entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    }\r\n\r\n    text = RichTextProcessor.wrapDraftText(text, {entities});\r\n    \r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: boolean,\r\n  required?: boolean,\r\n  canBeEdited?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  // protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength !== undefined && options.showLengthOn === undefined) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText, canBeEdited = true} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"${String(!!canBeEdited)}\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        // this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if(!this.value) { // * avoid selecting whole empty field on iOS devices\r\n      return;\r\n    }\r\n\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    } else {\r\n      selectElementContents(this.input);\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput(setHeight = true) {\r\n    const {scrollHeight: newHeight/* , clientHeight */} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    const currentHeight = +this.input.style.height.replace('px', '');\r\n    if(currentHeight === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const TRANSITION_DURATION_FACTOR = 50;\r\n    const transitionDuration = Math.round(\r\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\r\n    );\r\n\r\n    // this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.transitionDuration = `${transitionDuration}ms`;\r\n\r\n    if(setHeight) {\r\n      this.input.style.height = newHeight ? newHeight + 'px' : '';\r\n    }\r\n\r\n    const className = 'is-changing-height';\r\n    SetTransition(this.input, className, true, transitionDuration, () => {\r\n      this.input.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public isValidToChange() {\r\n    return this.isValid() && this.isChanged();\r\n  }\r\n\r\n  public setDraftValue(value = '', silent = false) {\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n    this.setDraftValue(value, silent);\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// https://stackoverflow.com/a/6150060\nexport default function selectElementContents(el: HTMLElement) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const sel = window.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport { logger } from \"../lib/logger\";\r\nimport { doubleRaf } from \"../helpers/schedulers\";\r\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { indexOfAndSplice } from \"../helpers/array\";\r\nimport isSwipingBackSafari from \"../helpers/dom/isSwipingBackSafari\";\r\n\r\nexport type NavigationItem = {\r\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \r\n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | \r\n    'global-search' | 'voice' | 'mobile-search',\r\n  onPop: (canAnimate: boolean) => boolean | void,\r\n  onEscape?: () => boolean,\r\n  noHistory?: boolean,\r\n  noBlurOnPop?: boolean,\r\n};\r\n\r\nexport class AppNavigationController {\r\n  private navigations: Array<NavigationItem> = [];\r\n  private id = Date.now();\r\n  private manual = false;\r\n  private log = logger('NC');\r\n  private debug = true;\r\n  private currentHash = window.location.hash;\r\n  public onHashChange: () => void;\r\n\r\n  constructor() {\r\n    let isPossibleSwipe = false;\r\n    window.addEventListener('popstate', (e) => {\r\n      this.debug && this.log('popstate', e, isPossibleSwipe);\r\n\r\n      if(window.location.hash !== this.currentHash) {\r\n        this.onHashChange && this.onHashChange();\r\n        this.replaceState();\r\n        return;\r\n      }\r\n      this.currentHash = window.location.hash;\r\n\r\n      const id: number = e.state;\r\n      if(id !== this.id/*  && !this.navigations.length */) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      const item = this.navigations.pop();\r\n      if(!item) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      this.manual = !isPossibleSwipe;\r\n      this.handleItem(item);\r\n      //this.pushState(); // * prevent adding forward arrow\r\n    });\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      const item = this.navigations[this.navigations.length - 1];\r\n      if(!item) return;\r\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\r\n        cancelEvent(e);\r\n        this.back(item.type);\r\n      }\r\n    }, {capture: true, passive: false});\r\n\r\n    if(IS_MOBILE_SAFARI) {\r\n      const options = {passive: true};\r\n      window.addEventListener('touchstart', (e) => {\r\n        if(e.touches.length > 1) return;\r\n        this.debug && this.log('touchstart');\r\n\r\n        if(isSwipingBackSafari(e)) {\r\n          isPossibleSwipe = true;\r\n\r\n          window.addEventListener('touchend', () => {\r\n            setTimeout(() => {\r\n              isPossibleSwipe = false;\r\n            }, 100);\r\n          }, {passive: true, once: true});\r\n        }\r\n\r\n        /* const detach = () => {\r\n          window.removeEventListener('touchend', onTouchEnd);\r\n          window.removeEventListener('touchmove', onTouchMove);\r\n        };\r\n\r\n        let moved = false;\r\n        const onTouchMove = (e: TouchEvent) => {\r\n          this.debug && this.log('touchmove');\r\n          if(e.touches.length > 1) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          moved = true;\r\n        };\r\n\r\n        const onTouchEnd = (e: TouchEvent) => {\r\n          this.debug && this.log('touchend');\r\n          if(e.touches.length > 1 || !moved) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          isPossibleSwipe = true;\r\n          doubleRaf().then(() => {\r\n            isPossibleSwipe = false;\r\n          });\r\n\r\n          detach();\r\n        };\r\n\r\n        window.addEventListener('touchend', onTouchEnd, options);\r\n        window.addEventListener('touchmove', onTouchMove, options); */\r\n      }, options);\r\n    }\r\n\r\n    history.scrollRestoration = 'manual';\r\n\r\n    this.pushState(); // * push init state\r\n  }\r\n\r\n  private handleItem(item: NavigationItem) {\r\n    const good = item.onPop(!this.manual ? false : undefined);\r\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\r\n    if(good === false) {\r\n      this.pushItem(item);\r\n    } else if(!item.noBlurOnPop) {\r\n      blurActiveElement(); // no better place for it\r\n    }\r\n\r\n    this.manual = false;\r\n  }\r\n\r\n  public findItemByType(type: NavigationItem['type']) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        return {item, index: i};\r\n      }\r\n    }\r\n  }\r\n\r\n  public back(type?: NavigationItem['type']) {\r\n    if(type) {\r\n      const ret = this.findItemByType(type);\r\n      if(ret) {\r\n        this.backByItem(ret.item, ret.index);\r\n        return;\r\n      }\r\n    }\r\n\r\n    history.back();\r\n  }\r\n\r\n  public backByItem(item: NavigationItem, index = this.navigations.indexOf(item)) {\r\n    this.manual = true;\r\n    // ! commented because 'popstate' event will be fired with delay\r\n    //if(index !== (this.navigations.length - 1)) {\r\n      this.navigations.splice(index, 1);\r\n      this.handleItem(item);\r\n    //}\r\n  }\r\n\r\n  public pushItem(item: NavigationItem) {\r\n    this.navigations.push(item);\r\n    this.debug && this.log('pushstate', item, this.navigations);\r\n\r\n    if(!item.noHistory) {\r\n      this.pushState();\r\n    }\r\n  }\r\n\r\n  private pushState() {\r\n    this.manual = false;\r\n    history.pushState(this.id, '');\r\n  }\r\n\r\n  public replaceState() {\r\n    history.replaceState(this.id, '', location.origin + location.pathname);\r\n  }\r\n\r\n  public removeItem(item: NavigationItem) {\r\n    if(!item) {\r\n      return;\r\n    }\r\n    \r\n    indexOfAndSplice(this.navigations, item);\r\n  }\r\n\r\n  public removeByType(type: NavigationItem['type'], single = false) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        this.navigations.splice(i, 1);\r\n\r\n        if(single) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst appNavigationController = new AppNavigationController();\r\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\r\nexport default appNavigationController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","export default function simulateEvent(elem: EventTarget, name: string) {\n  const event = new Event(name, {bubbles: true, cancelable: true});\n  elem.dispatchEvent(event);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nconst SetTransition = (\r\n  element: HTMLElement, \r\n  className: string, \r\n  forwards: boolean, \r\n  duration: number, \r\n  onTransitionEnd?: () => void, \r\n  useRafs?: number\r\n) => {\r\n  const {timeout, raf} = element.dataset;\r\n  if(timeout !== undefined) {\r\n    clearTimeout(+timeout);\r\n  }\r\n\r\n  if(raf !== undefined) {\r\n    window.cancelAnimationFrame(+raf);\r\n    if(!useRafs) {\r\n      delete element.dataset.raf;\r\n    }\r\n  }\r\n\r\n  // if(forwards && className && element.classList.contains(className) && !element.classList.contains('animating')) {\r\n  //   return;\r\n  // }\r\n\r\n  if(useRafs && rootScope.settings.animationsEnabled && duration) {\r\n    element.dataset.raf = '' + window.requestAnimationFrame(() => {\r\n      delete element.dataset.raf;\r\n      SetTransition(element, className, forwards, duration, onTransitionEnd, useRafs - 1);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if(forwards && className) {\r\n    element.classList.add(className);\r\n  }\r\n\r\n  const afterTimeout = () => {\r\n    delete element.dataset.timeout;\r\n    if(!forwards && className) {\r\n      element.classList.remove('backwards', className);\r\n    }\r\n\r\n    element.classList.remove('animating');\r\n    \r\n    onTransitionEnd && onTransitionEnd();\r\n  };\r\n\r\n  if(!rootScope.settings.animationsEnabled || !duration) {\r\n    element.classList.remove('animating', 'backwards');\r\n    afterTimeout();\r\n    return;\r\n  }\r\n\r\n  element.classList.add('animating');\r\n\r\n  element.classList.toggle('backwards', !forwards);\r\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\r\n};\r\n\r\nexport default SetTransition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { fastRaf } from \"./schedulers\";\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"./dom/isInDOM\";\r\n\r\nclass SequentialDom {\r\n  private promises: Partial<{\r\n    read: CancellablePromise<void>,\r\n    write: CancellablePromise<void>\r\n  }> = {};\r\n  private raf = fastRaf.bind(null);\r\n  private scheduled = false;\r\n\r\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\r\n    let promise = this.promises[kind];\r\n    if(!promise) {\r\n      this.scheduleFlush();\r\n      promise = this.promises[kind] = deferredPromise<void>();\r\n    }\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n    \r\n    return promise;\r\n  }\r\n\r\n  public measure(callback?: VoidFunction) {\r\n    return this.do('read', callback);\r\n  }\r\n\r\n  public mutate(callback?: VoidFunction) {\r\n    return this.do('write', callback);\r\n  }\r\n\r\n  /**\r\n   * Will fire instantly if element is not connected\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\r\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private scheduleFlush() {\r\n    if(!this.scheduled) {\r\n      this.scheduled = true;\r\n\r\n      this.raf(() => {\r\n        this.promises.read && this.promises.read.resolve();\r\n        this.promises.write && this.promises.write.resolve();\r\n\r\n        this.scheduled = false;\r\n        this.promises = {};\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sequentialDom = new SequentialDom();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\r\nexport default sequentialDom;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\n\nexport default function isSwipingBackSafari(e: TouchEvent | MouseEvent) {\n  return IS_MOBILE_SAFARI && e instanceof TouchEvent && e.touches[0].clientX < 30;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities?.length) {\r\n    // ! cannot do that here because have the same check before the sending in RichTextProcessor.parseMarkdown\r\n    /* const entity = entities[entities.length - 1];\r\n    const length = value.length;\r\n    const trimmedLength = value.trimRight().length;\r\n    if(length !== trimmedLength) {\r\n      entity.length -= length - trimmedLength;\r\n    } */\r\n\r\n    RichTextProcessor.combineSameEntities(entities);\r\n    RichTextProcessor.sortEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName' | 'spoiler';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: Extract<MessageEntity['_'], 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName' | 'messageEntitySpoiler'>;\r\n};\r\n\r\n// https://core.telegram.org/bots/api#html-style\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"bold\"], [style*=\"font-weight: 700\"], [style*=\"font-weight: 600\"], [style*=\"font-weight:700\"], [style*=\"font-weight:600\"], b, strong',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u, ins',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i, em',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike, del, s',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  },\r\n  spoiler: {\r\n    match: '[style*=\"spoiler\"]',\r\n    entityName: 'messageEntitySpoiler'\r\n  }\r\n};\r\n\r\nconst tabulationMatch = '[style*=\"table-cell\"], th, td';\r\n\r\n/* export function getDepth(child: Node, container?: Node) {\r\n  let depth = 0;\r\n\r\n  do {\r\n    if(child === container) {\r\n      return depth;\r\n    }\r\n\r\n    ++depth;\r\n  } while((child = child.parentNode) !== null);\r\n\r\n  return depth;\r\n} */\r\n\r\nconst BLOCK_TAG_NAMES = new Set([\r\n  'DIV',\r\n  'P',\r\n  'BR',\r\n  'LI',\r\n  'SECTION',\r\n  'H6',\r\n  'H5',\r\n  'H4',\r\n  'H3',\r\n  'H2',\r\n  'H1',\r\n  'TR'\r\n]);\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    let nodeValue = node.nodeValue;\r\n\r\n    /* const tabulation = node.parentElement?.closest(tabulationMatch + ', [contenteditable]');\r\n    if(tabulation?.getAttribute('contenteditable') === null) {\r\n      nodeValue += ' ';\r\n      // line.push('\\t');\r\n      // ++offset.offset;\r\n    } */\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.length) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        // let closestTag: MarkdownTag, closestElementByTag: Element, closestDepth = Infinity;\r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest?.getAttribute('contenteditable') !== null) {\r\n            /* const depth = getDepth(closest, parentElement.closest('[contenteditable]'));\r\n            if(closestDepth > depth) {\r\n              closestDepth = depth;\r\n              closestTag = tag;\r\n              closestElementByTag = closest;\r\n            } */\r\n            continue;\r\n          }\r\n\r\n          if(tag.entityName === 'messageEntityTextUrl') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              url: (closest as HTMLAnchorElement).href,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          } else if(tag.entityName === 'messageEntityMentionName') {\r\n            entities.push({\r\n              _: tag.entityName,\r\n              offset: offset.offset,\r\n              length: nodeValue.length,\r\n              user_id: (closest as HTMLElement).dataset.follow.toUserId()\r\n            });\r\n          } else {\r\n            entities.push({\r\n              _: tag.entityName as any,\r\n              offset: offset.offset,\r\n              length: nodeValue.length\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = selNode === node;\r\n  const isBlock = BLOCK_TAG_NAMES.has(node.tagName);\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n    ++offset.offset;\r\n  } else if(node instanceof HTMLImageElement) {\r\n    const alt = node.alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  const isTableCell = node.matches(tabulationMatch);\r\n  const wasEntitiesLength = entities?.length;\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isTableCell && node.nextSibling) {\r\n    line.push(' ');\r\n    ++offset.offset;\r\n\r\n    // * combine entities such as url after adding space\r\n    if(wasEntitiesLength !== undefined) {\r\n      for(let i = wasEntitiesLength, length = entities.length; i < length; ++i) {\r\n        ++entities[i].length;\r\n      }\r\n    }\r\n  }\r\n\r\n  const wasLength = line.length;\r\n  if(isBlock && wasLength) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, wasLength);\r\n    ++offset.offset;\r\n  }\r\n\r\n  if(wasLength && node.tagName === 'P' && node.nextSibling) {\r\n    lines.push('');\r\n    ++offset.offset;\r\n  }\r\n}\r\n"],"sourceRoot":""}