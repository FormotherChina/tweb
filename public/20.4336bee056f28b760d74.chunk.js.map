{"version":3,"sources":["webpack:///./src/components/telInputField.ts","webpack:///./src/pages/pageSignIn.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts","webpack:///./src/helpers/formatPhoneNumber.ts"],"names":["TelInputField","options","super","label","name","pasted","lastValue","this","container","classList","add","telEl","input","HTMLInputElement","type","autocomplete","inputMode","pixelRatio","window","devicePixelRatio","letterSpacing","style","setProperty","originalFunc","setValueSilently","bind","value","addEventListener","remove","formattedPhoneNumber","Math","abs","length","setLabel","formatted","country","countryCode","leftPattern","replace","code","dataset","onInput","e","key","test","metaKey","ctrlKey","shiftKey","preventDefault","btnQr","btnNext","page","setCountries","countries","countriesList","filter","pFlags","hidden","sort","a","b","default_name","localeCompare","liMap","Map","lastCountrySelected","lastCountryCodeSelected","inputWrapper","document","createElement","countryInputField","countryInput","selectWrapper","arrowDown","append","selectList","appendChild","initSelect","forEach","c","emoji","iso2","liArr","country_codes","li","wrapped","wrapEmojiText","spanEmoji","innerHTML","el","defaultName","span","innerText","country_code","push","set","button","target","selectCountryByTarget","childNodes","phoneCode","querySelector","find","_countryCode","telInputField","hidePicker","setTimeout","focus","hideTimeout","get","display","clearTimeout","undefined","offsetWidth","select","pageEl","parentElement","element","position","margin","mouseDownHandlerAttached","onMouseDown","capture","removeEventListener","_value","toLowerCase","matches","good","Boolean","str","indexOf","cancelBubble","blur","loadLottieWorkers","countryName","visibility","onSubmit","signedCheckboxField","text","withRipple","checked","keepSigned","pushToState","toggleStorage","getState","then","state","storage","isAvailable","toggle","phone_number","invokeApi","api_id","id","api_hash","hash","settings","_","m","default","mount","Object","assign","catch","err","setError","console","error","h4","subtitle","nearestDcResult","langPack","getFromCache","getLangPack","lang_code","dcs","Set","done","this_dc","promise","nearest_dc","getNetworker","Promise","resolve","dcId","delete","_dcs","g","shift","dbKey","finally","removeAttribute","ScrollableBase","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Error","Array","from","children","onScroll","passive","cancelAnimationFrame","Scrollable","onScrollOffset","withPaddingContainer","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","onScrolledTop","onScrolledBottom","splitUp","onAdditionalScroll","requestAnimationFrame","scrollTop","checkForTriggers","scrollHeight","maxScrollTop","clientHeight","setListeners","elements","padding","prepend","round","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","disabled","toggleDisability","stateKey","stateValue","stateValues","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","border","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","setAttribute","findUpTag","tag","closest","placeCaretAtEnd","ignoreTouchCheck","activeElement","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","prefixes","maxPrefixLength","setPrefix","prefix","max","formatPhoneNumber","originalStr","size","prefixCountry","slice","i","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","min","split","symbol","idx"],"mappings":"uFAAA,qEAYe,MAAMA,UAAsB,IAIzC,YAAYC,EAER,IACFC,MAAM,OAAD,QACHC,MAAO,mCAEPC,KAAM,SACHH,IAVC,KAAAI,QAAS,EACV,KAAAC,UAAY,GAYjBC,KAAKC,UAAUC,UAAUC,IAAI,qBAE7B,IAAIC,EAAQJ,KAAKK,MACjB,GAAGD,aAAiBE,iBAClBF,EAAMG,KAAO,MACbH,EAAMI,aAAe,qBAChB,CACLJ,EAAMK,UAAY,UAElB,MAAMC,EAAaC,OAAOC,iBAC1B,GAAGF,EAAa,EAAG,CACjB,IAAIG,EACD,WACDA,GAA8B,IAAdH,EACR,eACRG,EAAgB,GAGlBT,EAAMU,MAAMC,YAAY,mBAAoBF,EAAgB,MAG9D,MAAMG,EAAehB,KAAKiB,iBAAiBC,KAAKlB,MAChDA,KAAKiB,iBAAoBE,IACvBH,EAAaG,GACb,YAAgBnB,KAAKK,OAAO,IAIhCD,EAAMgB,iBAAiB,QAAS,KAE9BhB,EAAMF,UAAUmB,OAAO,SAEvB,MAAMF,EAAQnB,KAAKmB,MAUnB,IAAIG,EATSC,KAAKC,IAAIL,EAAMM,OAASzB,KAAKD,UAAU0B,QAC1C,IAAMzB,KAAKF,QAAU,mBAC7BE,KAAKiB,iBAAiBjB,KAAKD,UAAYoB,GAGzCnB,KAAKF,QAAS,EAEdE,KAAK0B,WAGL,IAAIC,EAAmBC,EAAsBC,EAA8BC,EAAc,GACnD,MAAnC9B,KAAKmB,MAAMY,QAAQ,MAAO,KAC3B/B,KAAKiB,iBAAiB,MAEtBK,EAAuB,YAAkBtB,KAAKmB,OAC9CQ,EAAYL,EAAqBK,UACjCC,EAAUN,EAAqBM,QAC/BE,EAAcR,EAAqBQ,YACnCD,EAAcP,EAAqBU,KACnChC,KAAKiB,iBAAiBjB,KAAKD,UAAY4B,EAAY,IAAMA,EAAY,KAGvEvB,EAAM6B,QAAQH,YAAcA,EAI5BpC,EAAQwC,SAAWxC,EAAQwC,QAAQZ,KAGrClB,EAAMgB,iBAAiB,QAAS,KAC9BpB,KAAKF,QAAS,IAQhBM,EAAMgB,iBAAiB,WAAae,IAElC,MAAMC,EAAMD,EAAEC,IACd,GAAG,KAAKC,KAAKD,KAAUD,EAAEG,UAAWH,EAAEI,SAAoB,cAARH,IAAiC,MAARA,IAAeD,EAAEK,UAE1F,OADAL,EAAEM,kBACK,O,gCCtGf,0R,sSA4CA,IAAuCC,EAAnCC,EAA6B,KAmcjC,MAAMC,EAAO,IAAI,IAAK,aAAa,EAjchB,KAmBjB,MAAMC,EAAe,KACnBC,EAAY,UAAKC,cAChBC,OAAOpB,IAAU,MAAC,QAAe,QAAd,EAAAA,EAAQqB,cAAM,eAAEC,UACnCC,KAAK,CAACC,EAAGC,KAAOD,EAAEvD,MAAQuD,EAAEE,cAAcC,cAAcF,EAAExD,MAAQwD,EAAEC,gBAEvE,IAAIR,EAEJD,IAEA,UAAUzB,iBAAiB,kBAAmB,KAC5CyB,MAGF,MAAMW,EAAsC,IAAIC,IAEhD,IAAIC,EAAkCC,EAEtC,MAAMC,EAAeC,SAASC,cAAc,OAC5CF,EAAa1D,UAAUC,IAAI,iBAE3B,MAAM4D,EAAoB,IAAI,IAAW,CACvCnE,MAAO,6BACPC,KAAM,gBAGRkE,EAAkB9D,UAAUC,UAAUC,IAAI,gBAE1C,MAAM6D,EAAeD,EAAkB1D,MAGjC4D,EAAgBJ,SAASC,cAAc,OAC7CG,EAAc/D,UAAUC,IAAI,iBAAkB,YAAa,QAE3D,MAAM+D,EAAYL,SAASC,cAAc,QACzCI,EAAUhE,UAAUC,IAAI,QAAS,cACjC4D,EAAkB9D,UAAUkE,OAAOD,GAEnC,MAAME,EAAaP,SAASC,cAAc,MAC1CG,EAAcI,YAAYD,GAEX,IAAI,IAAWH,GAE9B,IAAIK,EAAa,KACfA,EAAa,KAEbxB,EAAUyB,QAASC,IACjB,MAAMC,EAAQ,YAAgBD,EAAEE,MAE1BC,EAA8B,GACpCH,EAAEI,cAAcL,QAAS1C,IACvB,MAAMgD,EAAKhB,SAASC,cAAc,MAElC,IAAIgB,EAAU,IAAkBC,cAAcN,GAC9C,GAAG,IAAoB,CACrB,MAAMO,EAAYnB,SAASC,cAAc,QACzCkB,EAAUC,UAAYH,EACtBD,EAAGV,OAAOa,QAEVH,EAAGI,UAAYH,EAGjB,MAAMI,EAAK,eAAKV,EAAElB,cAClB4B,EAAGjD,QAAQkD,YAAcX,EAAElB,aAC3BuB,EAAGV,OAAOe,GAEV,MAAME,EAAOvB,SAASC,cAAc,QACpCsB,EAAKlF,UAAUC,IAAI,cACnBiF,EAAKC,UAAY,IAAMxD,EAAYyD,aACnCT,EAAGR,YAAYe,GAEfT,EAAMY,KAAKV,GACXT,EAAWD,OAAOU,KAGpBrB,EAAMgC,IAAIhB,EAAEE,KAAMC,KAGpBP,EAAWhD,iBAAiB,YAAce,IACxC,GAAgB,IAAbA,EAAEsD,OACH,OAGF,MAAMC,EAAS,YAAUvD,EAAEuD,OAAQ,MACnCC,EAAsBD,KAIxB3B,EAAkB9D,UAAUoE,YAAYJ,IAG1C,MAAM0B,EAAyBD,IAC7B,MAAMP,EAAeO,EAAOE,WAAW,GAAmB3D,QAAQkD,YAC5DU,EAAYH,EAAOI,cAA2B,eAAeT,UAC7DxD,EAAcgE,EAAU9D,QAAQ,MAAO,IAE7C,YAAeiC,EAAc,eAAKmB,IAClC,YAAcnB,EAAc,SAC5BN,EAAsBZ,EAAUiD,KAAKvB,GAAKA,EAAElB,eAAiB6B,GAC7DxB,EAA0BD,EAAoBkB,cAAcmB,KAAKC,GAAgBA,EAAaV,eAAiBzD,GAE/GoE,GAAc9E,MAAQ8E,GAAclG,UAAY8F,EAChDK,IACAC,WAAW,KACT/F,GAAMgG,QACN,YAAgBhG,IAAO,IACtB,IAKL,IAAIiG,EAFJ/B,IAIAN,EAAa5C,iBAAiB,SAAS,SAAoCe,GACtEmC,EACDA,IAEAxB,EAAUyB,QAASC,IACjBhB,EAAM8C,IAAI9B,EAAEE,MAAMH,QAAQM,GAAMA,EAAG/D,MAAMyF,QAAU,MAIvDC,aAAaH,GACbA,OAAcI,EAEdxC,EAAc/D,UAAUmB,OAAO,QAC1B4C,EAAcyC,YACnBzC,EAAc/D,UAAUC,IAAI,UAE5B4D,EAAkB4C,SAElB,YAAiB,CACf1G,UAAW2C,EAAKgE,OAAOC,cAAcA,cACrCC,QAAS9C,EACT+C,SAAU,QACVC,OAAQ,IAGVb,WAAW,KACLc,IACFpD,SAASzC,iBAAiB,YAAa8F,EAAa,CAACC,SAAS,IAC9DF,GAA2B,IAE5B,MAGL,IAAIA,GAA2B,EAC/B,MAAMC,EAAe/E,IAChB,YAAgBA,EAAEuD,OAAQ,iBAG1BvD,EAAEuD,SAAW1B,IAIhBkC,IACArC,SAASuD,oBAAoB,YAAaF,EAAa,CAACC,SAAS,IACjEF,GAA2B,IAGvBf,EAAa,UACEO,IAAhBJ,IACHpC,EAAc/D,UAAUmB,OAAO,UAC/BgF,EAAc1F,OAAOwF,WAAW,KAC9BlC,EAAc/D,UAAUC,IAAI,QAC5BkG,OAAcI,GACb,OAQLzC,EAAa5C,iBAAiB,QAAUe,IACtC,MAAMC,EAAMD,EAAEC,IACd,GAAGD,EAAEI,SAAmB,YAARH,EAAmB,OAAO,EAG1C,IAAIiF,EAAStD,EAAkB5C,MAAMmG,cACjCC,EAAyB,GAC7BzE,EAAUyB,QAASC,IACjB,IAAIgD,IAAS,CAAChD,EAAE3E,KAAM2E,EAAElB,cAAcN,OAAOyE,SAAS1B,KAAK2B,IAA8C,IAAvCA,EAAIJ,cAAcK,QAAQN,IAE5F7D,EAAM8C,IAAI9B,EAAEE,MAAMH,QAAQM,GAAMA,EAAG/D,MAAMyF,QAAUiB,EAAO,GAAK,QAC5DA,GAAMD,EAAQhC,KAAKf,KAYQ,IAAnB+C,EAAQ9F,OACnBqB,EAAUyB,QAASC,IACjBhB,EAAM8C,IAAI9B,EAAEE,MAAMH,QAAQM,GAAMA,EAAG/D,MAAMyF,QAAU,MAE1B,IAAnBgB,EAAQ9F,QAAwB,UAARW,GAChCuD,EAAsBnC,EAAM8C,IAAIiB,EAAQ,GAAG7C,MAAM,MAIrDR,EAAU9C,iBAAiB,aAAa,SAAiCe,GACvEA,EAAEyF,cAAe,EACjBzF,EAAEM,iBACCuB,EAAauD,QAAQ,UAAWvD,EAAa6D,OAC3C7D,EAAaoC,WAGpB,MAAMH,GAAgB,IAAI,IAAc,CACtC/D,QAAUP,IACR,IAAamG,oBAEb,MAAM,QAAClG,EAAO,KAAEI,GAAQL,GAAa,GACrC,IAAIoG,EAAcnG,EAAUA,EAAQ/B,MAAQ+B,EAAQ0B,aAAe,GAChEyE,IAAgBhE,EAAkB5C,OAChCuC,GACA9B,GACAI,IACC0B,IAAwB9B,GACxB+B,EAAwB2B,eAAiBtD,EAAKsD,gBAIlD,YAAetB,EAAcpC,EAAU,eAAKA,EAAQ0B,cAAuByE,GAC3ErE,EAAsB9B,EACtB+B,EAA0B3B,GAIzBJ,GAAYqE,GAAc9E,MAAMM,OAAS,EAAK,EAC/CkB,EAAQ7B,MAAMkH,WAAa,GAE3BrF,EAAQ7B,MAAMkH,WAAa,YAK3B5H,GAAQ6F,GAAc5F,MAE5BD,GAAMgB,iBAAiB,WAAae,IAElC,IAAIQ,EAAQ7B,MAAMkH,YAAuD,UAAV7F,EAAEC,IAC/D,OAAO6F,OAQX,MAAMC,GAAsB,IAAI,IAAc,CAC5CC,KAAM,mBACNtI,KAAM,cACNuI,YAAY,EACZC,SAAS,IAGXH,GAAoB7H,MAAMe,iBAAiB,SAAU,KACnD,MAAMkH,EAAaJ,GAAoBG,QACvC,UAAgBE,YAAY,aAAcD,GAE1C,IAAWE,cAAcF,GACzB,IAAuBE,cAAcF,GACrC,IAAWE,cAAcF,GACzB,IAAeE,cAAcF,KAG/B,UAAgBG,WAAWC,KAAKC,IAC1B,UAAgBC,QAAQC,cAI1BX,GAAoBG,QAAUM,EAAML,YAHpCJ,GAAoBG,SAAU,EAC9BH,GAAoBtI,MAAMM,UAAUC,IAAI,wBAM5CwC,EAAU,YAAO,gCAAiC,CAACwF,KAAM,eACzDxF,EAAQ7B,MAAMkH,WAAa,SAE3B,MAAMC,GAAY9F,IACbA,GACD,YAAYA,GAGd,MAAM2G,EAAS,YAAiB,CAA4BnG,EAASD,IAAQ,GAE7E,YAAeC,EAAS,eAAK,eAC7B,YAAaA,GAIb,IAAIoG,EAAe9C,GAAc9E,MACjC,IAAW6H,UAAU,gBAAiB,CACpCD,aAAcA,EACdE,OAAQ,IAAIC,GACZC,SAAU,IAAIC,KACdC,SAAU,CACRC,EAAG,kBAGJZ,KAAM1G,IAGP,8BAAyB0G,KAAKa,GAAKA,EAAEC,QAAQC,MAAMC,OAAOC,OAAO3H,EAAM,CAAC+G,aAAcA,QACrFa,MAAMC,IAGP,OAFAf,IAEOe,EAAItJ,MACT,IAAK,uBACH0F,GAAc6D,WACd,YAAe7D,GAAcrG,MAAO,eAAK,4BACzCQ,GAAMF,UAAUC,IAAI,SACpB,YAAewC,EAAS,eAAK,eAC7B,MACF,QACEoH,QAAQC,MAAM,uBAAwBH,GACtClH,EAAQ0C,UAAYwE,EAAItJ,SAMhC,YAAiBoC,EAASsF,IAE1BvF,EAAQ,YAAO,4DAA6D,CAACyF,KAAM,mBAGnFzF,EAAMtB,iBAAiB,QAAS,KAC9B,UAAWqI,UAsBb7F,EAAaO,OAAOJ,EAAkB9D,UAAWgG,GAAchG,UAAWiI,GAAoBtI,MAAO+C,EAASD,GAE9G,MAAMuH,GAAKpG,SAASC,cAAc,MAClCmG,GAAG/J,UAAUC,IAAI,eACjB,gBAAM8J,GAAI,eAEV,MAAMC,GAAWrG,SAASC,cAAc,OACxCoG,GAAShK,UAAUC,IAAI,WAAY,eACnC,gBAAM+J,GAAU,mBAEhBtH,EAAKgE,OAAOd,cAAc,cAAc3B,OAAO8F,GAAIC,GAAUtG,GAuDzD,sBACFuC,WAAW,KACT/F,GAAMgG,SACL,GAGL,YAAwBxC,GA1DtB,IAAWoF,UAAU,qBAAqBN,KAAMyB,I,MAC9C,MAAMC,EAAW,IAAaC,aAAa,YACxCD,KAA+B,QAAlB,EAAAA,EAAStH,iBAAS,eAAEsG,OAClC,UAAKkB,YAAYF,EAASG,WAAW7B,KAAK,KACxC,YAActI,GAAO,WAIzB,MAAMoK,EAAM,IAAIC,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAC3BC,EAAiB,CAACP,EAAgBQ,SAExC,IAAIC,EA+BJ,OA9BGT,EAAgBU,aAAeV,EAAgBQ,UAChDC,EAAU,IAAWE,aAAaX,EAAgBU,YAAYnC,KAAK,KACjEgC,EAAKnF,KAAK4E,EAAgBU,gBAI7BD,GAAWG,QAAQC,WAAWtC,KAAK,KAClCgC,EAAKnG,QAAQ0G,IACXT,EAAIU,OAAOD,KAGb,MAAME,EAAO,IAAIX,GACXY,EAAI,IAA0B,OAAD,6BACjC,MAAMH,EAAOE,EAAKE,QAClB,IAAIJ,EAAM,OAEV,MAAMK,EAAmB,KAAKL,aAE9B,SADkB,IAAe3E,IAAIgF,GAEnC,OAAOF,IAGTjF,WAAW,KACT,IAAW2E,aAAaG,GAAkCM,QAAQH,IACjC,QAGrCA,MAGKjB,IACNzB,KAAMyB,IACHpG,EAAkB5C,MAAMM,QAAWwE,GAAc9E,MAAMM,QACzDkE,EAAsBnC,EAAM8C,IAAI6D,EAAgBvI,SAAS,OAkBV,KAClDe,IACD,YAAeA,EAAS,eAAK,eAC7B,iBAAOA,OAAS8D,OAAWA,GAAW,GACtC9D,EAAQ6I,gBAAgB,aAGvB9I,GACDA,EAAM8I,gBAAgB,YAGxB,UAAgBjD,YAAY,YAAa,CAACe,EAAG,sBAGhC,a,gCC7ff,8GAsDO,MAAMmC,EASX,YAAmBvG,EAAiBwG,EAAY,GAAWzL,EAAyB4D,SAASC,cAAc,QAAxF,KAAAoB,KAAwC,KAAAjF,YANpD,KAAA0L,gBAA0B,EAG1B,KAAAC,4BAA6B,EAC1B,KAAAC,yBAA0B,EAGlC7L,KAAKC,UAAUC,UAAUC,IAAI,cAE7BH,KAAK8L,IAAM,YAAO,UAAYJ,EAAY,IAAMA,EAAY,IAAK,IAASK,OAEvE7G,IACD8G,MAAMC,KAAK/G,EAAGgH,UAAU3H,QAAQC,GAAKxE,KAAKC,UAAUkE,OAAOK,IAE3DU,EAAGf,OAAOnE,KAAKC,YAKT,eACRU,OAAOS,iBAAiB,SAAUpB,KAAKmM,SAAU,CAACC,SAAS,IAC3DpM,KAAKC,UAAUmB,iBAAiB,SAAUpB,KAAKmM,SAAU,CAACC,SAAS,EAAMjF,SAAS,IAElF,YAAuB,KACrBnH,KAAK4L,4BAA6B,EAE/B5L,KAAK2L,kBACN3L,KAAK6L,yBAA0B,EAC/BlL,OAAO0L,qBAAqBrM,KAAK2L,mBAElC,KACD3L,KAAK4L,4BAA6B,EAE/B5L,KAAK6L,0BACN7L,KAAKmM,WACLnM,KAAK6L,yBAA0B,KAK9B,OAAO/E,GACZ9G,KAAKC,UAAUkE,OAAO2C,GAGjB,kBAAkBpH,GAEvB,OAAO,YAAiB,OAAD,wBAClBA,GAAO,CACVO,UAAWD,KAAKC,cAQP,MAAMqM,UAAmBb,EAatC,YAAYvG,EAAiBwG,EAAY,GAAWa,EAAiB,IAAKC,GACxE7M,MAAMuF,EAAIwG,GADwC,KAAAa,iBAL7C,KAAAE,cAAwB,EACxB,KAAAC,oBAA8B,EAE9B,KAAAC,UAAiC,CAACC,KAAK,EAAMC,QAAQ,GAqBrD,KAAAV,SAAW,KAOhB,GAAGnM,KAAK4L,2BAMN,OALG5L,KAAK2L,iBACNhL,OAAO0L,qBAAqBrM,KAAK2L,sBAGnC3L,KAAK6L,yBAA0B,IAK5B7L,KAAK8M,eAAkB9M,KAAK+M,kBAAsB/M,KAAKgN,SAAYhN,KAAKiN,sBAC1EjN,KAAK2L,iBAAiBhL,OAAO0L,qBAAqBrM,KAAK2L,iBAC1D3L,KAAK2L,gBAAkBhL,OAAOuM,sBAAsB,KAClDlN,KAAK2L,gBAAkB,EAEvB,MAAMwB,EAAYnN,KAAKC,UAAUkN,UACjCnN,KAAK0M,oBAAsB1M,KAAKyM,gBAAkBU,EAAY,EAAKnN,KAAKyM,cAAgBU,EAAY,GAAK,EACzGnN,KAAKyM,cAAgBU,EAElBnN,KAAKiN,oBAAmD,IAA7BjN,KAAK0M,qBACjC1M,KAAKiN,qBAGJjN,KAAKoN,kBACNpN,KAAKoN,uBAKJ,KAAAA,iBAAmB,KACxB,IAAKpN,KAAK8M,gBAAkB9M,KAAK+M,iBAAmB,OAEpD,GAAG/M,KAAK4L,2BAEN,YADA5L,KAAKmM,WAIP,MAAMkB,EAAerN,KAAKC,UAAUoN,aACpC,IAAIA,EACF,OAGF,MACMC,EAAeD,EADArN,KAAKC,UAAUsN,aAE9BJ,EAAYnN,KAAKyM,cAIpBzM,KAAK8M,eAAiBK,GAAanN,KAAKuM,gBAAkBvM,KAAK0M,qBAAuB,GACvF1M,KAAK8M,gBAGJ9M,KAAK+M,kBAAqBO,EAAeH,GAAcnN,KAAKuM,gBAAkBvM,KAAK0M,qBAAuB,GAC3G1M,KAAK+M,oBArEP/M,KAAKC,UAAUC,UAAUC,IAAI,gBAC7BH,KAAKwN,eAGA,oBAAoBtI,GACzBlF,KAAKgN,QAAU9H,EACflF,KAAK8L,IAAI,uBAAwB5G,EAAIlF,MAmEhC,WAAWyN,IACfzN,KAAKgN,SAAWhN,KAAK0N,SAAW1N,KAAKC,WAAW0N,WAAWF,GAGvD,UAAUA,IACdzN,KAAKgN,SAAWhN,KAAK0N,SAAW1N,KAAKC,WAAWkE,UAAUsJ,GAGtD,mBACL,OAAOzN,KAAKqN,aAAe9L,KAAKqM,MAAM5N,KAAKmN,UAAYnN,KAAKC,UAAU4N,cAGxE,qBACE,OAAO7N,KAAK8N,oBAAsB,EAGpC,cAAcC,GACZ/N,KAAKC,UAAUkN,UAAYY,EAG7B,gBAEE,OAAO/N,KAAKC,UAAUkN,UAGxB,mBACE,OAAOnN,KAAKC,UAAUoN,cAInB,MAAMW,UAAoBvC,EAC/B,YAAYvG,EAAiBwG,EAAY,GAAWa,EAAiB,IAAY0B,EAAa,GAAWhO,EAAyB4D,SAASC,cAAc,QAKvJ,GAJAnE,MAAMuF,EAAIwG,EAAWzL,GAD6B,KAAAsM,iBAA6B,KAAA0B,aAAwB,KAAAhO,YAGvGD,KAAKC,UAAUC,UAAUC,IAAI,iBAEzB,qBAAoB,CACtB,MAAM+N,EAAsB/L,KACtBA,EAAEgM,QAAUnO,KAAKC,UAAUmO,YAAcpO,KAAKC,UAAUoO,cAC1DrO,KAAKC,UAAUqO,YAAcnM,EAAEoM,OAAS,EACxC,YAAYpM,KAIhBnC,KAAKC,UAAUmB,iBAAiB,QAAS8M,EAAoB,CAAC9B,SAAS,Q,gCC7P7E,sEAyBe,MAAMoC,EAKnB,YAAY9O,EAAgC,IAC1C,MAAME,EAAQI,KAAKJ,MAAQiE,SAASC,cAAc,SAClDlE,EAAMM,UAAUC,IAAI,kBAEjBT,EAAQ+O,aACT7O,EAAMM,UAAUC,IAAI,8BAGnBT,EAAQkO,OACThO,EAAMM,UAAUC,IAAI,wBAGnBT,EAAQgP,UACT1O,KAAK2O,kBAAiB,GAGxB,MAAMtO,EAAQL,KAAKK,MAAQwD,SAASC,cAAc,SAoClD,IAAIsB,EAWJ,GA9CA/E,EAAMH,UAAUC,IAAI,wBACpBE,EAAME,KAAO,WACVb,EAAQG,OACTQ,EAAM6I,GAAK,SAAWxJ,EAAQG,MAG7BH,EAAQ2I,UACThI,EAAMgI,SAAU,GAGf3I,EAAQkP,UACT,UAAgBnG,WAAWC,KAAKC,IAC9B,MAAMkG,EAAa,YAAgBlG,EAAOjJ,EAAQkP,UAClD,IAAIvG,EAEFA,EADC3I,EAAQoP,YAC6C,IAA5CpP,EAAQoP,YAAYnH,QAAQkH,GAE5BA,EAGZ7O,KAAKiB,iBAAiBoH,GAEtBhI,EAAMe,iBAAiB,SAAU,KAC/B,IAAID,EAEFA,EADCzB,EAAQoP,YACDpP,EAAQoP,YAAYzO,EAAMgI,QAAU,EAAI,GAExChI,EAAMgI,QAGhB,UAAgB0G,SAASrP,EAAQkP,SAAUzN,OAM9CzB,EAAQyI,MACT/C,EAAOpF,KAAKoF,KAAOvB,SAASC,cAAc,QAC1CsB,EAAKlF,UAAUC,IAAI,oBACnB,gBAAMiF,EAAM1F,EAAQyI,KAAMzI,EAAQsP,WAElCpP,EAAMM,UAAUC,IAAI,4BAGtBP,EAAMuE,OAAO9D,GAEVX,EAAQoJ,OAAQ,CACjBlJ,EAAMM,UAAUC,IAAI,yBAEpB,MAAM2I,EAASjF,SAASC,cAAc,OACtCgF,EAAO5I,UAAUC,IAAI,mBACrBP,EAAMuE,OAAO2E,OACR,CACL,MAAMmG,EAAMpL,SAASC,cAAc,OACnCmL,EAAI/O,UAAUC,IAAI,gBAElB,MAAM+O,EAAWrL,SAASsL,gBAAgB,6BAA8B,OACxED,EAAShP,UAAUC,IAAI,sBACvB+O,EAASE,eAAe,KAAM,UAAW,aACzC,MAAMC,EAAMxL,SAASsL,gBAAgB,6BAA8B,OACnEE,EAAID,eAAe,KAAM,OAAQ,UACjCC,EAAID,eAAe,KAAM,IAAK,MAC9BF,EAAS/K,OAAOkL,GAEhB,MAAMC,EAAKzL,SAASC,cAAc,OAClCwL,EAAGpP,UAAUC,IAAI,2BAEjB,MAAMoP,EAAS1L,SAASC,cAAc,OACtCyL,EAAOrP,UAAUC,IAAI,uBAErB8O,EAAI9K,OAAOoL,EAAQD,EAAIJ,GAEvBtP,EAAMuE,OAAO8K,GAGZ7J,GACDxF,EAAMuE,OAAOiB,GAGZ1F,EAAQ0I,YACTxI,EAAMM,UAAUC,IAAI,kBAAmB,gBACvC,iBAAOP,OAAO6G,OAAWA,GAAW,IAE5B/G,EAAQ8P,WAChB5P,EAAMM,UAAUC,IAAI,gBAIxB,cACE,OAAOH,KAAKK,MAAMgI,QAGpB,YAAYA,GAKVrI,KAAKiB,iBAAiBoH,GAEtB,MAAMoH,EAAQ,IAAIC,MAAM,SAAU,CAACC,SAAS,EAAMC,YAAY,IAC9D5P,KAAKK,MAAMwP,cAAcJ,GAGpB,iBAAiBpH,GACtBrI,KAAKK,MAAMgI,QAAUA,EAGhB,iBAAiByH,GAEtB,OADA9P,KAAKJ,MAAMM,UAAU4I,OAAO,oBAAqBgH,GAC1C,IAAM9P,KAAK2O,kBAAkBmB,M,gCCtJzB,SAASnB,EAAiBlB,EAAyBqC,GAOhE,OANGA,EACDrC,EAASlJ,QAAQW,GAAMA,EAAG6K,aAAa,WAAY,SAEnDtC,EAASlJ,QAAQW,GAAMA,EAAGsG,gBAAgB,aAGrC,IAAMmD,EAAiBlB,GAAWqC,GAb3C,mC,gCCMe,SAASE,EAAU9K,EAAS+K,GACzC,OAAO/K,EAAGgL,QAAQD,GAPpB,mC,gCCAA,6CAae,SAASE,EAAgBjL,EAAiBkL,GAAmB,GAC1E,IAAG,sBAAwBA,GAAoBvM,SAASwM,gBAAkBnL,EAK1E,GADAA,EAAGkB,aAC+B,IAAxBzF,OAAO2P,mBAAgE,IAAzBzM,SAAS0M,YAA6B,CAC5F,IAAIC,EAAQ3M,SAAS0M,cACrBC,EAAMC,mBAAmBvL,GACzBsL,EAAME,UAAS,GACf,IAAIC,EAAMhQ,OAAO2P,eACjBK,EAAIC,kBACJD,EAAIE,SAASL,QAER,QAA4C,IAAlC3M,SAASiN,KAAKC,gBAAiC,CAE9D,IAAIC,EAAYnN,SAASiN,KAAKC,kBAC9BC,EAAUC,kBAAkB/L,GAC5B8L,EAAUN,UAAS,GACnBM,EAAUrK,Y,gCChCd,8CAWA,MAAMuK,EAAuC,IAAIzN,IACjD,IAAI0N,EAAkB,EACtB,MAAMC,EAAY,CAACxP,EAAsBI,EAAuBqP,EAAiB,MAC/EA,EAASrP,EAAKsD,aAAe+L,EAI7BF,EAAkB5P,KAAK+P,IAAIH,EAAiBE,EAAO5P,QACnDyP,EAAS1L,IAAI6L,EAAQ,CAACzP,UAASI,UAG1B,SAASuP,EAAkBC,GAMhCA,EAAcA,GAAe,GAEzBN,EAASO,MACX,UAAK1O,cAAcwB,QAAQ3C,IACzBA,EAAQgD,cAAcL,QAAQvC,IAGzBA,EAAKkP,SACNlP,EAAKkP,SAAS3M,QAAQ8M,IACpBD,EAAUxP,EAASI,EAAMqP,KAG3BD,EAAUxP,EAASI,OAO3B,IAYI0P,EAZAhK,EAAM8J,EAAYzP,QAAQ,MAAO,IACjC8D,EAAY6B,EAAIiK,MAAM,EAAGR,GAY7B,IAAI,IAAIS,EAAI/L,EAAUpE,OAAS,EAAGmQ,GAAK,IACrCF,EAAgBR,EAAS5K,IAAIT,EAAU8L,MAAM,EAAGC,EAAI,KACjDF,KAFuCE,GAO5C,IAAIF,EACF,MAAO,CACL/P,UAAW+F,EACX9F,aAAS6E,EACTzE,UAAMyE,EACN3E,YAAa,IAKjB,MAAMF,EAAU8P,EAAc9P,QAExBiQ,EAAWH,EAAc1P,KAAK6P,UAAY,GAC1CC,EAAmBpK,EAAIiK,MAAMD,EAAc1P,KAAKsD,aAAa7D,QACnE,IAAIsQ,EAAU,GAAIC,EAA4B,EAAGC,EAAqB,GACtE,IAAI,IAAIL,EAAIC,EAASpQ,OAAS,EAAGmQ,GAAK,IAAKA,EAAG,CAC5CG,EAAUF,EAASD,GAEnB,MAAMM,EAAWH,EAAQhQ,QAAQ,KAAM,IACvC,IAAIoQ,EAAiB,EACrB,IAAI,IAAIC,EAAI,EAAG3Q,EAASF,KAAK8Q,IAAIP,EAAiBrQ,OAAQyQ,EAASzQ,QAAS2Q,EAAI3Q,IAAU2Q,EAAG,CAC3F,GAAGN,EAAiBM,KAAOF,EAASE,IAAsB,MAAhBF,EAASE,GAE5C,CACLD,EAAiB,EACjB,QAHEA,EAOHA,EAAiBH,IAClBA,EAA4BG,EAC5BF,EAAqBF,GAIzBA,EAAUE,GAAsBF,EAChCA,EAAUA,EAAQhQ,QAAQ,MAAO,KAEjCgQ,EAAUL,EAAc1P,KAAKsD,aAAe,IAAMyM,EAElDA,EAAQO,MAAM,IAAI/N,QAAQ,CAACgO,EAAQC,KACnB,MAAXD,GAA+B,MAAb7K,EAAI8K,IAAgB9K,EAAIjG,OAAS+Q,IACpD9K,EAAMA,EAAIiK,MAAM,EAAGa,GAAO,IAAM9K,EAAIiK,MAAMa,MAQ9C,IAAI1Q,EAAciQ,GAAWA,EAAQtQ,OAASiG,EAAIjG,OAASsQ,EAAQJ,MAAMjK,EAAIjG,QAAU,GAQvF,OAPGK,IAGDA,EAAcA,EAAYC,QAAQ,KAAM,MAInC,CAACJ,UAAW+F,EAAK9F,UAASI,KAAM0P,EAAc1P,KAAMF","file":"20.4336bee056f28b760d74.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\nimport { IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE } from \"../environment/userAgent\";\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class TelInputField extends InputField {\n  private pasted = false;\n  public lastValue = '';\n  \n  constructor(options: InputFieldOptions & {\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\n  } = {}) {\n    super({\n      label: 'Contacts.PhoneNumber.Placeholder',\n      //plainText: true,\n      name: 'phone',\n      ...options\n    });\n\n    this.container.classList.add('input-field-phone');\n\n    let telEl = this.input;\n    if(telEl instanceof HTMLInputElement) {\n      telEl.type = 'tel';\n      telEl.autocomplete = 'rr55RandomRR55';\n    } else {\n      telEl.inputMode = 'decimal';\n\n      const pixelRatio = window.devicePixelRatio;\n      if(pixelRatio > 1) {\n        let letterSpacing: number;\n        if(IS_APPLE) {\n          letterSpacing = pixelRatio * -.16;\n        } else if(IS_ANDROID) {\n          letterSpacing = 0;\n        }\n\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\n      }\n\n      const originalFunc = this.setValueSilently.bind(this);\n      this.setValueSilently = (value) => {\n        originalFunc(value);\n        placeCaretAtEnd(this.input, true);\n      };\n    }\n\n    telEl.addEventListener('input', () => {\n      //console.log('input', this.value);\n      telEl.classList.remove('error');\n  \n      const value = this.value;\n      const diff = Math.abs(value.length - this.lastValue.length);\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\n        this.setValueSilently(this.lastValue + value);\n      }\n  \n      this.pasted = false;\n  \n      this.setLabel();\n  \n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\n      if(this.value.replace(/\\++/, '+') === '+') {\n        this.setValueSilently('+');\n      } else {\n        formattedPhoneNumber = formatPhoneNumber(this.value);\n        formatted = formattedPhoneNumber.formatted;\n        country = formattedPhoneNumber.country;\n        leftPattern = formattedPhoneNumber.leftPattern;\n        countryCode = formattedPhoneNumber.code;\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\n      }\n  \n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\n  \n      //console.log(formatted, country);\n\n      options.onInput && options.onInput(formattedPhoneNumber);\n    });\n  \n    telEl.addEventListener('paste', () => {\n      this.pasted = true;\n      //console.log('paste', telEl.value);\n    });\n  \n    /* telEl.addEventListener('change', (e) => {\n      console.log('change', telEl.value);\n    }); */\n  \n    telEl.addEventListener('keypress', (e) => {\n      //console.log('keypress', this.value);\n      const key = e.key;\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  \n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n      this.removeAttribute('readonly'); // fix autocomplete\n    });*/\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from \"../components/misc\";\r\nimport Scrollable from '../components/scrollable';\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from '../lib/richtextprocessor';\r\nimport Page from \"./page\";\r\nimport InputField from \"../components/inputField\";\r\nimport CheckboxField from \"../components/checkboxField\";\r\nimport Button from \"../components/button\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport App from \"../config/app\";\r\nimport I18n, { _i18n, i18n } from \"../lib/langPack\";\r\nimport lottieLoader from \"../lib/rlottie/lottieLoader\";\r\nimport { ripple } from \"../components/ripple\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\nimport pageSignQR from \"./pageSignQR\";\r\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport toggleDisability from \"../helpers/dom/toggleDisability\";\r\nimport sessionStorage from \"../lib/sessionStorage\";\r\nimport { DcAuthKey } from \"../types\";\r\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport { getCountryEmoji } from \"../vendor/emoji\";\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport stateStorage from \"../lib/stateStorage\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport TelInputField from \"../components/telInputField\";\r\nimport IS_EMOJI_SUPPORTED from \"../environment/emojiSupport\";\r\n\r\n//import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nlet onFirstMount = () => {\r\n  /* if(Modes.test) {\r\n    Countries.push({\r\n      _: 'help.country',\r\n      default_name: 'Test Country',\r\n      country_codes: [{\r\n        _: 'help.countryCode',\r\n        country_code: '999 66',\r\n        patterns: ['999 66 XXX XX']\r\n      }],\r\n      iso2: 'KK'\r\n    });\r\n  \r\n    console.log('Added test country to list!');\r\n  } */\r\n\r\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\r\n  // const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n  // const countries = I18n.countriesList.filter(country => !country.pFlags?.hidden);\r\n  const setCountries = () => {\r\n    countries = I18n.countriesList\r\n    .filter(country => !country.pFlags?.hidden)\r\n    .sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n  };\r\n  let countries: HelpCountry.helpCountry[]; \r\n\r\n  setCountries();\r\n\r\n  rootScope.addEventListener('language_change', () => {\r\n    setCountries();\r\n  });\r\n\r\n  const liMap: Map<string, HTMLLIElement[]> = new Map();\r\n\r\n  let lastCountrySelected: HelpCountry, lastCountryCodeSelected: HelpCountryCode;\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const countryInputField = new InputField({\r\n    label: 'Login.CountrySelectorLabel',\r\n    name: randomLong()\r\n  });\r\n\r\n  countryInputField.container.classList.add('input-select');\r\n\r\n  const countryInput = countryInputField.input;\r\n  // countryInput.autocomplete = randomLong();\r\n\r\n  const selectWrapper = document.createElement('div');\r\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n  const arrowDown = document.createElement('span');\r\n  arrowDown.classList.add('arrow', 'arrow-down');\r\n  countryInputField.container.append(arrowDown);\r\n\r\n  const selectList = document.createElement('ul');\r\n  selectWrapper.appendChild(selectList);\r\n\r\n  const scroll = new Scrollable(selectWrapper);\r\n\r\n  let initSelect = () => {\r\n    initSelect = null;\r\n\r\n    countries.forEach((c) => {\r\n      const emoji = getCountryEmoji(c.iso2);\r\n\r\n      const liArr: Array<HTMLLIElement> = [];\r\n      c.country_codes.forEach((countryCode) => {\r\n        const li = document.createElement('li');\r\n\r\n        let wrapped = RichTextProcessor.wrapEmojiText(emoji);\r\n        if(IS_EMOJI_SUPPORTED) {\r\n          const spanEmoji = document.createElement('span');\r\n          spanEmoji.innerHTML = wrapped;\r\n          li.append(spanEmoji);\r\n        } else {\r\n          li.innerHTML = wrapped;\r\n        }\r\n        \r\n        const el = i18n(c.default_name as any);\r\n        el.dataset.defaultName = c.default_name;\r\n        li.append(el);\r\n\r\n        const span = document.createElement('span');\r\n        span.classList.add('phone-code');\r\n        span.innerText = '+' + countryCode.country_code;\r\n        li.appendChild(span);\r\n\r\n        liArr.push(li);\r\n        selectList.append(li);\r\n      });\r\n\r\n      liMap.set(c.iso2, liArr);\r\n    });\r\n    \r\n    selectList.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) { // other buttons but left shall not pass\r\n        return;\r\n      }\r\n      \r\n      const target = findUpTag(e.target, 'LI')\r\n      selectCountryByTarget(target);\r\n      //console.log('clicked', e, countryName, phoneCode);\r\n    });\r\n\r\n    countryInputField.container.appendChild(selectWrapper);\r\n  };\r\n\r\n  const selectCountryByTarget = (target: HTMLElement) => {\r\n    const defaultName = (target.childNodes[1] as HTMLElement).dataset.defaultName;\r\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\r\n    const countryCode = phoneCode.replace(/\\D/g, '');\r\n\r\n    replaceContent(countryInput, i18n(defaultName as any));\r\n    simulateEvent(countryInput, 'input');\r\n    lastCountrySelected = countries.find(c => c.default_name === defaultName);\r\n    lastCountryCodeSelected = lastCountrySelected.country_codes.find(_countryCode => _countryCode.country_code === countryCode);\r\n    \r\n    telInputField.value = telInputField.lastValue = phoneCode;\r\n    hidePicker();\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n      placeCaretAtEnd(telEl, true);\r\n    }, 0);\r\n  };\r\n  \r\n  initSelect();\r\n\r\n  let hideTimeout: number;\r\n\r\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\r\n    if(initSelect) {\r\n      initSelect();\r\n    } else {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    }\r\n\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = undefined;\r\n\r\n    selectWrapper.classList.remove('hide');\r\n    void selectWrapper.offsetWidth; // reflow\r\n    selectWrapper.classList.add('active');\r\n\r\n    countryInputField.select();\r\n\r\n    fastSmoothScroll({\r\n      container: page.pageEl.parentElement.parentElement, \r\n      element: countryInput, \r\n      position: 'start', \r\n      margin: 4\r\n    });\r\n\r\n    setTimeout(() => {\r\n      if(!mouseDownHandlerAttached) {\r\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n        mouseDownHandlerAttached = true;\r\n      }\r\n    }, 0);\r\n  });\r\n\r\n  let mouseDownHandlerAttached = false;\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if(findUpClassName(e.target, 'input-select')) {\r\n      return;\r\n    }\r\n    if(e.target === countryInput) {\r\n      return;\r\n    }\r\n\r\n    hidePicker();\r\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n    mouseDownHandlerAttached = false;\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    if(hideTimeout !== undefined) return;\r\n    selectWrapper.classList.remove('active');\r\n    hideTimeout = window.setTimeout(() => {\r\n      selectWrapper.classList.add('hide');\r\n      hideTimeout = undefined;\r\n    }, 200);\r\n  };\r\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\r\n    hidePicker();\r\n    \r\n    e.cancelBubble = true;\r\n  }, {capture: true}); */\r\n\r\n  countryInput.addEventListener('keyup', (e) => {\r\n    const key = e.key;\r\n    if(e.ctrlKey || key === 'Control') return false;\r\n\r\n    //let i = new RegExp('^' + this.value, 'i');\r\n    let _value = countryInputField.value.toLowerCase();\r\n    let matches: HelpCountry[] = [];\r\n    countries.forEach((c) => {\r\n      let good = !![c.name, c.default_name].filter(Boolean).find(str => str.toLowerCase().indexOf(_value) !== -1)/*  === 0 */;//i.test(c.name);\r\n\r\n      liMap.get(c.iso2).forEach(li => li.style.display = good ? '' : 'none');\r\n      if(good) matches.push(c);\r\n    });\r\n\r\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n      if(matches[0].name === lastCountrySelected) return false;\r\n      //console.log('clicking', matches[0]);\r\n\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initEvent('mousedown', true, true);\r\n      matches[0].li[0].dispatchEvent(clickEvent);\r\n      return false;\r\n    } else  */if(matches.length === 0) {\r\n      countries.forEach((c) => {\r\n        liMap.get(c.iso2).forEach(li => li.style.display = '');\r\n      });\r\n    } else if(matches.length === 1 && key === 'Enter') {\r\n      selectCountryByTarget(liMap.get(matches[0].iso2)[0]);\r\n    }\r\n  });\r\n\r\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\r\n    e.cancelBubble = true;\r\n    e.preventDefault();\r\n    if(countryInput.matches(':focus')) countryInput.blur();\r\n    else countryInput.focus();\r\n  });\r\n\r\n  const telInputField = new TelInputField({\r\n    onInput: (formatted) => {\r\n      lottieLoader.loadLottieWorkers();\r\n\r\n      const {country, code} = formatted || {};\r\n      let countryName = country ? country.name || country.default_name : ''/* 'Unknown' */;\r\n      if(countryName !== countryInputField.value && (\r\n          !lastCountrySelected || \r\n          !country ||\r\n          !code || (\r\n            lastCountrySelected !== country && \r\n            lastCountryCodeSelected.country_code !== code.country_code\r\n          )\r\n        )\r\n      ) {\r\n        replaceContent(countryInput, country ? i18n(country.default_name as any) : countryName);\r\n        lastCountrySelected = country;\r\n        lastCountryCodeSelected = code;\r\n      }\r\n  \r\n      //if(country && (telInputField.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n      if(country || (telInputField.value.length - 1) > 1) {\r\n        btnNext.style.visibility = '';\r\n      } else {\r\n        btnNext.style.visibility = 'hidden';\r\n      }\r\n    }\r\n  });\r\n\r\n  const telEl = telInputField.input;\r\n\r\n  telEl.addEventListener('keypress', (e) => {\r\n    //console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  const signedCheckboxField = new CheckboxField({\r\n    text: 'Login.KeepSigned', \r\n    name: 'keepSession',\r\n    withRipple: true,\r\n    checked: true\r\n  });\r\n\r\n  signedCheckboxField.input.addEventListener('change', () => {\r\n    const keepSigned = signedCheckboxField.checked;\r\n    appStateManager.pushToState('keepSigned', keepSigned);\r\n    \r\n    AppStorage.toggleStorage(keepSigned);\r\n    CacheStorageController.toggleStorage(keepSigned);\r\n    apiManager.toggleStorage(keepSigned);\r\n    sessionStorage.toggleStorage(keepSigned);\r\n  });\r\n\r\n  appStateManager.getState().then(state => {\r\n    if(!appStateManager.storage.isAvailable()) {\r\n      signedCheckboxField.checked = false;\r\n      signedCheckboxField.label.classList.add('checkbox-disabled');\r\n    } else {\r\n      signedCheckboxField.checked = state.keepSigned;\r\n    }\r\n  });\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    //return;\r\n\r\n    let phone_number = telInputField.value;\r\n    apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings' // that's how we sending Type\r\n      }\r\n      //lang_code: navigator.language || 'en'\r\n    }).then((code) => {\r\n      //console.log('got code', code);\r\n\r\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch(err => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  let qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    pageSignQR.mount();\r\n    /* const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then(module => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    }); */\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  h4.classList.add('text-center');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle', 'text-center');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  let tryAgain = () => {\r\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const langPack = stateStorage.getFromCache('langPack');\r\n      if(langPack && !langPack.countries?.hash) {\r\n        I18n.getLangPack(langPack.lang_code).then(() => {\r\n          simulateEvent(telEl, 'input');\r\n        });\r\n      }\r\n\r\n      const dcs = new Set([1, 2, 3, 4, 5]);\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc);\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        done.forEach(dcId => {\r\n          dcs.delete(dcId);\r\n        });\r\n\r\n        const _dcs = [...dcs];\r\n        const g = async(): Promise<void> => {\r\n          const dcId = _dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          const dbKey: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n          const key = await sessionStorage.get(dbKey);\r\n          if(key) {\r\n            return g();\r\n          }\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            apiManager.getNetworker(dcId/* , {fileDownload: true} */).finally(g);\r\n          }, /* done.includes(dcId) ? 0 :  */3000);\r\n        };\r\n        \r\n        g();\r\n      });\r\n      \r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      if(!countryInputField.value.length && !telInputField.value.length) {\r\n        selectCountryByTarget(liMap.get(nearestDcResult.country)[0]);\r\n      }\r\n  \r\n      //console.log('woohoo', nearestDcResult, country);\r\n    })//.catch(tryAgain);\r\n  };\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { ScrollOptions } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll({\r\n      ...options,\r\n      container: this.container\r\n    });\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void;\r\n  public onScrolledTop: () => void;\r\n  public onScrolledBottom: () => void;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.classList.add('checkbox-field-input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(IS_TOUCH_SUPPORTED && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport I18n from \"../lib/langPack\";\n\nlet sortedCountries: HelpCountry[];\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\nconst prefixes: Map<string, PrefixCountry> = new Map();\nlet maxPrefixLength = 0;\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\n  prefix = code.country_code + prefix;\n  /* if(prefixes.has(prefix)) {\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\n  } */\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\n  prefixes.set(prefix, {country, code});\n};\n\nexport function formatPhoneNumber(originalStr: string): {\n  formatted: string,\n  country: HelpCountry,\n  code: HelpCountryCode,\n  leftPattern: string\n} {\n  originalStr = originalStr || '';\n  \n  if(!prefixes.size) {\n    I18n.countriesList.forEach(country => {\n      country.country_codes.forEach(code => {\n        const s = {country, code};\n\n        if(code.prefixes) {\n          code.prefixes.forEach(prefix => {\n            setPrefix(country, code, prefix);\n          });\n        } else {\n          setPrefix(country, code);\n        }\n      });\n    });\n  }\n\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\n  let str = originalStr.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, maxPrefixLength);\n  \n  ////console.log('str', str, phoneCode);\n  // if(!sortedCountries) {\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\n  // }\n  \n  // let country = sortedCountries.find((c) => {\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  // });\n\n  let prefixCountry: PrefixCountry;\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\n    if(prefixCountry) {\n      break;\n    }\n  }\n\n  if(!prefixCountry) {\n    return {\n      formatted: str, \n      country: undefined, \n      code: undefined, \n      leftPattern: ''\n    };\n  }\n\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\n  const country = prefixCountry.country;\n  \n  const patterns = prefixCountry.code.patterns || [];\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\n  for(let i = patterns.length - 1; i >= 0; --i) {\n    pattern = patterns[i];\n\n    const _pattern = pattern.replace(/ /g, '');\n    let patternMatches = 0;\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\n        ++patternMatches;\n      } else {\n        patternMatches = 0;\n        break;\n      }\n    }\n\n    if(patternMatches > mostMatchedPatternMatches) {\n      mostMatchedPatternMatches = patternMatches;\n      mostMatchedPattern = pattern;\n    }\n  }\n\n  pattern = mostMatchedPattern || pattern;\n  pattern = pattern.replace(/\\d/g, 'X');\n\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\n  // let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\n  if(leftPattern) {\n    /* const length = str.length;\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\n    leftPattern = leftPattern.replace(/X/g, '‒');\n    // leftPattern = leftPattern.replace(/X/g, '0');\n  }\n  \n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\n}\n"],"sourceRoot":""}