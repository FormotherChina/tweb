{"version":3,"sources":["webpack:///./src/helpers/cleanUsername.ts","webpack:///./src/lib/appManagers/appUsersManager.ts","webpack:///./src/lib/storages/dialogs.ts","webpack:///./src/lib/storages/filters.ts","webpack:///./src/lib/appManagers/appMessagesManager.ts","webpack:///./src/lib/appManagers/appPeersManager.ts","webpack:///./src/lib/appManagers/appChatsManager.ts","webpack:///./src/components/peerTitle.ts","webpack:///./src/lib/appManagers/appPhotosManager.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/lib/appManagers/appStickersManager.ts","webpack:///./src/lib/appManagers/appProfileManager.ts","webpack:///./src/lib/appManagers/apiUpdatesManager.ts","webpack:///./src/lib/appManagers/appDocsManager.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/components/visibilityIntersector.ts","webpack:///./src/components/lazyLoadQueue.ts","webpack:///./src/helpers/formatPhoneNumber.ts","webpack:///./src/helpers/assumeType.ts","webpack:///./src/helpers/dom/htmlToSpan.ts","webpack:///./src/lib/mtproto/bin_utils.ts","webpack:///./src/helpers/windowSize.ts","webpack:///./src/lib/appManagers/appMessagesIdsManager.ts","webpack:///./src/lib/appManagers/appNotificationsManager.ts","webpack:///./src/helpers/dom/renderImageFromUrl.ts","webpack:///./src/helpers/fixBase64String.ts","webpack:///./src/components/preloader.ts","webpack:///./src/helpers/files.ts","webpack:///./src/vendor/leemon.ts","webpack:///./src/lib/appManagers/appAvatarsManager.ts","webpack:///./src/helpers/middleware.ts","webpack:///./src/lib/calls/groupCallState.ts","webpack:///./src/lib/searchIndex.ts","webpack:///./src/components/middleEllipsis.ts","webpack:///./src/lib/appManagers/appDraftsManager.ts","webpack:///./src/helpers/audioAssetPlayer.ts","webpack:///./src/lib/appManagers/appGroupCallsManager.ts","webpack:///./src/lib/calls/helpers/createMainStreamManager.ts","webpack:///./src/helpers/cleanSearchText.ts","webpack:///./src/helpers/slicedArray.ts","webpack:///./src/lib/appManagers/appPollsManager.ts","webpack:///./src/lib/calls/utils.ts","webpack:///./src/lib/calls/localConferenceDescription.ts","webpack:///./src/helpers/heavyQueue.ts","webpack:///./src/helpers/blur.ts","webpack:///./src/lib/mtproto/referenceDatabase.ts","webpack:///./src/helpers/dom/htmlToDocumentFragment.ts","webpack:///./src/lib/mtproto/connectionStatus.ts","webpack:///./src/lib/calls/helpers/getStream.ts","webpack:///./src/lib/calls/helpers/getVideoConstraints.ts","webpack:///./src/lib/calls/streamManager.ts","webpack:///./src/environment/vibrateSupport.ts","webpack:///./src/lib/opusDecodeController.ts","webpack:///./src/lib/appManagers/appWebPagesManager.ts","webpack:///./src/environment/imageMimeTypesSupport.ts","webpack:///./src/lib/calls/constants.ts","webpack:///./src/lib/calls/helpers/stopTrack.ts","webpack:///./src/lib/mtproto/schema.ts","webpack:///./src/lib/crypto/crypto_utils.ts","webpack:///./src/lib/mtproto/tl_utils.ts","webpack:///./src/lib/crypto/srp.ts","webpack:///./src/lib/crypto/cryptoworker.ts","webpack:///./src/lib/mtproto/timeManager.ts","webpack:///./src/lib/mtproto/transports/obfuscation.ts","webpack:///./src/lib/mtproto/transports/intermediate.ts","webpack:///./src/lib/mtproto/transports/tcpObfuscated.ts","webpack:///./src/lib/mtproto/transports/socketProxied.ts","webpack:///./src/lib/mtproto/dcConfigurator.ts","webpack:///./src/lib/mtproto/transports/controller.ts","webpack:///./src/lib/mtproto/transports/http.ts","webpack:///./src/lib/mtproto/networker.ts","webpack:///./src/lib/mtproto/networkerFactory.ts","webpack:///./src/lib/mtproto/rsaKeysManager.ts","webpack:///./src/lib/mtproto/authorizer.ts","webpack:///./src/lib/mtproto/apiManager.ts","webpack:///./src/lib/calls/helpers/getScreenStream.ts","webpack:///./src/lib/calls/helpers/getStreamCached.ts","webpack:///./src/lib/calls/callInstanceBase.ts","webpack:///./src/lib/calls/sdp/index.ts","webpack:///./src/helpers/string/splitStringByLimitWithRest.ts","webpack:///./src/helpers/uniqueNumberGenerator.ts","webpack:///./src/lib/calls/sdp/attributeSplitted.ts","webpack:///./src/lib/calls/sdp/mediaLineParts.ts","webpack:///./src/lib/calls/sdp/line.ts","webpack:///./src/lib/calls/sdp/attributeInner.ts","webpack:///./src/lib/calls/sdp/attributes.ts","webpack:///./src/lib/calls/sdp/mediaSection.ts","webpack:///./src/lib/calls/sdp/sessionSection.ts","webpack:///./src/lib/calls/sdp/utils.ts","webpack:///./src/lib/calls/helpers/parseMediaSectionInfo.ts","webpack:///./src/lib/calls/helpers/parseSourceGroups.ts","webpack:///./src/lib/calls/helpers/fixLocalOffer.ts","webpack:///./src/lib/calls/groupCallConnectionInstance.ts","webpack:///./src/lib/calls/callConnectionInstanceBase.ts","webpack:///./src/lib/calls/helpers/createPeerConnection.ts","webpack:///./src/lib/calls/helpers/createDataChannel.ts","webpack:///./src/lib/calls/helpers/processMediaSection.ts","webpack:///./src/lib/calls/helpers/filterServerCodecs.ts","webpack:///./src/lib/calls/groupCallInstance.ts","webpack:///./src/lib/calls/helpers/getScreenConstraints.ts","webpack:///./src/helpers/formatCallDuration.ts","webpack:///./src/helpers/formatDuration.ts","webpack:///./src/environment/movSupport.ts","webpack:///./src/environment/videoMimeTypesSupport.ts","webpack:///./src/lib/calls/helpers/getAudioConstraints.ts","webpack:///./src/environment/constraintSupport.ts","webpack:///./src/lib/calls/sdpBuilder.ts","webpack:///./src/lib/calls/stringFromLineBuilder.ts"],"names":["cleanUsername","username","toLowerCase","appUsersManager","storage","appStateManager","storages","users","updateUsersStatuses","timestampNow","i","this","user","updateUserStatus","clear","setInterval","rootScope","addEventListener","addMultipleEventsListeners","update","userId","user_id","status","expires","serverTimeManager","serverTimeOffset","was_online","dispatchEvent","setUserToStateIfNeeded","updateUserPhoto","photo","photo_id","forceUserOnline","date","_","toPeerId","console","warn","updateUserName","saveApiUser","Object","assign","first_name","last_name","e","getSelf","id","contactsIndex","indexObject","getUserSearchText","getState","then","state","storagesResults","length","setUserNameToCache","contactsList","Array","isArray","forEach","pushContact","contactsFillPromise","resolve","peerId","appPeersManager","isUser","toUserId","getFromCache","set","getUser","delete","init","usernames","isPeerNeeded","findAndSplice","getTopPeersPromises","createSearchIndex","undefined","Set","updatedContactsList","pushToState","cached","isFulfilled","promise","invokeApi","result","saveApiUsers","contacts","contact","onContactsModified","slice","Promise","resolvedPeer","appChatsManager","saveApiChats","chats","getPeer","getPeerId","peer","add","requestPeerSingle","releaseSinglePeer","phone","pFlags","self","format","filter","Boolean","join","query","includeSaved","sortBy","fillContacts","_contactsList","results","search","has","sort","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","myId","testSelfSearch","unshift","getContacts","userIds","map","block","invokeApiSingle","getInputPeerById","value","apiUpdatesManager","processLocalUpdate","peer_id","getOutputPeer","blocked","index","clearBadChars","ignoreCase","latinize","includeTag","apiUsers","override","saved","oldUser","oldSearchUsername","searchUsername","min","initials","fullName","deleted","cleanSearchText","getAbbreviation","changedPhoto","changedTitle","wasContact","newContact","onContactUpdated","formatPhoneNumber","formatted","access_hash","key","args","isBot","support","today","Date","diff","getTime","getDate","dateEl","timeEl","bot","isRegularUser","isContact","allowMin","phone_number","vcard","eventTimestamp","timestamp","updatesState","syncLoading","importContacts","phones","error","Error","type","inputContacts","j","push","client_id","toString","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","now","peers","offset","limit","hash","topPeers","categories","topPeer","requestPeer","rating","contactsBlocked","count","peerIds","u","concat","c","lat","long","accuracy_radius","background","self_expires","geo_point","updates","processUpdateMessage","entities","parseEntities","trim","path","URL","wrapUrl","url","pathname","err","invokeApiCacheable","q","cacheSeconds","my_results","p","curIsContact","popContact","offline","showPhone","getUserInput","add_phone_privacy_exception","appMessagesManager","appDraftsManager","appNotificationsManager","appMessagesIdsManager","folders","onUpdateFolderPeers","folder_peers","folderPeer","folder_id","dialog","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","folderId","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","pinnedOrders","reverse","newPinned","dialogs","getFolderDialogs","dialogsResult","applyDialogs","d","getCache","peerText","getPeerSearchText","dialogsIndex","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","indexKey","orderIndex","chatId","chat","getChat","left","dropDialogOnDeletion","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","freezeSaving","setDialogsFromState","bind","allDialogsLoaded","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","loaded","0","1","setDialogsLoaded","savePinnedOrders","dialogsOffsetDate","dialogsNum","cachedResults","offsetDate","Math","getOffsetDate","unreadMessagesCount","unreadDialogsCount","skipMigrated","folder","getFolder","migratedTo","filtersStorage","testDialogForFilter","pinnedIndex","pinnedPeerIds","indexOf","generateDialogIndex","generateDialogPinnedDateByIndex","pinned_peers","skipped","isPinned","filters","getDialogIndexKey","wasIndex","findIndex","wasDialog","wasDialogIndex","newDialogIndex","setDialogIndexInFilter","prepareFolderUnreadCountModifyingByDialog","splice","callbacks","callback","toggle","wasUnreadCount","getDialogUnreadCount","newUnreadCount","addMessagesCount","addDialogsCount","modifyFolderUnreadCount","max","dispatchUnreadTimeout","ctx","setTimeout","justReturn","message","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","foundIndex","pts","historyStorage","getHistoryStorage","messagesStorage","getMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","fromId","viaBotId","isAnyChat","newPts","getChannelState","ignoreOffsetDate","saveGlobalOffset","pos","setDialogToState","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","isDialogsLoaded","clearDialogFromState","foundDialog","getDialog","wasPinned","keepLocal","dropped","dropDialogWithEvent","idx","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","newUpdatesAfterReloadToHandle","saveUpdate","size","keys","kicked","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","out","isOutgoing","log","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","Bottom","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","settings","notify_settings","addChannelState","getFilter","offsetIndex","ret","promises","fillContactsResult","reloadMissingDialogsPromise","reloadMissingPeerIds","all","getDialogs","realFolderId","curDialogStorage","indexStr","d1","d2","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","onUpdateDialogFilter","saveDialogFilter","onUpdateDialogFilterOrder","setOrderIndex","hasOwnProperty","updateDialogFilter","updateDialogFilters","oldFilters","getDialogFilters","_filterId","find","updateDialogFilterOrder","reloadedPeerIds","excludePeerIds","includes","includePeerIds","exclude_archived","exclude_read","isDialogUnread","exclude_muted","isPeerLocalMuted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","bots","non_contacts","config","pinned_infolder_count_max","reject","prepend","remove","flags","getOutputDialogFilter","bool","f","a","b","filterIncludedPinnedPeers","include_peers","reloadDialogs","inputPeer","reloadPromises","reloadPromise","overwrite","from","to","oldFilter","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","Map","fetchSingleMessagesPromise","maxSeenId","newMessagesHandleTimeout","newMessagesToHandle","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","logger","Debug","Log","Warn","groupedTempId","typings","unreadMentions","goToNextMentionPromises","handleNewMessages","clearTimeout","handleNewDialogs","newMaxSeenId","obj","dialogsStorage","incrementMaxSeenId","handleNotifications","window","_peerId","idle","isIDLE","notifyPeerToHandle","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","peerTypeNotifySettings","notifyAboutMessage","fwdCount","onUpdateMessageId","randomId","random_id","pendingData","tempId","threadId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","threadKey","getThreadKey","split","threadsStorage","good","isInChat","ignoreExisting","pendingMessage","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","first","action","channel_id","top_msg_id","chat_id","handleNewMessage","inboxUnread","releaseUnreadCount","prepareDialogUnreadCountModifying","mentioned","modifyCachedMentions","setDialogTopMessage","notifyPeer","fwd_from","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","grouped_id","onUpdateReadHistory","max_id","read_max_id","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","threadsToReplies","updateMessage","get","replyTo","reply_to","reply_to_top_id","reply_to_msg_id","cancel","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","getMessageById","fixDialogUnreadMentionsIfNoMessage","media_unread","setDialogToStateIfMessageIsTop","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","clearCache","params","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","historiesStorage","onUpdateChannelReload","onUpdateChannelMessageViews","views","onUpdateServiceNotification","messageId","inbox_date","media","hasUser","verified","pts_count","onUpdatePinnedMessages","missingMessages","wrapSingleMessage","finally","werePinned","pinnedMessages","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","scheduledMessagesStorage","isScheduled","onUpdateDeleteScheduledMessages","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getWebPage","drop","poll","appPollsManager","pollToMessages","maxSeenMsgId","middleware","clean","messagesStorageByPeerId","groupedMessagesStorage","searchesStorage","threadsServiceMessagesIdsStorage","sendEntites","entity","callbackName","finalize","deferred","text","options","invokeAfterMessageIsSent","editMessage","parseMarkdown","schedule_date","scheduleDate","is_scheduled","newMedia","getInputEntities","no_webpage","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","splitted","webPage","sendText","getPeerMigratedTo","generateOutgoingMessage","toggleError","on","send","sentRequestOptions","apiPromise","afterMessageId","invokeApiAfter","query_id","queryId","resultId","clear_draft","clearDraft","silent","wrapMessageEntities","seq","local","beforeMessageSending","file","attachType","apiFileName","fileType","mime_type","fileName","File","name","isDocument","Blob","caption","attributes","isPhoto","document","actionName","isVoiceMessage","attribute","voice","waveform","duration","isMedia","photoSize","w","width","h","height","location","sizes","cacheContext","appDownloadManager","getCacheContext","downloaded","objectURL","appPhotosManager","savePhoto","videoAttribute","round_message","isRoundMessage","supports_streaming","noSound","file_name","thumbs","thumb","blob","thumbCacheContext","appDocsManager","saveDoc","preloader","attachMethod","tryAgainOnFail","isUpload","sentDeferred","attachPromise","catch","uploaded","cancelPendingMessage","setTyping","uploadPromise","file_reference","inputMedia","load","thumbUploadPromise","upload","notifyAll","done","total","inputFile","force_file","addNotifyListener","progress","percents","floor","isGroupedItem","code","files","sendFile","sendFileDetails","groupId","details","o","invoke","multiMedia","multi_media","messageMedia","getMediaInput","doc","inputSingleMedia","inputs","contactPeerId","sendOther","getContactMediaInput","pollId","savePoll","total_voters","recent_voters","getPoll","getPhoto","getDoc","geo","geoPoint","title","address","provider","venue_id","venue_type","postAuthor","signatures","generateFromId","post_author","generateFlags","random","generateReplyHeader","via_bot_id","reply_markup","replyMarkup","replies","generateReplies","pending","replyToTopId","header","channelFull","appProfileManager","chatsFull","linked_chat_id","comments","replies_pts","isAnonymousSending","post","originalMessage","fwdHeader","from_name","channel_post","saved_from_msg_id","saved_from_peer","Number","MAX_SAFE_INTEGER","admin_rights","anonymous","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","noErrorBox","resetPinnedOrder","telegramMeWebManager","setAuthorized","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","fromPeerId","dropCaptions","dropAuthor","newMessages","generateForwardHeader","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","createMessageStorage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","just_clear","revoke","affectedHistory","doFlushHistory","justClear","getHistory","historyResult","getChannelInput","s","m","ss","getPinnedMessage","getSearch","inputFilter","unpin","pm_oneside","unpinAll","unpinAllMessages","totalEntities","foundMessages","getMidsByAlbum","verify","isMessage","reply_to_mid","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","fwdFromId","mediaContext","ttl_seconds","messageKey","getMessageKeyForPendingWebPage","saveWebPage","migrateFrom","migrateTo","suffix","video_sizes","appGroupCallsManager","saveGroupCall","call","video","reason","migrateChecks","saveMessage","apiEntities","fixEmoji","myEntities","mergeEntities","usingMids","plain","highlightWord","withoutMediaType","parts","hasAlbumKey","addPart","langKey","part","el","createElement","innerHTML","append","assumeType","usingFullAlbum","getMidsByMessage","albumText","getAlbumText","emoticon","wrapEmojiText","question","rReply","game","stickerEmojiRaw","stickerEmoji","performer","actionWrapped","wrapMessageActionTextNew","wrapPlainText","match","found","regExp","RegExp","exec","sortEntities","messageWrapped","wrapRichText","noLinebreaks","noLinks","noTextFormat","htmlToDocumentFragment","fragment","createDocumentFragment","senderTitle","classList","fromMe","getMessageSenderPeerIdOrName","element","peerTitle","fromName","onclick","href","setAttribute","unsafeMessage","langPackKey","getNameDivHTML","getPeerTitle","formatCallDuration","endsWith","wrapJoinVoiceChatAnchor","daysToStart","tomorrowDate","setDate","k","_args","IntlDateElement","day","month","year","t","pinnedMessage","fetchMessageReplyTo","isMessageIsTopMessage","dataset","dir","wrapMessageForReply","htmlToSpan","joined","anchorHTML","domain","langPack","wrapMessageActionTextNewUnsafe","botId","startParam","start_param","inviteToChannel","addChatUser","str","toggleDialogPin","pinned_dialogs_count_max","getPinnedOrders","getDialogPeer","read","hasChat","fromChat","kind","goodMedias","sticker","canMessageBeEdited","edit_time_limit","hasRights","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","canCache","func","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","goodEntities","matchUrl","nextRate","backLimit","minDate","maxDate","filterMessagesByInputFilter","next_rate","offset_id_offset","method","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","getDiscussionMessage","maxMessageId","serviceStartMessage","is_single","msg_id","filterMessages","generateThreadServiceStartMessage","newDialogsHandlePromise","localMessageIds","creator","delete_messages","affectedMessages","force","triedToReadMaxId","readPromise","soundReset","getPeerString","readHistory","slicedArray","Top","fixUnreadMentionsCountIfNeeded","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","msgIds","threadMessage","broadcastEventName","finalizePendingMessage","muteUntil","mute_until","mute","mutePeer","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","downloadOptions","getPhotoDownloadOptions","fakeDownload","getInputFileName","polls","handleReleasingMessage","increment","notification","peerString","notificationMessage","show_previews","tag","peerPhoto","getPeerPhoto","appAvatarsManager","loadAvatar","loadPromise","image","notify","canSendToPeer","isFetchIntervalNeeded","unsetEnd","haveSlice","sliceMe","fulfilled","Both","fillHistoryStorage","constructSlice","offsetIdOffset","topWasMeantToLoad","isBottomEnd","isHistoryResultEnd","requestHistory","oldestMessage","foundSlice","_historyResult","requestPromises","after","getMessagesResult","fetchSingleMessages","replyToPeerId","reply_to_peer_id","typing","timeout","smth","referenceDatabase","deleteContext","deleteWebPageFromPending","updatePollToMessage","groupedId","groupedStorage","albums","peerMessagesToHandle","deletedMids","noforwards","noForwards","DialogColorsFg","DialogColors","DialogColorsMap","newMethod","originMethod","String","prototype","getUserPhoto","getChatPhoto","plainText","onlyFirstName","getUserString","getChatString","isPeerId","charAt","peerParams","substr","isMegagroup","ignorePeerId","getInputPeer","getUserInputPeer","pic","abs","getDialogType","getChatTyped","onChatUpdated","updateChannelParticipant","updateChatDefaultBannedRights","default_banned_rights","apiChats","saveApiChat","oldChat","participants_count","rights","defaultRights","isThread","isCheckingRightsForSelf","megagroup","banned_rights","myFlags","post_messages","broadcast","until_date","getChannelInputPeer","getChatInputPeer","input","usersInputs","fwdLimit","fwd_limit","deleteChatUser","leaveChannel","leaveChat","deleteChannel","deleteChat","inputChatPhoto","about","participant","getParticipantPeerId","actor_id","qts","prev_participant","new_participant","kicked_by","editBanned","view_messages","kickFromChannel","messagesChats","enabled","migrateChat","weakMap","WeakMap","peerTitleWeakMap","querySelectorAll","PeerTitle","AppPhotosManager","photos","context","oldPhoto","saveContext","boxWidth","boxHeight","useBytes","pushDocumentSize","devicePixelRatio","bestPhotoSize","inputUser","photosResult","photoIds","bytes","isSticker","arr","mimeType","Uint8Array","jpegHeader","jpegTail","createObjectURL","num","getPreviewURLFromBytes","useBlur","getPreviewURLFromThumb","Image","noZoom","choosePhotoSize","boxSize","aspect","isFit","aspectCovered","style","ignoreCache","getImageFromStrippedThumb","queueId","onlyCache","thumb_size","dcId","dc_id","photoId","fullWidth","fullHeight","download","getDownload","getInput","fullPhotoSize","downloadToDisc","bytesToHex","bytesFromHex","hexString","len","ceil","start","parseInt","bytesToBase64","mod3","nLen","nUint24","nIdx","fromCharCode","uint6ToBase64","replace","nUint6","bytesCmp","bytes1","bytes2","bytesXor","convertToUint8Array","TextEncoder","encode","bufferConcats","reduce","acc","v","byteLength","tmp","lastLength","ArrayBuffer","bytesFromWordss","bytesToWordss","words","Uint32Array","LOCAL_IDS_SET","appStickersManager","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","updateNewStickerSet","stickerSet","stickerset","saveStickerSet","getGreetingStickersTimeout","getGreetingSticker","justPreload","getGreetingStickersPromise","getStickersByEmoticon","docs","greetingStickers","shift","downloadDoc","cachedSet","documents","refreshTime","useCache","saveStickers","getStickerSetInput","saveById","getStickerSet","getAnimatedEmojiSounds","emoji","animations","getAnimatedEmojiSoundsPromise","getAppConfig","appConfig","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","invokeApiHashable","processResult","res","stickers","isAnimation","cleanEmoji","pack","packs","preloadEmojiPromise","getAnimatedEmojiSticker","json","mediaSize","active","emojiSticker","toneIndex","animation","loadAnimationWorker","container","animationData","autoplay","loop","saveLottiePreview","canvas","once","preloadAnimatedEmojiStickerAnimation","soundDoc","getAnimatedEmojiSoundDocument","newSet","setToCache","needSave","installed_date","thumb_dc_id","isAnimated","animated","thumb_version","short_name","sets","covered","archived","excludeFeatured","exclude_featured","foundSaved","cache","cover","getAllStickers","allStickers","includeOurStickers","preloadStickerSets","getRecentStickers","messagesStickers","installedSets","recentStickers","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","docId","docEmoticon","_doc","AppProfileManager","usersFull","onUpdateUserTyping","typingsInPeer","cancelAction","getChatFull","onUpdatePeerBlocked","userFull","updateChatParticipants","participants","chatFull","updateChatParticipantAdd","_participants","inviter_id","version","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","chat_photo","refreshFullPeer","invalidateChannelParticipants","invokeApiSingleProcess","usersUserFull","full_user","profile_photo","rAbout","getProfile","getCachedFullUser","getCachedFullChat","getProfileByPeerId","profile","getChannelFull","full_chat","exported_invite","link","exportedInvite","channelParticipant","fullChannel","processError","getChannelParticipants","cP","getTopPeers","ratingMap","processUserIds","updateResult","previous","deletedList","verifyParticipantForOnlineCount","chatInfo","channelParticipants","reduceParticipantsForOnlineCount","onlines","pendingPtsUpdates","pendingSeqUpdates","syncPending","channelStates","attached","debug","processOpts","seqStart","seq_start","forceGetDifference","processUpdate","toId","Proxy","target","saveUpdatesState","us","nextSeq","pendingUpdatesData","popPendingSeqUpdate","seqAwaiting","ptsAwaiting","curState","curPts","goodPts","goodIndex","getDifference","wasSyncing","pts_total_limit","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","justAName","channelState","getChannelDifference","lastPtsUpdateTime","popPts","popSeq","popPendingPtsUpdate","newVersion","stateResult","setUpdatesProcessor","setProxy","fetch","ok","EXTENSION_MIME_TYPE_MAP","mov","gif","pdf","savingLottiePreview","downloading","onServiceWorkerFail","supportsStreaming","oldDoc","audioTitle","audioPerformer","alt","stickerSetInput","ext","pop","mappedMimeType","monthAsNumber","leadingZero","isServiceWorkerOnline","getFileURL","thumbSize","inputFileLocation","getFileDownloadOptions","preloadPhoto","tryNotToUseBytes","getThumbURL","originalPromise","isPlaySupported","reader","FileReader","onloadend","uint8","decode","readAsArrayBuffer","stickerCachedThumbs","toBlob","createDownloadAnchor","addTaskListener","task","payload","VisibilityIntersector","onVisibilityChange","items","locked","observer","IntersectionObserver","entries","changed","entry","isIntersecting","visible","getVisible","disconnect","targets","observe","unobserve","unlock","refresh","parallelLimit","queue","inProcess","lockPromise","unlockResolve","processQueue","throttle","_processQueue","item","loadItem","getItem","processItem","addElement","super","lock","intersector","unlockAndRefresh","div","intersectorTimeout","wasSeen","setProcessQueueTimeout","_queue","spliced","prefixes","maxPrefixLength","setPrefix","country","prefix","country_code","originalStr","countriesList","country_codes","prefixCountry","phoneCode","leftPattern","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","symbol","x","html","span","isObject","object","intToUint","val","longFromInts","high","low","bigInt","sortLongsArray","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","randomize","buffer","windowSize","visualViewport","innerWidth","innerHeight","AppMessagesIdsManager","tempNum","temp","MESSAGE_ID_OFFSET","MESSAGE_ID_INCREMENT","clearMessageId","toServer","l","used","notificationsShown","notificationIndex","notificationsCount","soundsPlayed","vibrateSupport","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","faviconEl","head","querySelector","titleBackup","titleChanged","stopped","pushInited","updateLocalSettings","updSettings","nodesktop","volume","novibrate","nopreview","nopush","needPush","isAvailable","registeredDevice","subscribe","unsubscribe","setSettings","nosound","notifications","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","requestPermission","Notification","removeEventListener","navigator","vibrate","mozVibrate","webkitVibrate","notificationsUiSupport","topMessagesDeferred","notifySoundEl","body","checkMuteUntilThrottled","stop","newVal","toggleToggler","tokenData","unregisterDevice","registerDevice","notificationData","period","custom","enable","resetTitle","setFavicon","clearInterval","titleInterval","getContext","beginPath","arc","PI","fillStyle","fill","fontSize","font","textBaseline","textAlign","fillText","toDataURL","getNotifyPeerTypePromise","inputKey","compare_sound","notifyContactsSignUp","prevFavicon","cloneNode","parentNode","replaceChild","isMuted","respectType","n","notifySettings","inputNotify","typeNotifySettings","getPeerLocalSettings","permission","data","testSound","icon","setLocalNotificationsDisabled","close","focus","onclose","show","hide","nextSoundAt","prevSoundVolume","filename","audio","hidePushNotifications","token_type","tokenType","token","tokenValue","other_uids","app_sandbox","secret","loadedURLs","elem","HTMLImageElement","HTMLVideoElement","src","SVGImageElement","setAttributeNS","backgroundImage","renderImageFromUrl","isImage","loader","renderImageFromUrlPromise","fixBase64String","toUrl","ProgressivePreloader","detached","cancelable","streamable","onClick","contains","loadFunc","color","bold","constructContainer","construct","totalLength","downloadSvg","lastElementChild","cancelSvg","previousElementSibling","circle","firstElementChild","setProgress","startTime","onEnd","elapsedTime","delay","TRANSITION_TIME","detach","attach","parentElement","setManual","reset","useRafs","getTotalLength","strokeDasharray","createPosterFromMedia","videoWidth","videoHeight","naturalWidth","naturalHeight","quality","aspectFitted","drawImage","createPosterFromVideo","onseeked","currentTime","onerror","createPosterForVideo","preloadVideo","race","onMediaLoad","readyState","HAVE_METADATA","useCanplayOnIos","getFilesFromEvent","onlyTypes","scanFiles","isDirectory","directoryReader","createReader","readEntries","itemFile","getAsFile","DataTransferItem","DragEvent","dataTransfer","clipboardData","originalEvent","webkitGetAsEntry","requestFile","accept","display","click","radix","bpe","mask","digitsStr","buff","one","int2bigInt","s0","s3","s4","s5","s6","s7","sa","eg_u","eg_A","eg_B","eg_C","eg_D","bitSize","z","expand","ans","copy_","mod","dup","mod_","mult","y","copyInt_","linCombShift_","mult_","powMod","powMod_","pow","sub","sub_","add_","eGCD_","g","halve_","greater","equalsInt","negative","multInt_","leftShift_","greaterShift","kx","ky","divide_","r","y1","y2","subShift_","addShift_","rightShift_","modInt","bits","minSize","str2bigInt","base","kk","substring","addInt_","equals","isZero","bigInt2str","divInt_","bigInt2bytes","littleEndian","cmp","ys","multMod_","squareMod_","k1","k2","kn","np","inverseModInt","mont_","ui","ks","savedAvatarURLs","getAvatarPromise","peerPhotoFileLocation","big","img","onlyThumb","renderThumbPromise","thumbImage","animate","animationsEnabled","putAvatar","stripped_thumb","childElementCount","mutateElement","renderPromise","isDialog","getPeerColorById","avatarAvailable","avatarRendered","abbr","getMiddleware","cleanupObj","cleaned","additionalCallback","_cleanupObj","GROUP_CALL_STATE","SearchIndex","minChars","fullTexts","searchText","newFoundObjs","queryWords","queryWordsLength","fullText","what","foundChars","word","fullTextLength","testQueue","fontFamily","timeoutId","setTestQueue","cancelAnimationFrame","requestAnimationFrame","testQueueElements","testElement","capture","passive","mapped","firstTime","textLength","multiplier","textWidth","elementWidth","textContent","fontWeight","getTextWidth","getBoundingClientRect","newElementWidth","widthChanged","smallerText","smallerWidth","smallerTextLength","half","half1","half2","removeAttribute","measureText","MiddleEllipsisElement","HTMLElement","customElements","define","drafts","getAllDraftPromise","updateDraftMessage","peerID","getKey","getAllDrafts","apiDraft","processApiDraft","draft1","draft2","rMessage","wrapDraftText","localDraft","saveOnServer","serverDraft","getDraft","draftsAreEqual","draftObj","isEmptyDraft","saveLocalDraft","combined","emptyDraft","syncDraft","AudioAssetPlayer","assets","createAudio","play","Audio","pause","playSound","makeSsrcsFromParticipant","makeSsrcFromParticipant","source","audio_source","source_groups","endpoint","presentation","groupCalls","nextOffsets","updateGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","currentGroupCall","hangUp","audioAsset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","skipCounterUpdating","getCachedParticipants","oldParticipant","hasLeft","muted","can_self_unmute","isCurrentGroupCall","onParticipantUpdate","doNotDispatchParticipantUpdate","getGroupCall","modified","just_joined","apiParticipants","saveApiParticipant","isUpdatingMeInCurrentCall","isSharingAudio","raiseHand","raise_hand_rating","videoStopped","generateSelfVideo","connections","main","sources","setMuted","getGroupCallInput","getInputPeerSelf","raise_hand","video_paused","videoPaused","video_stopped","presentation_paused","presentationPaused","participants_next_offset","oldCall","shouldUpdate","stopConnectingSound","playSoundWithTimeout","stopSound","cancelDelayedPlay","rejoin","joinVideo","streamManager","constraints","getAudioConstraints","getVideoConstraints","stream","getStream","addStream","inputStream","MediaStream","createMainStreamManager","joinGroupCallInternal","bindPrefix","fixSafariAudio","CLOSED","setCurrentGroupCall","getGroupCallFull","connectionInstance","createConnectionInstance","connection","createPeerConnection","negotiate","event","onTrack","iceConnectionState","startConnectingSound","getGroupCallParticipants","values","createDescription","createDataChannel","appendStreamToConference","handleUpdateGroupCallParticipants","updatingSdp","audioSource","sourceGroups","mainSources","presentationSources","tsNow","prepareToSavingNextOffset","ids","groupCallParticipants","next_offset","discard","changeUserMuted","getParticipantByPeerId","editParticipant","badCharsRe","trimRe","clearBadCharsAndTrim","latinizeString","ch","latinizeCh","LatinizeMap","hasTag","processSearchText","SliceEnd","SlicedArray","sliceConstructor","getSliceConstructor","slices","end","None","side","deleteCount","flatten","lowerBound","upperBound","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","prevSlice","nextSlice","sliceOffset","findSliceOffset","sliceStart","sliceEnd","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","updateMessagePoll","poll_id","saveResults","rQuestion","chosenIndexes","answer","chosen","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","optionIds","answers","option","sendVote","votesList","closed","newPoll","getInputMediaPoll","toTelegramSource","fromTelegramSource","getAmplitude","array","scale","rms","sqrt","ConferenceEntry","port","direction","originalDirection","setDirection","transceiver","addTransceiver","isAnswer","generateSsrc","LocalConferenceDescription","sessionId","entriesByMid","entriesBySource","entriesByPeerId","setSource","setPeerId","isSending","sendEntry","recvEntry","createEntry","fromConference","conference","heavyQueue","processingQueue","addHeavyTask","processHeavyQueue","todo","performance","possiblePromise","process","apply","realResult","timedChunk","isFilterAvailable","requireBlurPromise","fastBlurFunc","processBlurNext","radius","iterations","alpha","default","blurPromises","dataUri","onload","contexts","links","originalPayload","refreshReference","postMessage","reference","getContexts","_context","getReferenceByLink","next","refreshEmojiesSoundsPromise","hex","newHex","newContext","template","content","ConnectionStatus","mediaDevices","getUserMedia","getTracks","frameRate","AudioStreamAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","gain","createGain","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","StreamManager","interval","streamAnalyser","track","frequencyBinCount","getByteFrequencyData","analyse","counter","amplitudes","AudioContext","webkitAudioContext","outputStream","canCreateConferenceEntry","addTrack","getSource","itemSource","removeTrack","finalizeAddingTrack","changeTimer","oldTrack","timer","lol","transceiverInit","streams","types","tracks","findEntry","createTransceiver","sender","replaceTrack","IS_VIBRATE_SUPPORTED","opusDecodeController","sampleRate","tasks","keepAlive","isPlaySupportedResult","canPlayType","wavWorker","Worker","page","onTaskEnd","worker","command","buffers","typedArray","loadWorker","loadWavWorker","terminateWorkers","executeNewTask","kill","terminate","decoderSampleRate","outputBufferSampleRate","wavBitDepth","wavSampleRate","pages","withWaveform","pushDecodeTask","dataBlob","photoTypeSet","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","rTitle","contextHashtag","matches","shortDescriptionText","description","rDescription","contextSite","pendingSet","IMAGE_MIME_TYPES_SUPPORTED","GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX","GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS","stopTrack","subtle","crypto","sha1HashSync","digest","sha256HashSync","aesEncryptSync","keyBytes","ivBytes","encryptedBytes","encrypt","aesDecryptSync","decryptedBytes","decrypt","rsaEncrypt","publicKey","N","modulus","E","exponent","X","encryptedBigInt","hash_pbkdf2","salt","importKey","deriveBits","pqPrimeFactorization","pqBytes","lim","P","Q","minLen","it","pqPrimeLeemon","bytesModPow","xBigInt","yBigInt","mBigInt","resBigInt","gzipUncompress","inflate","boolFalse","API","constructors","predicate","boolTrue","vector","gzipPacked","MTProto","maxLength","mtproto","startMaxLength","createBuffer","intView","Int32Array","byteView","resultBuffer","resultInt32","subarray","getArray","typed","resultArray","needBytes","previousBuffer","previousArray","field","checkLength","writeInt","iHigh","iLow","sLong","storeLongP","storeIntBytes","storeRawBytes","Float64Array","sUTF8","unescape","encodeURIComponent","methodName","methodData","methods","storeInt","flagsOffsets","param","condType","fieldBit","storeObject","paramName","storeLong","storeString","storeBytes","storeDouble","storeBool","itemType","schema","isBare","constructorData","readInt","doubleView","longDec","isSafeInteger","fetchObject","decodeURIComponent","escape","fetchInt","fetchLong","fetchIntBytes","fetchString","fetchBytes","fetchDouble","fetchBool","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","TLDeserialization","TLSerialization","computeSRP","password","isNew","algo","new_algo","current_algo","pw_hash","client_salt","server_salt","invokeCrypto","makePasswordHash","salt1","salt2","padArray","flipper","B","srp_B","pForHash","gForHash","b_for_hash","kHash","k_v","is_good_mod_exp_first","modexp","prime","a_for_hash","secure_random","A","generate_and_check_random","g_b","ux","a_ux","S","K","h1","h2","M1","srp_id","webWorker","taskId","awaiting","utils","timeManager","lastMessageId","timeOffset","sessionStorage","timeTicks","serverTime","localTime","newTimeOffset","server_time_offset","Counter","initialValue","_counter","_remainingCounter","_remainingCounterIndex","_aes","encrypted","Obfuscation","codec","initPayload","val2","reversedPayload","encKey","encIv","decKey","decIv","encNew","decNew","obfuscateTag","Connection","logSuffix","retryTimeout","intermediate","obfuscation","connected","autoReconnect","onOpen","setTransportOpened","networker","setConnectionStatus","Connected","cleanupSent","resend","encoded","encodeBody","releasePending","onMessage","readPacket","parseResponse","response","processMessage","onClose","needTimeout","retryAt","time","lastCloseTime","isNaN","Closed","reconnectTimeout","reconnect","Connecting","bodySent","logTypes","setTransportClosed","setAutoReconnect","toEncode","encodePacket","socketId","socketsProxied","TEST_SUFFIX","test","sslSubdomains","dcOptions","host","chosenServers","transportSocket","connectionType","chosenServer","oooohLetMeLive","transportHTTP","ssl","http","dcOption","transportType","transport","reuse","client","servers","transports","opened","waitForWebSocket","https","dcConfigurator","chooseServer","baseDcId","websocket","httpPromise","_send","websocketPromise","socket","isHttpAvailable","isWebSocketAvailable","destroy","pinging","pingTransports","setTransportValue","mode","arrayBuffer","TextDecoder","setConnected","destroyed","releasing","invokeAfterMsgConstructor","authKey","authKeyId","serverSalt","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResends","nextReq","checkConnectionPeriod","lastResendReq","isOnline","lastResponseTime","activeRequests","checkLongPoll","isClean","longPollPending","isStopped","isFileNetworker","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingId","storeMethod","ping_id","pingMessage","generateId","seq_no","generateSeqNo","getBytes","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","isFileUpload","fileUpload","isFileDownload","fileDownload","updateSession","seqNo","prevSessionId","sentMessageId","sentMessage","inner","innerSentMessageId","innerSentMessage","updateSentMessage","notContentRelated","pushMessage","connectionInited","invokeWithLayer","layer","initConnection","userAgent","platform","isMainDomain","language","resultType","isAPI","oldTransport","removeTransport","nextReqTimeout","longPollInterval","changeTransport","forceReconnect","sendingLongPoll","wrapMtpCall","max_delay","wait_after","max_wait","noResponse","longPoll","checkConnectionRetryAt","scheduleRequest","noResponseMsgs","pushResend","shouldResolve","noSchedule","TimedOut","noop","setDrainTimeout","onDrainTimeout","onDrain","willChange","onConnectionStatusChange","innerMsgId","acked","dataWithPadding","msgKeyLargePlain","msgKeyLarge","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","ackMsgIds","wrapMtpMessage","msg_ids","resendMsgIds","resendOpts","req_msg_id","resend_msg_ids","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","messageByteLength","generateContainerMessage","messageWithBody","handleSentEncryptedRequestHTTP","innerMessages","getMsgKey","keyIv","getAesKeyIv","encryptedData","dataBuffer","getBuffer","paddingLength","getOffset","getEncryptedMessage","encryptedResult","request","getEncryptedOutput","requestData","baseError","originalError","responseBuffer","deserializer","fetchRawBytes","getDecryptedMessage","calcMsgKey","messageBodyLength","messageBody","mt_message","seqno","stack","setOffset","mt_rpc_result","newServerSalt","bigIntBytes","longToBytes","cb","performScheduledRequest","notEmpty","rawError","error_message","error_code","msg","innerMessage","applyServerSalt","new_server_salt","bad_msg_id","ackMessage","changedOffset","applyServerTime","badMessage","processMessageAck","first_msg_id","updatesProcessor","answer_msg_id","reqResendMessage","badMsgId","networkerFactory","networkers","langPackCode","stoppedNetworkers","langCode","forceReconnectTimeout","testPublicKeysHex","publisKeysHex","publicKeysParsed","prepared","preparePromise","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","prepare","fingerprintHex","foundKey","fingerprint","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","auth","nonce","sendPlainRequest","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","select","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","dc","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","_gABigInt","_dhPrimeBigInt","_two","_twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","getTransportType","_try","sendReqPQ","apiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","afterMessageTempIds","changeTransportType","dcs","oldTransportType","oldObject","newObject","oldGetKey","newGetKey","iterateNetworkers","info","setBaseDcId","userAuth","dcID","getBaseDcId","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","storageKeys","storageResult","logoutPromises","ignoreErrors","closeDatabases","maxNetworkers","generateNetworkerGetKey","ak","authKeyHex","serverSaltHex","authorizer","_error","newTransportType","canRelease","removeNetworker","prepareTempMessageId","cachedNetworker","rejectPromise","logOut","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","stopTime","waitTime","floodMaxTimeout","getScreenStream","getDisplayMedia","getStreamCached","_cache","screen","isScreen","player","elements","hasInputTrackKind","requestInputSource","isAudioGood","isVideoGood","isSharingVideo","getVideoTracks","saveInputVideoStream","onInputStream","cleanup","tryAddTrack","isOutput","tagName","isVideo","elementEndpoint","useStream","paused","srcObject","sinkId","outputDeviceId","setSinkId","appendChild","getAudioTracks","isClosing","appendToConference","SDP","session","mediaSections","lines","line","parsed","section","splitStringByLimitWithRest","separator","UniqueNumberGenerator","maxTries","SDPAttributeSplitted","SDPMediaLineParts","protocol","missed","rest","nestedMap","makeAttributes","innerParts","fillAttributes","attributesMap","linesArray","mediaLineParts","exists","resultShouldBeArray","SDPSessionSection","parseSdp","createSection","sessionSection","lineStr","isIncorrectSdpLine","parseSdpLine","parseMediaSectionInfo","sdp","clientInfo","lookupAttributeKeys","setup","ssrc","telegramSourceGroups","sdpLines","semantics","parseSourceGroups","raw","ufrag","pwd","fixLocalOffer","offer","hasMunged","skipAddingMulticast","generator","mediaType","originalSsrcs","ssrcs","generate","ssrcs2","ssrcsStrLines","ssrc2","addSimulcast","mediaLine","localMLine","codecIds","sectionInfo","newData","candidates","setPort","newChannel","addSsrcEntry","mungedSdp","RTCPeerConnection","signalingState","connectionState","dict","dataChannel","stopStream","closeConnection","negotiating","negotiateInternal","JSON","stringify","negotiateThrottled","iceServers","iceTransportPolicy","bundlePolicy","rtcpMuxPolicy","iceCandidatePoolSize","maybeUpdateRemoteVideoConstraints","updateConstraintsInterval","localSdp","mainChannels","processedChannels","processed","processMediaSection","audioChannel","videoChannel","useChannel","channels","setEntrySource","setEntryPeerId","parse","groupCallInput","join_as","setData","extmap","performExtmap","uri","filterServerCodecs","isNewConnection","getEntryByMid","originalOffer","createOffer","iceRestart","setLocalDescription","invokeJoinGroupCall","entriesToDelete","bundle","shouldBeSkipped","answerDescription","generateSdp","deleteEntry","iceGatheringState","setRemoteDescription","updateConstraints","colibriClass","defaultConstraints","maxHeight","onStageEndpoints","minHeight","sendDataChannelData","isSpeakingMap","pinnedSources","participantsSsrcs","hadAutoPinnedSources","dispatchPinnedThrottled","pinnedSource","MUTED","UNMUTED","MUTED_BY_ADMIN","CONNECTING","requestAudioSource","toggleMuted","getElement","clone","raise","stopScreenSharing","addInputVideoStream","startScreenSharingPromise","startScreenSharingInternal","unpinSource","closeConnectionAndStream","isSharingScreen","startScreenSharing","startVideoSharingPromise","startVideoSharingInternal","stopVideoSharing","startVideoSharing","isDiscarded","getEntryBySource","oldSsrcs","pinSource","modifiedTypes","oldSsrc","oldSource","oldEntry","setEndpoint","CALL_DURATION_LANG_KEYS","showLast","formatDuration","strings","VIDEO_MIME_TYPES_SUPPORTED","channelCount","constraint","getSupportedConstraints","constraintSupported","WEBRTC_MEDIA_PORT","getConnectionTypeForMediaType","generateMediaFirstLine","payloadIds","joiner","newLine","strs","foundation","component","toUpperCase","priority","ip","generation","performCandidate","sId","bundleMids","skipCandidates","candidate","addCandidate","streamName","addSource","addMsid","ssrcGroup","isApplication","isInactive","payloadTypes","addTransport","hdrexts","hdrext","clockrate","parameters","fbs","fb","subtype","addSsrc","addHeader","addConference"],"mappings":"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","file":"5.2441bbbb2994a9467257.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { filterUnique, indexOfAndSplice } from \"../../helpers/array\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport cleanSearchText from \"../../helpers/cleanSearchText\";\nimport cleanUsername from \"../../helpers/cleanUsername\";\nimport { formatFullSentTimeRaw, tsNow } from \"../../helpers/date\";\nimport { formatPhoneNumber } from \"../../helpers/formatPhoneNumber\";\nimport { safeReplaceObject, isObject } from \"../../helpers/object\";\nimport { Chat, InputContact, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus, InputGeoPoint } from \"../../layer\";\nimport I18n, { i18n, LangPackKey } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager {\n  private storage = appStateManager.storages.users;\n  \n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n  \n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  constructor() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    rootScope.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= serverTimeManager.serverTimeOffset;\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= serverTimeManager.serverTimeOffset;\n            }\n          }\n\n          //user.sortStatus = this.getUserStatusForSort(user.status);\n          rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } //////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto).photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          rootScope.dispatchEvent('user_update', userId);\n          rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n          \n          this.saveApiUser(Object.assign({}, user, {\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }), true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    appStateManager.getState().then((state) => {\n      const users = appStateManager.storagesResults.users;\n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n            this.setUserNameToCache(user);\n          }\n        }\n      }\n\n      const contactsList = state.contactsList;\n      if(contactsList && Array.isArray(contactsList)) {\n        contactsList.forEach(userId => {\n          this.pushContact(userId);\n        });\n\n        if(contactsList.length) {\n          this.contactsFillPromise = deferredPromise();\n          this.contactsFillPromise.resolve(this.contactsList);\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId) => {\n        if(!appPeersManager.isUser(peerId)) {\n          return;\n        }\n        \n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId) => {\n        if(!appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const users = appStateManager.storagesResults.users;\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!appStateManager.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          users.findAndSplice((user) => user.id === userId);\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n    \n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  }\n\n  private onContactsModified() {\n    const contactsList = [...this.contactsList];\n    appStateManager.pushToState('contactsList', contactsList);\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n      \n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified();\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    if(this.usernames[username]) {\n      return Promise.resolve(this.users[this.usernames[username]]);\n    }\n\n    return apiManager.invokeApi('contacts.resolveUsername', {username}).then(resolvedPeer => {\n      this.saveApiUsers(resolvedPeer.users);\n      appChatsManager.saveApiChats(resolvedPeer.chats);\n\n      return appPeersManager.getPeer(appPeersManager.getPeerId(resolvedPeer.peer));\n    });\n  }\n\n  public pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    appStateManager.requestPeerSingle(id.toPeerId(), 'contact');\n  }\n\n  public popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    appStateManager.releaseSinglePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then(_contactsList => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter(id => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = appUsersManager.getUserStatusForSort(appUsersManager.getUser(userId1).status);\n          const status2 = appUsersManager.getUserStatusForSort(appUsersManager.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = rootScope.myId.toUserId();\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0], \n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1], \n    sortBy?: Parameters<AppUsersManager['getContacts']>[2]) {\n    return this.getContacts(query, includeSaved, sortBy).then(userIds => {\n      return userIds.map(userId => userId.toPeerId(false));\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: appPeersManager.getInputPeerById(peerId)\n    }).then(value => {\n      if(value) {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  private setUserNameToCache(user: MTUser.user, oldUser?: MTUser.user) {\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = user.id;\n      }\n    }\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    this.setUserNameToCache(user, oldUser);\n\n    if(!oldUser \n      || oldUser.initials === undefined \n      || oldUser.sortName === undefined \n      || oldUser.first_name !== user.first_name \n      || oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);  \n      user.initials = RichTextProcessor.getAbbreviation(fullName);\n    } else {\n      user.sortName = oldUser.sortName;\n      user.initials = oldUser.initials;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= serverTimeManager.serverTimeOffset;\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= serverTimeManager.serverTimeOffset;\n      }\n    }\n\n    //user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      if(user.first_name !== oldUser.first_name \n        || user.last_name !== oldUser.last_name \n        || user.username !== oldUser.username) {\n        changedTitle = true;\n      }\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n        \n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n    }\n\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n    }\n\n    this.setUserToStateIfNeeded(user);\n  }\n\n  public setUserToStateIfNeeded(user: User) {\n    if(appStateManager.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public formatUserPhone(phone: string) {\n    return '+' + formatPhoneNumber(phone).formatted;\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {id, pFlags: {deleted: true}, access_hash: ''} as User;\n  }\n\n  public getSelf() {\n    return this.getUser(rootScope.myId);\n  }\n\n  public getUserStatusString(id: UserId): HTMLElement {\n    let key: LangPackKey;\n    let args: any[];\n\n    switch(id) {\n      case REPLIES_PEER_ID:\n        key = 'Peer.RepliesNotifications';\n        break;\n      case SERVICE_PEER_ID:\n        key = 'Peer.ServiceNotifications';\n        break;\n      default: {\n        if(this.isBot(id)) {\n          key = 'Bot';\n          break;\n        }\n\n        const user = this.getUser(id);\n        if(!user) {\n          key = '' as any;\n          break;\n        }\n\n        if(user.pFlags.support) {\n          key = 'SupportStatus';\n          break;\n        }\n\n        switch(user.status?._) {\n          case 'userStatusRecently': {\n            key = 'Lately';\n            break;\n          }\n    \n          case 'userStatusLastWeek': {\n            key = 'WithinAWeek';\n            break;\n          }\n    \n          case 'userStatusLastMonth': {\n            key = 'WithinAMonth';\n            break;\n          }\n          \n          case 'userStatusOffline': {\n            const date = user.status.was_online;\n            const today = new Date();\n            const now = today.getTime() / 1000 | 0;\n            \n            const diff = now - date;\n            if(diff < 60) {\n              key = 'Peer.Status.justNow';\n            } else if(diff < 3600) {\n              key = 'Peer.Status.minAgo';\n              const c = diff / 60 | 0;\n              args = [c];\n            } else if(diff < 86400 && today.getDate() === new Date(date * 1000).getDate()) {\n              key = 'LastSeen.HoursAgo';\n              const c = diff / 3600 | 0;\n              args = [c];\n            } else {\n              key = 'Peer.Status.LastSeenAt';\n              const {dateEl, timeEl} = formatFullSentTimeRaw(date);\n              args = [dateEl, timeEl];\n            }\n            \n            break;\n          }\n    \n          case 'userStatusOnline': {\n            key = 'Online';\n            break;\n          }\n    \n          default: {\n            key = 'ALongTimeAgo';\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n    \n    return i18n(key, args);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n  \n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id.toPeerId() !== rootScope.myId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public canSendToUser(id: UserId) {\n    const user = this.getUser(id);\n    return !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID;\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputPeerSelf'};\n    }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  public updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  public updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user &&\n      user.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n      \n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then(userIds => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          //console.log(result);\n          this.saveApiUsers(result.users);\n          appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = appPeersManager.getPeerId(topPeer.peer);\n              appStateManager.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n  \n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        appStateManager.pushToState('topPeersCache', state.topPeersCache);\n  \n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then(contactsBlocked => {\n      this.saveApiUsers(contactsBlocked.users);\n      appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map(u => u.id.toPeerId()).concat(contactsBlocked.chats.map(c => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number, \n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return apiManager.invokeApi('contacts.getLocated', {\n      geo_point, \n      background\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then(results => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map(p => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map(p => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = RichTextProcessor.parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(RichTextProcessor.wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then(peers => {\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map(p => appPeersManager.getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map(p => appPeersManager.getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map(userId => this.getUserInput(userId))\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach(userId => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n}\n\nconst appUsersManager = new AppUsersManager();\nMOUNT_CLASS_TO.appUsersManager = appUsersManager;\nexport default appUsersManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { Chat, DialogPeer, Message, MessagesPeerDialogs, Update } from \"../../layer\";\nimport type { AppChatsManager } from \"../appManagers/appChatsManager\";\nimport type { AppMessagesManager, Dialog, MyMessage } from \"../appManagers/appMessagesManager\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\nimport type { AppDraftsManager } from \"../appManagers/appDraftsManager\";\nimport type { AppNotificationsManager } from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport type { ServerTimeManager } from \"../mtproto/serverTimeManager\";\nimport type { AppMessagesIdsManager } from \"../appManagers/appMessagesIdsManager\";\nimport { tsNow } from \"../../helpers/date\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport SearchIndex from \"../searchIndex\";\nimport { forEachReverse, indexOfAndSplice, insertInDescendSortedArray } from \"../../helpers/array\";\nimport rootScope from \"../rootScope\";\nimport { defineNotNumerableProperties, safeReplaceObject } from \"../../helpers/object\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\nimport { SliceEnd } from \"../../helpers/slicedArray\";\nimport { MyDialogFilter } from \"./filters\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { NoneToVoidFunction } from \"../../types\";\nimport ctx from \"../../environment/ctx\";\nimport AppStorage from \"../storage\";\nimport type DATABASE_STATE from \"../../config/databases/state\";\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadDialogsCount: number,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: number = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage {\n  private storage: AppStateManager['storages']['dialogs'];\n  \n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  constructor(\n    private appMessagesManager: AppMessagesManager, \n    private appChatsManager: AppChatsManager, \n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager,\n    private appDraftsManager: AppDraftsManager,\n    private appNotificationsManager: AppNotificationsManager,\n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager,\n    private serverTimeManager: ServerTimeManager,\n    private appMessagesIdsManager: AppMessagesIdsManager\n  ) {\n    this.storage = this.appStateManager.storages.dialogs;\n    this.dialogs = this.storage.getCache();\n    this.clear(true);\n\n    rootScope.addEventListener('language_change', () => {\n      const peerId = appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        for(let i = 0; i <= 10; ++i) {\n          const indexKey = `index_${i}` as ReturnType<DialogsStorage['getDialogIndexKey']>;\n          dialog[indexKey] = undefined;\n        }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    rootScope.addEventListener('filter_update', onFilterUpdate);\n    rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = `index_${filter.orderIndex}` as const;\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n    });\n\n    appStateManager.getState().then((state) => {\n      this.pinnedOrders = state.pinnedOrders || {};\n      if(!this.pinnedOrders[0]) this.pinnedOrders[0] = [];\n      if(!this.pinnedOrders[1]) this.pinnedOrders[1] = [];\n      \n      const dialogs = appStateManager.storagesResults.dialogs;\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(dialog) {\n        // if(dialog.peerId !== SERVICE_PEER_ID) {\n          dialog.top_message = this.appMessagesIdsManager.getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n        // }\n\n        if(dialog.topMessage) {\n          this.appMessagesManager.saveMessages([dialog.topMessage]);\n        }\n\n        for(let i = 0; i <= 10; ++i) {\n          // @ts-ignore\n          delete dialog[`index_${i}`];\n        }\n\n        this.saveDialog(dialog, undefined, true);\n\n        // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n        const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n        if(message.deleted) {\n          this.appMessagesManager.reloadConversation(dialog.peerId);\n        }\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[0] = loaded;\n      this.allDialogsLoaded[1] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(this.allDialogsLoaded[0] && this.allDialogsLoaded[1]) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear(init = false) {\n    this.pinnedOrders = {\n      0: [],\n      1: []\n    };\n\n    if(!init) {\n      const dialogs = this.appStateManager.storagesResults.dialogs;\n      dialogs.length = 0;\n      this.storage.clear();\n\n      this.setDialogsLoaded(0, false);\n      this.setDialogsLoaded(1, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  }\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId] = [];\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(this.getOffsetDate(0), this.getOffsetDate(1));\n    }\n\n    return offsetDate;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ?? (this.folders[id] = {dialogs: [], id, unreadMessagesCount: 0, unreadDialogsCount: 0});\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter(dialog => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    return this.getFolderDialogs(0, skipMigrated).concat(this.getFolderDialogs(1, skipMigrated));\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<DialogsStorage['getDialogIndexKey']>, filter: MyDialogFilter) {\n    let index: number;\n\n    if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinned_peers.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned) {\n        index = this.generateIndexForDialog(dialog, true);\n      } else {\n        index = dialog.index;\n      }\n    }\n\n    return dialog[indexKey] = index;\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(this.getFolder(0).dialogs, this.getFolder(1).dialogs);\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(let folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.serverTimeManager.serverTimeOffset;\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.appMessagesManager.filtersStorage.filters;\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKey(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex(d => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = wasDialog && wasDialog[indexKey];\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, indexKey, wasIndex);\n    }\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.appMessagesManager.filtersStorage.filters;\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach(callback => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    \n    if(toggle !== undefined) {\n      this.modifyFolderUnreadCount(folderId, toggle ? wasUnreadCount : -wasUnreadCount, wasUnreadCount ? (toggle ? 1 : -1) : 0);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      const addDialogsCount = (newUnreadCount && !wasUnreadCount) || (!newUnreadCount && wasUnreadCount) ? (wasUnreadCount ? -1 : 1) : 0;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, addDialogsCount);\n    };\n  }\n\n  public modifyFolderUnreadCount(folderId: number, addMessagesCount: number, addDialogsCount: number) {\n    if(!addMessagesCount && !addDialogsCount) {\n      return;\n    }\n\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n    \n    if(addDialogsCount) {\n      folder.unreadDialogsCount = Math.max(0, folder.unreadDialogsCount + addDialogsCount);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        rootScope.dispatchEvent('folder_unread', folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn = false, message?: MyMessage) {\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !justReturn) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n      \n      topDate = (message as Message.message).date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n  \n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    dialog.index = index;\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    const foundIndex = order.indexOf(dialog.peerId);\n    let pinnedIndex = foundIndex;\n    if(foundIndex === -1) {\n      pinnedIndex = order.push(dialog.peerId) - 1;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(!message.pFlags.is_outgoing && !message.deleted/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n  \n        const fromId = message.viaBotId || message.fromId;\n        if(fromId !== peerId) {\n          this.appStateManager.requestPeerSingle(fromId, 'topMessage', peerId);\n        }\n  \n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.appStateManager.requestPeerSingle(peerId, 'dialog');\n\n    /* for(let id in this.appMessagesManager.filtersStorage.filters) {\n      const filter = this.appMessagesManager.filtersStorage.filters[id];\n\n      if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n        \n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n    const dialogs = this.getFolderDialogs(folder_id, false);\n    const pos = dialogs.findIndex(d => d.peerId === peerId);\n    if(pos !== -1) {\n      dialogs.splice(pos, 1);\n    }\n    \n    //if(!this.dialogs[peerId]) {\n      this.dialogs[peerId] = dialog;\n      \n      this.setDialogToState(dialog);\n    //}\n\n    if(offsetDate === undefined) {\n      offsetDate = this.getDialogOffsetDate(dialog);\n    }\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.clearDialogFromState(dialog, true);\n          return;\n        }\n  \n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    if(pos === -1) {\n      this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    }\n\n    /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, 'index', pos);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialog(peerId: PeerId): ReturnType<DialogsStorage['getDialog']> {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      delete this.dialogs[peerId];\n\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n      \n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n\n      this.clearDialogFromState(dialog, false);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.appStateManager.releaseSinglePeer(peerId, 'topMessage');\n    this.appStateManager.releaseSinglePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage \n          || (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage).date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage).date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || (dialog.draft && dialog.draft._ === 'draftMessage')) {\n        this.saveDialog(dialog);\n        updatedDialogs[peerId] = dialog;\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(Object.keys(updatedDialogs).length) {\n      rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  public getDialogOffsetDate(dialog: Dialog) {\n    return this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message).date || 0;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? 0, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n    \n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(chat._ === 'channelForbidden' /* || chat._ === 'chatForbidden' */ || (chat as Chat.chat).pFlags.left || (chat as Chat.chat).pFlags.kicked) {\n        return;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);//dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        //return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === this.appMessagesIdsManager.getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n\n    // Because we saved message without dialog present\n    if(message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId, \n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    defineNotNumerableProperties(dialog, [\n      'index_0',\n      'index_1',\n      'index_2',\n      'index_3',\n      'index_4',\n      'index_5',\n      'index_6',\n      'index_7',\n      'index_8',\n      'index_9',\n      'index_10'\n    ]);\n\n    if(wasDialogBefore) {\n      safeReplaceObject(wasDialogBefore, dialog);\n    }\n\n    this.pushDialog(dialog, message.date, ignoreOffsetDate, saveGlobalOffset);\n  }\n\n  public getDialogIndexKey(filterId: number) {\n    const indexStr = filterId > 1 ? \n      `index_${this.appMessagesManager.filtersStorage.getFilter(filterId).orderIndex}` as const : \n      'index' as const;\n\n    return indexStr;\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId = 0, skipMigrated = false): {\n    cached: boolean,\n    promise: Promise<{\n      dialogs: Dialog[],\n      count: number,\n      isTopEnd: boolean,\n      isEnd: boolean\n    }>\n  } {\n    const ret: {\n      cached: boolean,\n      promise: Promise<{\n        dialogs: Dialog[],\n        count: number,\n        isTopEnd: boolean,\n        isEnd: boolean\n      }>\n    } = {} as any;\n\n    if(folderId > 1) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.appMessagesManager.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        ret.cached = false;\n        ret.promise = Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated).promise;\n        });\n\n        return ret;\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId = folderId > 1 || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexStr = this.getDialogIndexKey(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => d2[indexStr] - d1[indexStr]);\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > curDialogStorage[offset][indexStr]) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      ret.cached = true;\n      ret.promise = Promise.resolve({\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || curDialogStorage[0][indexStr] < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      });\n\n      return ret;\n    }\n\n    ret.cached = false;\n    ret.promise = this.appMessagesManager.getTopMessages(limit, realFolderId).then(result => {\n      //const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > curDialogStorage[offset][indexStr]) {\n            break;\n          }\n        }\n      }\n\n      //this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || curDialogStorage[0][indexStr] < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n\n    return ret;\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    //this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? 0;\n    //this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice(p => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    } \n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? 0;\n        \n    const handleOrder = (order: PeerId[]) => {\n      this.pinnedOrders[folderId].length = 0;\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n  \n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n  \n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n      \n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    //this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map(d => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    //this.log('before order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    handleOrder(update.order.map(peer => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { copy, safeReplaceObject } from \"../../helpers/object\";\nimport type { DialogFilter, Update } from \"../../layer\";\nimport type { Modify } from \"../../types\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\n//import type { ApiManagerProxy } from \"../mtproto/mtprotoworker\";\nimport type _rootScope from \"../rootScope\";\nimport type {AppMessagesManager, Dialog} from '../appManagers/appMessagesManager';\nimport type {AppNotificationsManager} from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { forEachReverse } from \"../../helpers/array\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\n\nexport type MyDialogFilter = Modify<DialogFilter, {\n  /* pinned_peers: PeerId[],\n  include_peers: PeerId[],\n  exclude_peers: PeerId[], */\n  pinnedPeerIds: PeerId[],\n  includePeerIds: PeerId[],\n  excludePeerIds: PeerId[]\n}>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'], \n  ['exclude_peers', 'excludePeerIds'], \n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\n// ! because 0 index is 'All Chats'\nconst START_ORDER_INDEX = 1;\n\nexport default class FiltersStorage {\n  public filters: {[filterId: string]: MyDialogFilter};\n  private orderIndex: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  constructor(private appMessagesManager: AppMessagesManager,\n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager, \n    private appNotificationsManager: AppNotificationsManager, \n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager, \n    /* private apiManager: ApiManagerProxy, */ \n    private rootScope: typeof _rootScope) {\n    this.clear(true);\n    this.filters = {};\n\n    this.appStateManager.getState().then((state) => {\n      safeReplaceObject(this.filters, state.filters);\n\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        if(filter.hasOwnProperty('orderIndex') && filter.orderIndex >= this.orderIndex) {\n          this.orderIndex = filter.orderIndex + 1;\n        }\n\n        /* this.appMessagesManager.dialogsStorage.folders[+filterId] = {\n          dialogs: []\n        }; */\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: (update) => {\n        //console.warn('updateDialogFilters', update);\n\n        const oldFilters = copy(this.filters);\n\n        this.getDialogFilters(true).then(filters => {\n          for(const _filterId in oldFilters) {\n            const filterId = +_filterId;\n            if(!filters.find(filter => filter.id === filterId)) { // * deleted\n              this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n            }\n          }\n\n          this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map(filter => filter.id)});\n        });\n      },\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach(arr => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(this.appPeersManager.getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n    } else {\n      this.filters = {};\n      this.reloadedPeerIds = new Set();\n    }\n\n    this.orderIndex = START_ORDER_INDEX;\n  }\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      //this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    //console.log('updateDialogFilterOrder', update);\n\n    this.orderIndex = START_ORDER_INDEX;\n    update.order.forEach((filterId, idx) => {\n      const filter = this.filters[filterId];\n      delete filter.orderIndex;\n      this.setOrderIndex(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', update.order);\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === 1) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n      \n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n      \n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n    \n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= this.rootScope.config.pinned_infolder_count_max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n      \n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n    \n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map(i => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      //console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.orderIndex;\n            f.push(filter);\n          }\n\n          filter.orderIndex = START_ORDER_INDEX;\n\n          const order = f.sort((a, b) => a.orderIndex - b.orderIndex).map(filter => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const promises: Promise<any>[] = [];\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(peers?.length) {\n      const reloadDialogs = peers.filter((inputPeer, idx) => {\n        const peerId = this.appPeersManager.getPeerId(inputPeer);\n        return !this.reloadedPeerIds.has(peerId) && !this.appMessagesManager.getDialogOnly(peerId);\n      });\n\n      if(reloadDialogs.length) {\n        const reloadPromises = reloadDialogs.map(inputPeer => {\n          const peerId = this.appPeersManager.getPeerId(inputPeer);\n          const promise = this.appMessagesManager.reloadConversation(inputPeer);\n          promise.then(() => {\n            this.reloadedPeerIds.add(peerId);\n          });\n          return promise;\n        });\n        const reloadPromise = Promise.all(reloadPromises);\n        promises.push(reloadPromise);\n      }\n    }\n\n    return promises.length ? Promise.all(promises) : undefined;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length && !overwrite) {\n      return keys.map(filterId => this.filters[filterId]).sort((a, b) => a.orderIndex - b.orderIndex);\n    }\n\n    const filters: MyDialogFilter[] = await apiManager.invokeApiSingle('messages.getDialogFilters') as any;\n    for(const filter of filters) {\n      this.saveDialogFilter(filter, overwrite);\n    }\n\n    //console.log(this.filters);\n    return filters;\n  }\n\n  public saveDialogFilter(filter: MyDialogFilter, update = true) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    convertment.forEach(([from, to]) => {\n      filter[to] = filter[from].map((peer) => this.appPeersManager.getPeerId(peer));\n    });\n\n    this.filterIncludedPinnedPeers(filter);\n    \n    filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n    filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n    \n    this.setOrderIndex(filter);\n    \n    if(update) {\n      this.rootScope.dispatchEvent('filter_update', filter);\n    } else if(!oldFilter) {\n      this.rootScope.dispatchEvent('filter_new', filter);\n    }\n  }\n\n  public setOrderIndex(filter: MyDialogFilter) {\n    if(filter.hasOwnProperty('orderIndex')) {\n      if(filter.orderIndex >= this.orderIndex) {\n        this.orderIndex = filter.orderIndex + 1;\n      }\n    } else {\n      filter.orderIndex = this.orderIndex++ as DialogFilter['orderIndex'];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { LazyLoadQueueBase } from \"../../components/lazyLoadQueue\";\nimport ProgressivePreloader from \"../../components/preloader\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport { formatDateAccordingToTodayNew, formatTime, tsNow } from \"../../helpers/date\";\nimport { createPosterForVideo } from \"../../helpers/files\";\nimport { copy, getObjectKeysAndSort } from \"../../helpers/object\";\nimport { randomLong } from \"../../helpers/random\";\nimport { splitStringByLength, limitSymbols, escapeRegExp } from \"../../helpers/string\";\nimport { Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer } from \"../../layer\";\nimport { InvokeApiOptions } from \"../../types\";\nimport I18n, { FormatterArguments, i18n, join, langPack, LangPackKey, UNSUPPORTED_LANG_PACK_KEY, _i18n } from \"../langPack\";\nimport { logger, LogTypes } from \"../logger\";\nimport type { ApiFileManager } from '../mtproto/apiFileManager';\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport DialogsStorage, { GLOBAL_FOLDER_ID } from \"../storages/dialogs\";\nimport FiltersStorage from \"../storages/filters\";\n//import { telegramMeWebService } from \"../mtproto/mtproto\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager, { ChatRights } from \"./appChatsManager\";\nimport appDocsManager, { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager, { MyPhoto } from \"./appPhotosManager\";\nimport appPollsManager from \"./appPollsManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport appWebPagesManager from \"./appWebPagesManager\";\nimport appDraftsManager, { MyDraftMessage } from \"./appDraftsManager\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport appProfileManager from \"./appProfileManager\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport SlicedArray, { Slice, SliceEnd } from \"../../helpers/slicedArray\";\nimport appNotificationsManager, { NotifyOptions } from \"./appNotificationsManager\";\nimport PeerTitle from \"../../components/peerTitle\";\nimport { forEachReverse, indexOfAndSplice } from \"../../helpers/array\";\nimport htmlToDocumentFragment from \"../../helpers/dom/htmlToDocumentFragment\";\nimport htmlToSpan from \"../../helpers/dom/htmlToSpan\";\nimport { MUTE_UNTIL, NULL_PEER_ID, REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport formatCallDuration from \"../../helpers/formatCallDuration\";\nimport appAvatarsManager from \"./appAvatarsManager\";\nimport telegramMeWebManager from \"../mtproto/telegramMeWebManager\";\nimport { getMiddleware } from \"../../helpers/middleware\";\nimport assumeType from \"../../helpers/assumeType\";\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\nimport type { MediaSize } from \"../../helpers/mediaSizes\";\nimport IMAGE_MIME_TYPES_SUPPORTED from \"../../environment/imageMimeTypesSupport\";\nimport VIDEO_MIME_TYPES_SUPPORTED from \"../../environment/videoMimeTypesSupport\";\nimport './appGroupCallsManager';\nimport appGroupCallsManager from \"./appGroupCallsManager\";\n\n//console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: Slice,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty' \n  | 'inputMessagesFilterPhotos' \n  | 'inputMessagesFilterPhotoVideo' \n  | 'inputMessagesFilterVideo' \n  | 'inputMessagesFilterDocument' \n  | 'inputMessagesFilterVoice' \n  | 'inputMessagesFilterRoundVoice' \n  | 'inputMessagesFilterRoundVideo' \n  | 'inputMessagesFilterMusic' \n  | 'inputMessagesFilterUrl' \n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, any>;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\nexport class AppMessagesManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  public groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  public pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  public threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: {\n      peerId: PeerId,\n      tempId: number,\n      threadId: number,\n      storage: MessagesStorage\n    }\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>, \n        callback: (message: any) => Promise<any>\n      }>\n    }\n  } = {};\n  \n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newMessagesHandleTimeout = 0;\n  private newMessagesToHandle: {[peerId: PeerId]: Set<number>} = {};\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: {[peerId: PeerId]: Dialog} = {};\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  public dialogsStorage: DialogsStorage;\n  public filtersStorage: FiltersStorage;\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<any>} = {};\n\n  constructor() {\n    this.clear();\n\n    rootScope.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => dialog.peerId.isBroadcast();\n      else filterFunc = (dialog) => appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach(dialog => {\n        rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage', \n          webpage: appWebPagesManager.getWebPage(id)\n        };\n\n        rootScope.dispatchEvent('message_edit', {\n          storage,\n          peerId,\n          mid\n        });\n      });\n    });\n\n    rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !appMessagesIdsManager.getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft,\n            index: dialog.index\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n    \n    appStateManager.getState().then(state => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear() {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear();\n    this.filtersStorage && this.filtersStorage.clear();\n  }\n\n  public construct() {\n    this.filtersStorage = new FiltersStorage(this, appPeersManager, appUsersManager, appNotificationsManager, appStateManager, apiUpdatesManager, /* apiManager, */ rootScope);\n    this.dialogsStorage = new DialogsStorage(this, appChatsManager, appPeersManager, appUsersManager, appDraftsManager, appNotificationsManager, appStateManager, apiUpdatesManager, serverTimeManager, appMessagesIdsManager);\n  }\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: any) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        //this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    let entities = options.entities || [];\n    if(text) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return apiManager.invokeApi('messages.editMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n      \n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true\n  }> = {}) {\n    if(!text.trim()) {\n      return Promise.resolve();\n    }\n\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const MAX_LENGTH = rootScope.config.message_length_max;\n    if(text.length > MAX_LENGTH) {\n      const splitted = splitStringByLength(text, MAX_LENGTH);\n      text = splitted[0];\n\n      if(splitted.length > 1) {\n        delete options.webPage;\n      }\n\n      for(let i = 1; i < splitted.length; ++i) {\n        setTimeout(() => {\n          this.sendText(peerId, splitted[i], options);\n        }, i);\n      }\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    let entities = options.entities || [];\n    if(!options.viaBotId) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n      //entities = RichTextProcessor.mergeEntities(entities, RichTextProcessor.parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      //this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        //this.log('sendText sent', message.mid);\n        //if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          //assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n        message.promise.resolve();\n      }, (error: any) => {\n        toggleError(true);\n        message.promise.reject(error);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    return message.promise;\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: true,\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      let attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n      \n      photo = appPhotosManager.savePhoto(photo);\n    } else if(VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        }, \n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound && \n        file.size > (10 * 1024) && \n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(document);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = appDownloadManager.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n      \n      document = appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const preloader = isDocument ? undefined : new ProgressivePreloader({\n      attachMethod: 'prepend',\n      tryAgainOnFail: false,\n      isUpload: true\n    });\n\n    const sentDeferred = deferredPromise<InputMedia>();\n\n    if(preloader) {\n      preloader.attachPromise(sentDeferred);\n      sentDeferred.cancel = () => {\n        const error = new Error('Download canceled');\n        error.name = 'AbortError';\n        sentDeferred.reject(error);\n      };\n\n      sentDeferred.catch(err => {\n        if(err.name === 'AbortError' && !uploaded) {\n          this.log('cancelling upload', media);\n\n          this.cancelPendingMessage(message.random_id);\n          this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n          if(uploadPromise?.cancel) {\n            uploadPromise.cancel();\n          }\n        }\n      });\n    }\n\n    const media = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      preloader,\n      photo,\n      document,\n      promise: sentDeferred\n    };\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file \n    } as MessageMedia.messageMediaDocument : media as any;\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['uploadFile']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const {id, access_hash, file_reference} = file as MyDocument;\n\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: {\n            _: 'inputDocument',\n            id,\n            access_hash,\n            file_reference\n          }\n        };\n        \n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n            uploadPromise = appDownloadManager.upload(file);\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL) {\n            thumbUploadPromise = new Promise((resolve, reject) => {\n              const thumbPromise = options.thumb && options.thumb.blob ? Promise.resolve(options.thumb) : createPosterForVideo(options.objectURL);\n              thumbPromise.then(thumb => {\n                if(!thumb) {\n                  resolve(null);\n                } else {\n                  appDownloadManager.upload(thumb.blob).then(resolve, reject);\n                }\n              }, reject);\n            });\n          }\n  \n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            // @ts-ignore\n            delete message.media.preloader;\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto', \n                  file: inputFile,\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument', \n                  file: inputFile, \n                  mime_type: fileType, \n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined,\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n            \n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n  \n          uploadPromise.addNotifyListener((progress: {done: number, total: number}) => {\n            /* if(DEBUG) {\n              this.log('upload progress', progress);\n            } */\n\n            const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n            if(actionName) {\n              this.setTyping(peerId, {_: actionName, progress: percents | 0});\n            }\n            sentDeferred.notifyAll(progress);\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem, \n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then(inputMedia => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft\n        }).then((updates) => {\n          apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    return {message, promise: sentDeferred};\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        groupId,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        //o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      setTimeout(() => {\n        appDraftsManager.clearDraft(peerId, options.threadId);\n      }, 0);\n    }\n    \n    // * test pending\n    //return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft\n          }).then((updates) => {\n            apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error) => {\n            messages.forEach(message => toggleError(message, true));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then(messageMedia => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = appPhotosManager.getMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = appDocsManager.getMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then(inputs => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n      \n      // @ts-ignore\n      case 'messageMediaPending': {\n        media = inputMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    let toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: true, \n    isScheduled: true, \n    threadId: number, \n    clearDraft: true\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getMessagesStorage(peerId);\n\n    if(options.isScheduled) {\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      setTimeout(() => {\n        rootScope.dispatchEvent('scheduled_new', {peerId, mid: messageId});\n      }, 0);\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      setTimeout(() => {\n        rootScope.dispatchEvent('history_append', {storage, peerId, mid: messageId});\n      }, 0);\n    }\n\n    this.pendingByRandomId[message.random_id] = {\n      peerId, \n      tempId: messageId, \n      threadId: options.threadId, \n      storage\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      setTimeout(() => {\n        if(options.clearDraft) {\n          appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      }, 0);\n    }\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: this.generateFromId(peerId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor, \n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + serverTimeManager.serverTimeOffset),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true,\n      promise: options.groupId === undefined ? deferredPromise() : undefined\n    };\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(appPeersManager.isBroadcast(peerId)) {\n      const channelFull = appProfileManager.chatsFull[peerId.toChatId()] as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(peerId.isAnyChat() && (peerId.isBroadcast() || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return appPeersManager.getOutputPeer(appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!appPeersManager.isChannel(peerId) && !appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = appUsersManager.getSelf().id.toPeerId();\n    if(originalMessage.fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.from_id = appPeersManager.getOutputPeer(originalMessage.fromId);\n      fwdHeader.post_author = originalMessage.post_author;\n    }\n\n    if(appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n    \n    // * there is no way to detect whether user profile is hidden\n    if(peerId === myId) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message = {\n      _: 'messageService',\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    } as Message.messageService;\n\n    this.getMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n      \n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = appPeersManager.getPeerId(dialog.peer);\n          const mid = appMessagesIdsManager.generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n        \n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach(dialog => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: number, offsetDate?: number) {\n    //const dialogs = this.dialogsStorage.getFolder(folderId);\n    let offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += serverTimeManager.serverTimeOffset;\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return apiManager.invokeApiSingle('messages.getDialogs', params, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        telegramMeWebManager.setAuthorized(true);\n      }\n\n      appUsersManager.saveApiUsers(dialogsResult.users);\n      appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      /* if(folderId === 0 && !offsetDate) {\n        const found = dialogsResult.dialogs.find(dialog => appPeersManager.getPeerId(dialog.peer) === -1325963535);\n        if(!found) {\n          debugger;\n        }\n      } */\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: {[peerId: PeerId]: Dialog} = {};\n      const setFolderId = folderId === GLOBAL_FOLDER_ID ? 0 : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), dialog => {\n        //const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !appPeersManager.isChannel(dialog.peerId || appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        /* if(dialog.peerId === -1213511294) {\n          this.log.error('lun bot', folderId, d);\n        } */\n\n        if(offsetIndex && dialog.index > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!appMessagesIdsManager.getServerMessageId(dialog.read_inbox_max_id) && !appMessagesIdsManager.getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs[dialog.peerId] = dialog;\n\n          this.log.error('noIdsDialogs', dialog, params);\n\n          /* if(dialog.peerId === -1213511294) {\n            this.log.error('lun bot', folderId);\n          } */\n        }\n      });\n\n      const keys = Object.keys(noIdsDialogs);\n      if(keys.length) {\n        //setTimeout(() => { // test bad situation\n          const peerIds = keys.map(key => key.toPeerId());\n          const promises = peerIds.map(peerId => this.reloadConversation(peerId));\n          Promise.all(promises).then(() => {\n            rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n  \n            for(let i = 0; i < peerIds.length; ++i) {\n              rootScope.dispatchEvent('dialog_unread', {peerId: peerIds[i]});\n            }\n          });\n        //}, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(appMessagesIdsManager.getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */ \n        !count || \n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        rootScope.dispatchEvent('dialogs_multiupdate', {});\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1], \n        count, \n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage: Message.message = this.getMessageByPeer(fromPeerId, mid);\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMessages = mids.map(mid => {\n      const originalMessage: Message.message = this.getMessageByPeer(fromPeerId, mid);\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n\n      const keys: Array<keyof Message.message> = [\n        'entities', \n        'media', \n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      keys.forEach(key => {\n        // @ts-ignore\n        message[key] = originalMessage[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach(message => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach(message => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      random_id: newMessages.map(message => message.random_id),\n      to_peer: appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n    return promise;\n  }\n\n  public generateEmptyMessage(mid: number): Message.messageEmpty {\n    return {\n      _: 'messageEmpty',\n      id: appMessagesIdsManager.getServerMessageId(mid),\n      mid,\n      deleted: true,\n      pFlags: {}\n    };\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage, mid: number) {\n    return storage && storage.get(mid) || this.generateEmptyMessage(mid);\n  }\n\n  private createMessageStorage() {\n    const storage: MessagesStorage = new Map();\n    \n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num, \n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage());\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = appPeersManager.getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const inputDialogPeers: InputDialogPeer[] = [];\n        const promises: {[peerId: string]: typeof promise} = {};\n        for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n          inputDialogPeers.push(inputDialogPeer);\n          promises[peerId] = promise;\n        }\n\n        this.reloadConversationsPeers.clear();\n\n        const fullfillLeft = () => {\n          for(const peerId in promises) {\n            promises[peerId].resolve(undefined);\n          }\n        };\n\n        apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n          this.dialogsStorage.applyDialogs(result);\n\n          result.dialogs.forEach((dialog) => {\n            const peerId = dialog.peerId;\n            if(peerId) {\n              promises[peerId].resolve(dialog as Dialog);\n              delete promises[peerId];\n            }\n          });\n\n          fullfillLeft();\n          resolve();\n        }, (err) => {\n          fullfillLeft();\n          reject(err);\n        }).finally(() => {\n          this.reloadConversationsPromise = null;\n\n          if(this.reloadConversationsPeers.size) {\n            this.reloadConversation();\n          }\n        });\n      }, 0);\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = promise instanceof Promise ? await promise : promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: appChatsManager.getChannelInput(channelId),\n        max_id: appMessagesIdsManager.getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      [\n        this.historiesStorage, \n        this.threadsStorage, \n        this.searchesStorage, \n        this.pinnedMessages,\n        this.pendingAfterMsgs,\n        this.pendingTopMsgs\n      ].forEach(s => {\n        delete s[peerId];\n      });\n\n      const m = this.needSingleMessages.get(peerId);\n      if(m) {\n        m.clear();\n      }\n\n      [\n        this.messagesStorageByPeerId,\n        this.scheduledMessagesStorage\n      ].forEach(s => {\n        const ss = s[peerId];\n        if(ss) {\n          ss.clear();\n        }\n      });\n      \n      if(justClear) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n        \n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  public onPeerDeleted(peerId: number) {\n\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId, \n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then(result => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: appMessagesIdsManager.getServerMessageId(mid)\n    }).then(updates => {\n      //this.log('pinned updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: appPeersManager.getInputPeerById(peerId)\n    }).then(affectedHistory => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if(message.pFlags.pinned) {\n            delete message.pFlags.pinned;\n          }\n        });\n\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    let foundMessages = 0, message: string, totalEntities: MessageEntity[], entities: MessageEntity[];\n    for(const [mid, m] of group) {\n      if(m.message) {\n        if(++foundMessages > 1) break;\n        message = m.message;\n        totalEntities = m.totalEntities;\n        entities = m.entities;\n      }  \n    }\n\n    if(foundMessages > 1) {\n      message = undefined;\n      totalEntities = undefined;\n      entities = undefined;\n    }\n\n    return {message, entities, totalEntities};\n  }\n\n  public getMidsByAlbum(grouped_id: string) {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[grouped_id], 'asc');\n    //return Object.keys(this.groupedMessagesStorage[grouped_id]).map(id => +id).sort((a, b) => a - b);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if((message as Message.message)?.grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: any, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if(message.grouped_id) {\n      const storage = this.groupedMessagesStorage[message.grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return appMessagesIdsManager.generateMessageId(dialog?.top_message || 0, true);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if(message.pFlags === undefined) {\n      message.pFlags = {};\n    }\n\n    if(message._ === 'messageEmpty') {\n      message.deleted = true;\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n    \n    const mid = appMessagesIdsManager.generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = new Map());\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out\n        ? 'read_outbox_max_id'\n        : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = appMessagesIdsManager.generateMessageId(message.reply_to.reply_to_msg_id);\n      } \n\n      if(message.reply_to.reply_to_top_id) message.reply_to.reply_to_top_id = appMessagesIdsManager.generateMessageId(message.reply_to.reply_to_top_id);\n    }\n\n    if(isMessage && message.replies) {\n      if(message.replies.max_id) message.replies.max_id = appMessagesIdsManager.generateMessageId(message.replies.max_id);\n      if(message.replies.read_max_id) message.replies.read_max_id = appMessagesIdsManager.generateMessageId(message.replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= serverTimeManager.serverTimeOffset;\n    }\n    \n    //storage.generateIndex(message);\n    const myId = appUsersManager.getSelf().id.toPeerId();\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from as MessageFwdHeader;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      //message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : appPeersManager.getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      //if(peerId === myID) {\n        if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id);\n        if(fwdHeader.channel_post) fwdHeader.channel_post = appMessagesIdsManager.generateMessageId(fwdHeader.channel_post);\n\n        const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n        const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n        if(peer && msgId) {\n          const savedFromPeerId = appPeersManager.getPeerId(peer);\n          const savedFromMid = appMessagesIdsManager.generateMessageId(msgId);\n          message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n        }\n\n        /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= serverTimeManager.serverTimeOffset;\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find(entity => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    if(isMessage && message.media) {\n      switch(message.media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(message.media.ttl_seconds) {\n            message.media = {_: 'messageMediaUnsupported'};\n          } else {\n            message.media.photo = appPhotosManager.savePhoto(message.media.photo, mediaContext);\n          }\n\n          if(!(message.media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n          \n          break;\n        }\n          \n        case 'messageMediaPoll': {\n          const result = appPollsManager.savePoll(message.media.poll, message.media.results, message);\n          message.media.poll = result.poll;\n          message.media.results = result.results;\n          break;\n        }\n          \n        case 'messageMediaDocument': {\n          if(message.media.ttl_seconds) {\n            message.media = {_: 'messageMediaUnsupported'};\n          } else {\n            message.media.document = appDocsManager.saveDoc(message.media.document, mediaContext); // 11.04.2020 warning\n          }\n\n          break;\n        }\n          \n        case 'messageMediaWebPage': {\n          const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          message.media.webpage = appWebPagesManager.saveWebPage(message.media.webpage, messageKey, mediaContext);\n          break;\n        }\n          \n        /*case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          message.media = {_: 'messageMediaUnsupported'};\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          message.message = '';\n          delete message.entities;\n          delete message.totalEntities;\n          break;\n        }\n      }\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      let migrateFrom: PeerId;\n      let migrateTo: PeerId;\n      const suffix = message.fromId === appUsersManager.getSelf().id ? 'You' : '';\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        //case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n        \n        case 'messageActionGroupCall': {\n          //assumeType<MessageAction.messageActionGroupCall>(action);\n\n          appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n          \n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          //apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type = \n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed'\n                  ? 'missed'\n                  : 'cancelled'\n              )\n            );\n          break;\n      }\n      \n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);  \n    }\n\n    storage.set(mid, message);\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if((messages as any).saved) return;\n    (messages as any).saved = true;\n    messages.forEach((message) => {\n      this.saveMessage(message, options);\n    });\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = RichTextProcessor.fixEmoji(message.message, apiEntities);\n\n    const myEntities = RichTextProcessor.parseEntities(message.message);\n    message.totalEntities = RichTextProcessor.mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text: string, usingMids: number[], plain: true, highlightWord?: string, withoutMediaType?: boolean): string;\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text?: string, usingMids?: number[], plain?: false, highlightWord?: string, withoutMediaType?: boolean): DocumentFragment;\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text: string = (message as Message.message).message, usingMids?: number[], plain?: boolean, highlightWord?: string, withoutMediaType?: boolean): DocumentFragment | string {\n    const parts: (Node | string)[] = [];\n\n    let hasAlbumKey = false;\n    const addPart = (langKey: LangPackKey, part?: string | HTMLElement) => {\n      if(langKey) {\n        if(part === undefined && hasAlbumKey) {\n          return;\n        }\n        \n        part = plain ? I18n.format(langKey, true) : i18n(langKey);\n      }\n      \n      if(plain) {\n        parts.push(part);\n      } else {\n        const el = document.createElement('i');\n        if(typeof(part) === 'string') el.innerHTML = part;\n        else el.append(part);\n        parts.push(el);\n      }\n    };\n\n    let entities = (message as Message.message).totalEntities;\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      let usingFullAlbum = true;\n      if(message.grouped_id) {\n        if(usingMids) {\n          const mids = this.getMidsByMessage(message);\n          if(usingMids.length === mids.length) {\n            for(const mid of mids) {\n              if(!usingMids.includes(mid)) {\n                usingFullAlbum = false;\n                break;\n              }\n            }\n          } else {\n            usingFullAlbum = false;\n          }\n        }\n\n        if(usingFullAlbum) {\n          const albumText = this.getAlbumText(message.grouped_id);\n          text = albumText.message;\n          entities = albumText.totalEntities;\n\n          if(!withoutMediaType) {\n            addPart('AttachAlbum');\n            hasAlbumKey = true;\n          }\n        }\n      } else {\n        usingFullAlbum = false;\n      }\n\n      if((!usingFullAlbum && !withoutMediaType) || !text) {\n        const media = message.media;\n        switch(media._) {\n          case 'messageMediaPhoto':\n            addPart('AttachPhoto');\n            break;\n          case 'messageMediaDice':\n            addPart(undefined, plain ? media.emoticon : RichTextProcessor.wrapEmojiText(media.emoticon));\n            break;\n          case 'messageMediaVenue': {\n            text = media.title;\n            addPart('AttachLocation');\n            break;\n          }\n          case 'messageMediaGeo':\n            addPart('AttachLocation');\n            break;\n          case 'messageMediaGeoLive':\n            addPart('AttachLiveLocation');\n            break;\n          case 'messageMediaPoll':\n            addPart(undefined, plain ? '📊' + ' ' + (media.poll.question || 'poll') : media.poll.rReply);\n            break;\n          case 'messageMediaContact':\n            addPart('AttachContact');\n            break;\n          case 'messageMediaGame': {\n            const f = '🎮' + ' ' + media.game.title;\n            addPart(undefined, plain ? f : RichTextProcessor.wrapEmojiText(f));\n            break;\n          }\n          case 'messageMediaDocument': {\n            const document = media.document as MyDocument;\n  \n            if(document.type === 'video') {\n              addPart('AttachVideo');\n            } else if(document.type === 'voice') {\n              addPart('AttachAudio');\n            } else if(document.type === 'gif') {\n              addPart('AttachGif');\n            } else if(document.type === 'round') {\n              addPart('AttachRound');\n            } else if(document.type === 'sticker') {\n              if(document.stickerEmojiRaw) {\n                addPart(undefined, (plain ? document.stickerEmojiRaw : document.stickerEmoji) + ' ');\n              }\n              \n              addPart('AttachSticker');\n              text = '';\n            } else if(document.type === 'audio') {\n              const attribute = document.attributes.find(attribute => attribute._ === 'documentAttributeAudio' && (attribute.title || attribute.performer)) as DocumentAttribute.documentAttributeAudio;\n              const f = '🎵' + ' ' + (attribute ? [attribute.title, attribute.performer].filter(Boolean).join(' - ') : document.file_name);\n              addPart(undefined, plain ? f : RichTextProcessor.wrapEmojiText(f));\n            } else {\n              addPart(undefined, plain ? document.file_name : RichTextProcessor.wrapEmojiText(document.file_name));\n            }\n  \n            break;\n          }\n\n          case 'messageMediaUnsupported': {\n            addPart(UNSUPPORTED_LANG_PACK_KEY);\n            break;\n          }\n  \n          default:\n            //messageText += media._;\n            ///////this.log.warn('Got unknown media type!', message);\n            break;\n        }\n      }\n\n      const length = parts.length;\n      /* for(let i = 1; i < length; i += 2) {\n        parts.splice(i, 0, ', ');\n      } */\n\n      if(text && length) {\n        parts.push(', ');\n      }\n    }\n\n    if((message as Message.messageService).action) {\n      const actionWrapped = this.wrapMessageActionTextNew((message as Message.messageService), plain);\n      if(actionWrapped) {\n        addPart(undefined, actionWrapped);\n      }\n    }\n\n    if(text) {\n      text = limitSymbols(text, 100);\n\n      if(!entities) {\n        entities = [];\n      }\n\n      if(plain) {\n        parts.push(RichTextProcessor.wrapPlainText(text, entities));\n      } else {\n        // let entities = RichTextProcessor.parseEntities(text.replace(/\\n/g, ' '));\n\n        if(highlightWord) {\n          highlightWord = highlightWord.trim();\n          let found = false;\n          let match: any;\n          let regExp = new RegExp(escapeRegExp(highlightWord), 'gi');\n          while((match = regExp.exec(text)) !== null) {\n            entities.push({_: 'messageEntityHighlight', length: highlightWord.length, offset: match.index});\n            found = true;\n          }\n      \n          if(found) {\n            RichTextProcessor.sortEntities(entities);\n          }\n        }\n\n        const messageWrapped = RichTextProcessor.wrapRichText(text, {\n          noLinebreaks: true, \n          entities, \n          noLinks: true,\n          noTextFormat: true\n        });\n  \n        parts.push(htmlToDocumentFragment(messageWrapped) as any);\n      }\n    }\n\n    if(plain) {\n      return parts.join('');\n    } else {\n      const fragment = document.createDocumentFragment();\n      fragment.append(...parts);\n      return fragment;\n    }\n  }\n\n  public wrapSenderToPeer(message: MyMessage) {\n    const senderTitle: HTMLElement = document.createElement('span');\n    senderTitle.classList.add('sender-title');\n    \n    const fromMe = message.fromId === rootScope.myId && message.peerId !== rootScope.myId;\n    senderTitle.append(\n      fromMe ? \n        i18n('FromYou') : \n        new PeerTitle({\n          ...this.getMessageSenderPeerIdOrName(message),\n          dialog: message.peerId === rootScope.myId\n        }).element\n      );\n\n    if(appPeersManager.isAnyGroup(message.peerId) || fromMe) {\n      const peerTitle = new PeerTitle({peerId: message.peerId}).element;\n      senderTitle.append(' ➝ ', peerTitle);\n    }\n\n    return senderTitle;\n  }\n\n  public getMessageSenderPeerIdOrName(message: MyMessage) {\n    if(message.fromId) {\n      return {\n        peerId: message.fromId\n      };\n    } else {\n      return {\n        fromName: (message as Message.message).fwd_from?.from_name\n      };\n    }\n  }\n\n  public wrapSentTime(message: MyMessage) {\n    const el: HTMLElement = document.createElement('span');\n    el.classList.add('sent-time');\n    el.append(formatDateAccordingToTodayNew(new Date(message.date * 1000)));\n\n    return el;\n  }\n\n  private wrapJoinVoiceChatAnchor(message: Message.messageService) {\n    const action = message.action as MessageAction.messageActionInviteToGroupCall;\n    const {onclick, url} = RichTextProcessor.wrapUrl(`tg://voicechat?chat_id=${message.peerId.toChatId()}&id=${action.call.id}&access_hash=${action.call.access_hash}`);\n    if(!onclick) {\n      return document.createElement('span');\n    }\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.setAttribute('onclick', onclick + '(this)');\n\n    return a;\n  }\n\n  private wrapMessageActionTextNewUnsafe(message: MyMessage, plain?: boolean) {\n    const element: HTMLElement = plain ? undefined : document.createElement('span');\n    const action = 'action' in message && message.action;\n\n    // this.log('message action:', action);\n\n    if((action as MessageAction.messageActionCustomAction).message) {\n      const unsafeMessage = (action as MessageAction.messageActionCustomAction).message;\n      if(plain) {\n        return RichTextProcessor.wrapPlainText(unsafeMessage);\n      } else {\n        element.innerHTML = RichTextProcessor.wrapRichText(unsafeMessage, {noLinebreaks: true});\n        return element;\n      }\n    } else {\n      let _ = action._;\n      //let suffix = '';\n      let langPackKey: LangPackKey;\n      let args: any[];\n\n      const getNameDivHTML = (peerId: PeerId, plain: boolean) => {\n        return plain ? appPeersManager.getPeerTitle(peerId, plain) : (new PeerTitle({peerId})).element;\n      };\n\n      switch(action._) {\n        case 'messageActionPhoneCall': {\n          _ += '.' + (action as any).type;\n\n          args = [formatCallDuration(action.duration, plain)];\n          break;\n        }\n\n        case 'messageActionGroupCall': {\n          _ += '.' + (action as any).type;\n\n          args = [];\n          if(!_.endsWith('You') && !message.pFlags.post) {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          if(action.duration !== undefined) {\n            args.push(formatCallDuration(action.duration, plain));\n          } else {\n            args.push(this.wrapJoinVoiceChatAnchor(message as any));\n          }\n\n          break;\n        }\n\n        case 'messageActionInviteToGroupCall': {\n          const peerIds = [message.fromId, action.users[0].toPeerId()];\n          let a = 'Chat.Service.VoiceChatInvitation';\n          const myId = appUsersManager.getSelf().id;\n          if(peerIds[0] === myId) a += 'ByYou';\n          else if(peerIds[1] === myId) a += 'ForYou';\n          indexOfAndSplice(peerIds, myId);\n\n          langPackKey = a as LangPackKey;\n          args = peerIds.map(peerId => getNameDivHTML(peerId, plain));\n          args.push(this.wrapJoinVoiceChatAnchor(message as any));\n          break;\n        }\n\n        case 'messageActionGroupCallScheduled': {\n          const today = new Date();\n          const date = new Date(action.schedule_date * 1000);\n          const daysToStart = (date.getTime() - today.getTime()) / 86400e3;\n          const tomorrowDate = new Date(today);\n          tomorrowDate.setDate(tomorrowDate.getDate() + 1);\n\n          const isBroadcast = appPeersManager.isBroadcast(message.peerId);\n          langPackKey = isBroadcast ? 'ChatList.Service.VoiceChatScheduled.Channel' : 'ChatList.Service.VoiceChatScheduled';\n          args = [];\n          const myId = appUsersManager.getSelf().id;\n          if(message.fromId === myId) {\n            langPackKey += 'You';\n          } else if(!isBroadcast) {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          let k: LangPackKey, _args: FormatterArguments = [];\n          if(daysToStart < 1 && date.getDate() === today.getDate()) {\n            k = 'TodayAtFormattedWithToday';\n          } else if(daysToStart < 2 && date.getDate() === tomorrowDate.getDate()) {\n            k = 'Time.TomorrowAt';\n          } else {\n            k = 'formatDateAtTime';\n            _args.push(new I18n.IntlDateElement({\n              date, \n              options: {\n                day: '2-digit',\n                month: '2-digit',\n                year: '2-digit'\n              }\n            }).element);\n          }\n\n          _args.push(formatTime(date));\n          const t = i18n(k, _args);\n          args.push(t);\n\n          break;\n        }\n\n        case 'messageActionChatCreate': {\n          const myId = appUsersManager.getSelf().id;\n          if(message.fromId === myId) {\n            _ += 'You';\n          } else {\n            args = [getNameDivHTML(message.fromId, plain)];\n          }\n          \n          break;\n        }\n\n        case 'messageActionPinMessage': {\n          const peerId = message.peerId;\n          const pinnedMessage = this.getMessageByPeer(peerId, message.reply_to_mid);\n\n          args = [\n            getNameDivHTML(message.fromId, plain),\n          ];\n          \n          if(pinnedMessage.deleted/*  || true */) {\n            langPackKey = 'ActionPinnedNoText';\n\n            if(message.reply_to_mid) { // refresh original message\n              this.fetchMessageReplyTo(message).then(originalMessage => {\n                if(!originalMessage.deleted && !message.deleted) {\n                  rootScope.dispatchEvent('message_edit', {\n                    storage: this.getMessagesStorage(peerId),\n                    peerId: peerId,\n                    mid: message.mid\n                  });\n\n                  if(this.isMessageIsTopMessage(message)) {\n                    rootScope.dispatchEvent('dialogs_multiupdate', {\n                      [peerId]: this.getDialogOnly(peerId)\n                    });\n                  }\n                }\n              });\n            }\n          } else {\n            const a = document.createElement('i');\n            a.dataset.savedFrom = pinnedMessage.peerId + '_' + pinnedMessage.mid;\n            a.dir = 'auto';\n            a.append(this.wrapMessageForReply(pinnedMessage, undefined, undefined, plain as any));\n            args.push(a);\n          }\n\n          break;\n        }\n\n        case 'messageActionChatJoinedByRequest': {\n          const isBroadcast = appPeersManager.isBroadcast(message.peerId);\n          if(message.pFlags.out) {\n            langPackKey = isBroadcast ? 'RequestToJoinChannelApproved' : 'RequestToJoinGroupApproved';\n          } else {\n            langPackKey = isBroadcast ? 'ChatService.UserJoinedChannelByRequest' : 'ChatService.UserJoinedGroupByRequest';\n            args = [getNameDivHTML(message.fromId, plain)];\n          }\n          break;\n        }\n\n        case 'messageActionContactSignUp':\n        case 'messageActionChatReturn':\n        case 'messageActionChatLeave':\n        case 'messageActionChatJoined':\n        case 'messageActionChatEditPhoto':\n        case 'messageActionChatDeletePhoto':\n        case 'messageActionChatEditVideo':\n        case 'messageActionChatJoinedByLink':\n        case 'messageActionChannelEditVideo':\n        case 'messageActionChannelDeletePhoto': {\n          args = [getNameDivHTML(message.fromId, plain)];\n          break;\n        }\n\n        case 'messageActionChannelEditTitle':\n        case 'messageActionChatEditTitle': {\n          args = [];\n          if(action._ === 'messageActionChatEditTitle') {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          args.push(plain ? action.title : htmlToSpan(RichTextProcessor.wrapEmojiText(action.title)));\n          break;\n        }\n\n        case 'messageActionChatDeleteUser':\n        case 'messageActionChatAddUsers':\n        case 'messageActionChatAddUser': {\n          const users = (action as MessageAction.messageActionChatAddUser).users \n            || [(action as MessageAction.messageActionChatDeleteUser).user_id];\n\n          args = [getNameDivHTML(message.fromId, plain)];\n\n          if(users.length > 1) {\n            const joined = join(\n              users.map((userId: UserId) => getNameDivHTML(userId.toPeerId(), plain)),\n              false,\n              plain\n            );\n            \n            if(plain) {\n              args.push(...joined);\n            } else {\n              const fragment = document.createElement('span');\n              fragment.append(...joined);\n              args.push(fragment);\n            }\n          } else {\n            args.push(getNameDivHTML(users[0].toPeerId(), plain));\n          }\n\n          break;\n        }\n\n        case 'messageActionBotAllowed': {\n          const anchorHTML = RichTextProcessor.wrapRichText(action.domain, {\n            entities: [{\n              _: 'messageEntityUrl',\n              length: action.domain.length,\n              offset: 0\n            }]\n          });\n\n          const node = htmlToSpan(anchorHTML);\n\n          args = [node];\n          break;\n        }\n\n        default:\n          langPackKey = (langPack[_] || `[${action._}]`) as any;\n          break;\n      }\n\n      if(!langPackKey) {\n        langPackKey = langPack[_];\n        if(langPackKey === undefined) {\n          langPackKey = '[' + _ + ']' as any;\n        }\n      }\n\n      if(plain) {\n        return I18n.format(langPackKey, true, args);\n      } else {\n        return _i18n(element, langPackKey, args);\n      }\n\n      //str = !langPackKey || langPackKey[0].toUpperCase() === langPackKey[0] ? langPackKey : getNameDivHTML(message.fromId) + langPackKey + (suffix ? ' ' : '');\n    }\n  }\n\n  public wrapMessageActionTextNew(message: MyMessage, plain: true): string;\n  public wrapMessageActionTextNew(message: MyMessage, plain?: false): HTMLElement;\n  public wrapMessageActionTextNew(message: MyMessage, plain: boolean): HTMLElement | string;\n  public wrapMessageActionTextNew(message: MyMessage, plain?: boolean): HTMLElement | string {\n    try {\n      return this.wrapMessageActionTextNewUnsafe(message, plain);\n    } catch(err) {\n      this.log.error('wrapMessageActionTextNewUnsafe error:', err);\n      return plain ? '' : document.createElement('span');\n    }\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return apiManager.invokeApiSingle('messages.report', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return apiManager.invokeApi('messages.startBot', {\n        bot: appUsersManager.getUserInput(botId),\n        peer: appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(appChatsManager.isChannel(chatId)) {\n        promise = appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error) => {\n        if(error && error.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map(peerId => {\n        return {\n          _: 'inputFolderPeer',\n          peer: appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then(updates => {\n      //this.log('editPeerFolders updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = filterId === 1 ? rootScope.config.pinned_infolder_count_max : rootScope.config.pinned_dialogs_count_max;\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n    }\n\n    return apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return apiManager.invokeApi('messages.markDialogUnread', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat = appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat &&\n        fromChat.migrated_to &&\n        fromChat.migrated_to.channel_id === migrateTo.toChatId()) {\n          this.migratedFromTo[migrateFrom] = migrateTo;\n          this.migratedToFrom[migrateTo] = migrateFrom;\n\n        //setTimeout(() => {\n          rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n          this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n        //}, 100);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: any, kind: 'text' | 'poll') {\n    if(message.pFlags.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n    \n    if(message.media &&\n        message.media._ === 'messageMediaDocument' &&\n        (message.media.document.sticker || message.media.document.type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if(!message.pFlags.out || (\n        message.peerId.isUser() && \n        message.date < (tsNow(true) - rootScope.config.edit_time_limit) && \n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() \n      || message.fromId === rootScope.myId \n      || appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' \n      || appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    let messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = appPeersManager.getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup\n        ? message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId\n        : appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true) {\n    const func = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n    return func('messages.getSearchCounters', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilter(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage, limit: number) {\n    const foundMsgs: MyMessage[] = [];\n    if(!history.length) {\n      return foundMsgs;\n    }\n\n    let filtering = true;\n    const neededContents: Partial<{\n      [messageMediaType in MessageMedia['_']]: boolean\n    }> & Partial<{\n      avatar: boolean,\n      url: boolean\n    }> = {},\n      neededDocTypes: MyDocument['type'][] = [], \n      excludeDocTypes: MyDocument['type'][] = []/* ,\n      neededFlags: string[] = [] */;\n\n    switch(inputFilter) {\n      case 'inputMessagesFilterPhotos':\n        neededContents['messageMediaPhoto'] = true;\n        break;\n\n      case 'inputMessagesFilterPhotoVideo':\n        neededContents['messageMediaPhoto'] = true;\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterVideo':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterDocument':\n        neededContents['messageMediaDocument'] = true;\n        excludeDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterVoice':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('voice');\n        break;\n\n      case 'inputMessagesFilterRoundVoice':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('round', 'voice');\n        break;\n\n      case 'inputMessagesFilterRoundVideo':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('round');\n        break;\n\n      case 'inputMessagesFilterMusic':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('audio');\n        break;\n\n      case 'inputMessagesFilterUrl':\n        neededContents['url'] = true;\n        break;\n\n      case 'inputMessagesFilterChatPhotos':\n        neededContents['avatar'] = true;\n        break;\n\n      /* case 'inputMessagesFilterPinned':\n        neededFlags.push('pinned');\n        break; */\n\n      /* case 'inputMessagesFilterMyMentions':\n        neededContents['mentioned'] = true;\n        break; */\n\n      default:\n        filtering = false;\n        break;\n        /* return Promise.resolve({\n          count: 0,\n          next_rate: 0,\n          history: [] as number[]\n        }); */\n    }\n\n    if(!filtering) {\n      return foundMsgs;\n    }\n\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const message: Message.message | Message.messageService = storage.get(history[i]);\n      if(!message) continue;\n  \n      //|| (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\n  \n      let found = false;\n      if(message._ === 'message') {\n        if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\n          const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\n          if(doc && ((neededDocTypes.length && !neededDocTypes.includes(doc.type)) \n            || excludeDocTypes.includes(doc.type))) {\n            continue;\n          }\n  \n          found = true;\n        } else if(neededContents['url'] && message.message) {\n          const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\n          if((message.totalEntities as MessageEntity[]).find(e => goodEntities.includes(e._)) || RichTextProcessor.matchUrl(message.message)) {\n            found = true;\n          }\n        }\n      } else if(neededContents['avatar'] && \n        message.action && \n        ([\n          'messageActionChannelEditPhoto' as const, \n          'messageActionChatEditPhoto' as const, \n          'messageActionChannelEditVideo' as const, \n          'messageActionChatEditVideo' as const\n        ] as MessageAction['_'][]).includes(message.action._)) {\n        found = true;\n      }/*  else if(neededFlags.find(flag => message.pFlags[flag])) {\n        found = true;\n      } */\n  \n      if(found) {\n        foundMsgs.push(message);\n        if(foundMsgs.length >= limit) {\n          break;\n        }\n      }\n    }\n\n    return foundMsgs;\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    //this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    //const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ? \n        this.getSearchStorage(peerId, inputFilter._) as any : \n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilter(inputFilter._, storage.history.slice, this.getMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: appMessagesIdsManager.getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: appMessagesIdsManager.getServerMessageId(threadId) || 0\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      //var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      let offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        //offsetDate = offsetMessage.date + serverTimeManager.serverTimeOffset;\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      appUsersManager.saveApiUsers(searchResult.users);\n      appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter(mid => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = appMessagesIdsManager.getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: appMessagesIdsManager.generateMessageId(maxMessageId, true),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  } \n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      msg_id: appMessagesIdsManager.getServerMessageId(mid)\n    }).then(result => {\n      appChatsManager.saveApiChats(result.chats);\n      appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.filterMessages(result.messages[0], message => !!(message as Message.message).replies)[0] as Message.message;\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n      \n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = appMessagesIdsManager.generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = appMessagesIdsManager.generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(peerId: PeerId, mid: number) {\n    if(this.newMessagesToHandle[peerId] === undefined) {\n      this.newMessagesToHandle[peerId] = new Set();\n    }\n\n    this.newMessagesToHandle[peerId].add(mid);\n    if(!this.newMessagesHandleTimeout) {\n      this.newMessagesHandleTimeout = window.setTimeout(this.handleNewMessages, 0);\n    }\n  }\n\n  private handleNewMessages = () => {\n    clearTimeout(this.newMessagesHandleTimeout);\n    this.newMessagesHandleTimeout = 0;\n\n    rootScope.dispatchEvent('history_multiappend', this.newMessagesToHandle);\n    this.newMessagesToHandle = {};\n  };\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const obj = this.newDialogsToHandle;\n    for(const peerId in obj) {\n      const dialog = obj[peerId];\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n        delete obj[peerId];\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!appPeersManager.isChannel(peerId.toPeerId())) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    //this.log('after order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n    this.newDialogsToHandle = {};\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle[peerId] = dialog;\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = new Promise<void>((resolve) => {\n      setTimeout(() => {\n        resolve();\n        this.newDialogsHandlePromise = undefined;\n        this.handleNewDialogs();\n      }, 0);\n    });\n  }\n\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const localMessageIds = mids.map(mid => appMessagesIdsManager.getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = apiManager.invokeApi('channels.deleteMessages', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    return promise;\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId) && !force) {\n      this.log('readHistory: isn\\'t unread');\n      return Promise.resolve();\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readDiscussion', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          msg_id: appMessagesIdsManager.getServerMessageId(threadId),\n          read_max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('channels.readHistory', {\n          channel: appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readHistory', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    appNotificationsManager.soundReset(appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then(messages => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        rootScope.dispatchEvent('history_focus', {peerId, mid});\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then(messages => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      offset_id: appMessagesIdsManager.getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: appMessagesIdsManager.getServerMessageId(maxId),\n      min_id: appMessagesIdsManager.getServerMessageId(minId)\n    }).then(messagesMessages => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      appUsersManager.saveApiUsers(messagesMessages.users);\n      appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map(mid => appMessagesIdsManager.getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = apiManager.invokeApi('channels.readMessageContents', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      //threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  private handleNotifications = () => {\n    window.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    //var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    //const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n        continue;\n      }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n\n      Promise.all([\n        appNotificationsManager.getNotifyPeerTypeSettings(),\n        appNotificationsManager.getNotifySettings(appPeersManager.getInputNotifyPeerById(peerId, true))\n      ]).then(([_, peerTypeNotifySettings]) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if(appNotificationsManager.isPeerLocalMuted(peerId, true) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        //setTimeout(() => {\n          if(topMessage.pFlags.unread) {\n            this.notifyAboutMessage(topMessage, {\n              fwdCount: notifyPeerToHandle.fwdCount,\n              peerTypeNotifySettings\n            });\n          }\n        //}, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    //this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = appMessagesIdsManager.generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!message.deleted) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach(storage => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: new Map()});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? appMessagesIdsManager.getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    if(!pendingMessage) {\n      this.handleNewMessage(peerId, message.mid);\n    }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n    \n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = window.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    //this.log('updateDialogUnreadMark', update);\n    const peerId = appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      rootScope.dispatchEvent('dialogs_multiupdate', {[peerId]: dialog});\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = appMessagesIdsManager.generateMessageId(message.id);\n    const storage = this.getMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n    \n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      }\n    } else {\n      rootScope.dispatchEvent('message_edit', {\n        storage,\n        peerId,\n        mid\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n        updatedDialogs[peerId] = dialog;\n        rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox \n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox \n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    //this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n      \n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n      \n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n        \n        appNotificationsManager.cancel('msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n      \n      rootScope.dispatchEvent('dialog_unread', {peerId});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid));\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map(id => appMessagesIdsManager.generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.getMessageById(mids[0]).peerId;\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(!message.deleted) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n  \n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = appMessagesIdsManager.generateMessageId(update.available_min_id);\n    const messages = history.filter(mid => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    //const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map(id => appMessagesIdsManager.generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.getMessageById(messages[0]).peerId;\n    \n    if(!peerId) {\n      return;\n    }\n\n    apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n    \n    const historyUpdated = this.handleDeletedMessages(peerId, this.getMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map(threadKey => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach(historyStorage => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n      \n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n      \n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        rootScope.dispatchEvent('dialog_unread', {peerId});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = appChatsManager.getChat(channelId);\n\n    const needDialog = appChatsManager.isInChat(channelId);\n    \n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n    \n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n    \n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.dialogsStorage.dropDialog(peerId);\n\n    delete this.historiesStorage[peerId];\n    this.reloadConversation(peerId).then(() => {\n      rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n  \n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = appMessagesIdsManager.generateMessageId(update.id);\n    const message: Message.message = this.getMessageByPeer(peerId, mid);\n    if(!message.deleted && message.views !== undefined && message.views < views) {\n      message.views = views;\n      rootScope.dispatchEvent('message_views', {peerId, mid, views});\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    //this.log('updateServiceNotification', update);\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: appPeersManager.getOutputPeer(fromId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + serverTimeManager.serverTimeOffset,\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!appUsersManager.hasUser(fromId)) {\n      appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];  \n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map(id => appMessagesIdsManager.generateMessageId(id)); \n\n    const storage = this.getMessagesStorage(peerId);\n    const missingMessages = messages.filter(mid => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map(mid => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          //storage.history.push(mid);\n          const message = storage.get(mid);\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        //storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          //storage.history.findAndSplice(_mid => _mid === mid);\n          const message = storage.get(mid);\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n  \n      delete this.pinnedMessages[peerId];\n      appStateManager.getState().then(state => {\n        delete state.hiddenPinnedMessages[peerId];\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = appPeersManager.getPeerId((peer as NotifyPeer.notifyPeer).peer);\n    \n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mid = appMessagesIdsManager.generateMessageId(message.id);\n\n      const oldMessage = this.getMessageFromStorage(storage, mid);\n      this.saveMessages([message], {storage, isScheduled: true});\n      const newMessage = this.getMessageFromStorage(storage, mid);\n\n      if(!oldMessage.deleted) {\n        this.handleEditedMessage(oldMessage, newMessage);\n        rootScope.dispatchEvent('message_edit', {storage, peerId, mid: message.mid});\n      } else {\n        const pendingMessage = this.checkPendingMessage(message);\n        if(!pendingMessage) {\n          rootScope.dispatchEvent('scheduled_new', {peerId, mid: message.mid});\n        }\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map(id => appMessagesIdsManager.generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage.peerId?.isAnyChat() && threadMessage.reply_to) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid);\n\n      if(broadcastEventName) {\n        rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n    \n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        rootScope.dispatchEvent('history_update', {storage: pendingData.storage, peerId: message.peerId, mid: message.mid});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, muteUntil: number) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    return appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public togglePeerMute(peerId: PeerId, mute?: boolean) {\n    if(mute === undefined) {\n      mute = !appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n\n    return this.mutePeer(peerId, mute ? MUTE_UNTIL : 0);\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(peerId.isAnyChat()) {\n      //const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId); \n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach(storage => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(!tempMessage.deleted) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n      \n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    //this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        //this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = appDownloadManager.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = appDownloadManager.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = appPhotosManager.getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const doc = appDocsManager.getDoc('' + tempId);\n        if(doc) {\n          if(/* doc._ !== 'documentEmpty' &&  */doc.type && doc.type !== 'sticker' && doc.mime_type !== 'image/gif') {\n            const cacheContext = appDownloadManager.getCacheContext(newDoc);\n            const oldCacheContext = appDownloadManager.getCacheContext(doc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = appDocsManager.getInputFileName(newDoc);\n            appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete appPollsManager.polls[tempId];\n        delete appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n    \n    this.handleReleasingMessage(tempMessage, storage);\n\n    rootScope.dispatchEvent('message_sent', {storage, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    apiManager.invokeApi('messages.receivedMessages', {\n      max_id: appMessagesIdsManager.getServerMessageId(maxId)\n    });\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      increment: true\n    }).then(views => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n    const notification: NotifyOptions = {};\n    const peerString = appPeersManager.getPeerString(peerId);\n    let notificationMessage: string;\n\n    if(options.peerTypeNotifySettings.show_previews) {\n      if(message._ === 'message' && message.fwd_from && options.fwdCount) {\n        notificationMessage = I18n.format('Notifications.Forwarded', true, [options.fwdCount]);\n      } else {\n        notificationMessage = this.wrapMessageForReply(message, undefined, undefined, true);\n      }\n    } else {\n      notificationMessage = I18n.format('Notifications.New', true);\n    }\n\n    notification.title = appPeersManager.getPeerTitle(peerId, true);\n    if(peerId.isAnyChat() && message.fromId !== message.peerId) {\n      notification.title = appPeersManager.getPeerTitle(message.fromId, true) +\n        ' @ ' +\n        notification.title;\n    }\n\n    notification.title = RichTextProcessor.wrapPlainText(notification.title);\n\n    notification.onclick = () => {\n      rootScope.dispatchEvent('history_focus', {peerId, mid: message.mid});\n    };\n\n    notification.message = notificationMessage;\n    notification.key = 'msg' + message.mid;\n    notification.tag = peerString;\n    notification.silent = true;//message.pFlags.silent || false;\n\n    const peerPhoto = appPeersManager.getPeerPhoto(peerId);\n    if(peerPhoto) {\n      appAvatarsManager.loadAvatar(peerId, peerPhoto, 'photo_small').loadPromise.then(url => {\n        if(message.pFlags.unread) {\n          notification.image = url;\n          appNotificationsManager.notify(notification);\n        }\n      });\n    } else {\n      appNotificationsManager.notify(notification);\n    }\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage());\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId): Promise<number[]> {\n    if(!this.canSendToPeer(peerId)) return Promise.resolve([]);\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return Promise.resolve([...storage.keys()]);\n    }\n\n    return apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then(historyResult => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        appUsersManager.saveApiUsers(historyResult.users);\n        appChatsManager.saveApiChats(historyResult.chats);\n        \n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n      \n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.filterMessages(message, message => !!(message as Message.message).replies)[0] as any;\n      if(!(message && message.replies && message.replies.pFlags.comments && message.replies.channel_id !== '777')) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    let historyResult = this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    if(historyResult instanceof Promise) {\n      historyResult = await historyResult;\n    }\n\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(peerId, historyResult.history[i]);\n    }\n\n    return historyStorage;\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  public getHistory(peerId: PeerId, maxId = 0, limit: number, backLimit?: number, threadId?: number): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    let offset = 0;\n    /* \n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map(message => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: haveSlice.slice,\n        offsetIdOffset: haveSlice.offsetIdOffset\n      }; \n    }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      return {\n        count: historyStorage.count,\n        history: slice?.slice || historyStorage.history.constructSlice(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray, \n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0], \n    offset_id: number, \n    limit: number, \n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually. \n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && appMessagesIdsManager.getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n  \n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        historyStorage.maxId = slice[0]; // ! WARNING\n      }\n      \n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    //console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    //rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: appPeersManager.getInputPeerById(peerId),\n      offset_id: appMessagesIdsManager.getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = appMessagesIdsManager.getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      appUsersManager.saveApiUsers(historyResult.users);\n      appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(appPeersManager.isChannel(peerId)) {\n        apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && historyResult.messages[length - 1].deleted) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = new Promise((resolve) => {\n      setTimeout(() => {\n        const requestPromises: Promise<void>[] = [];\n        \n        for(const [peerId, map] of this.needSingleMessages) {\n          const mids = [...map.keys()];\n          const msgIds: InputMessage[] = mids.map((mid) => {\n            return {\n              _: 'inputMessageID',\n              id: appMessagesIdsManager.getServerMessageId(mid)\n            };\n          });\n    \n          let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n          if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n            promise = apiManager.invokeApiSingle('channels.getMessages', {\n              channel: appChatsManager.getChannelInput(peerId.toChatId()),\n              id: msgIds\n            });\n          } else {\n            promise = apiManager.invokeApiSingle('messages.getMessages', {\n              id: msgIds\n            });\n          }\n\n          const after = promise.then(getMessagesResult => {\n            assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n            appUsersManager.saveApiUsers(getMessagesResult.users);\n            appChatsManager.saveApiChats(getMessagesResult.chats);\n            this.saveMessages(getMessagesResult.messages);\n\n            for(let i = 0; i < getMessagesResult.messages.length; ++i) {\n              const message = getMessagesResult.messages[i];\n              const mid = appMessagesIdsManager.generateMessageId(message.id);\n              const promise = map.get(mid);\n              promise.resolve(getMessagesResult.messages[i]);\n              map.delete(mid);\n            }\n\n            if(map.size) {\n              for(const [mid, promise] of map) {\n                promise.resolve(this.generateEmptyMessage(mid));\n              }\n            }\n          }).finally(() => {\n            rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n          });\n    \n          requestPromises.push(after);\n        }\n\n        this.needSingleMessages.clear();\n\n        Promise.all(requestPromises).finally(() => {\n          this.fetchSingleMessagesPromise = null;\n          if(this.needSingleMessages.size) this.fetchSingleMessages();\n          resolve();\n        });\n      }, 0);\n    });\n  }\n\n  public wrapSingleMessage(peerId: PeerId, mid: number, overwrite = false): Promise<Message> {\n    const message = this.getMessageByPeer(peerId, mid);\n    if(!message.deleted && !overwrite) {\n      rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public fetchMessageReplyTo(message: MyMessage): Promise<Message> {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.wrapSingleMessage(replyToPeerId, message.reply_to_mid).then(originalMessage => {\n      if(originalMessage.deleted) { // ! чтобы не пыталось бесконечно загрузить удалённое сообщение\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction, force?: boolean): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(!rootScope.myId || \n      !peerId || \n      !this.canSendToPeer(peerId) || \n      peerId === rootScope.myId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      action\n    };\n\n    return apiManager.invokeApi('messages.setTyping', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = window.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number, \n      unread: number, \n      unreadMentions: number, \n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0, \n      unread: 0, \n      unreadMentions: 0, \n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(message.deleted) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        appNotificationsManager.cancel('msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n\n      const peerMessagesToHandle = this.newMessagesToHandle[peerId];\n      if(peerMessagesToHandle && peerMessagesToHandle.has(mid)) {\n        peerMessagesToHandle.delete(mid);\n      }\n    }\n\n    if(history.albums) {\n      for(const groupId in history.albums) {\n        rootScope.dispatchEvent('album_edit', {peerId, groupId, deletedMids: [...history.albums[groupId]]});\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n  \n  private handleEditedMessage(oldMessage: Message, newMessage: Message) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n    }\n  }\n\n  public getMediaFromMessage(message: any) {\n    return message.action ? \n      message.action.photo : \n      message.media && (\n        message.media.photo || \n        message.media.document || (\n          message.media.webpage && (\n            message.media.webpage.document || \n            message.media.webpage.photo\n          )\n        )\n      );\n  }\n\n  public isMentionUnread(message: MyMessage) {\n    const doc = ((message as Message.message).media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n    return message.pFlags.media_unread && \n      message.pFlags.mentioned && \n      (\n        !doc || \n        !(['voice', 'round'] as MyDocument['type'][]).includes(doc.type)\n      );\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return !(message as Message.message).pFlags.noforwards && !appPeersManager.noForwards(message.peerId);\n  }\n}\n\nconst appMessagesManager = new AppMessagesManager();\nMOUNT_CLASS_TO.appMessagesManager = appMessagesManager;\nexport default appMessagesManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto } from \"../../layer\";\r\nimport type { LangPackKey } from \"../langPack\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { isObject } from \"../../helpers/object\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport rootScope from \"../rootScope\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport I18n from '../langPack';\r\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\r\n\r\n// https://github.com/eelcohn/Telegram-API/wiki/Calculating-color-for-a-Telegram-user-on-IRC\r\n/*\r\n  HTML-color  IRC-color  Description\r\n  #c03d33     4          red\r\n  #4fad2d     3          green\r\n  #d09306     7          yellow\r\n  #168acd     10         blue\r\n  #8544d6     6          purple\r\n  #cd4073     13         pink\r\n  #2996ad     11         sea\r\n  #ce671b     5          orange\r\n  */\r\nconst DialogColorsFg = ['#fc5c51', '#0fb297', '#d09306', '#3d72ed', '#895dd5', '#cd4073', '#00c1a6', '#fa790f'];\r\nconst DialogColors = ['red', 'green', 'yellow', 'blue', 'violet', 'pink', 'cyan', 'orange'];\r\nconst DialogColorsMap = [0, 7, 4, 1, 6, 3, 5];\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager {\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    const photo = peerId.isUser() \r\n      ? appUsersManager.getUserPhoto(peerId.toUserId())\r\n      : appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : null;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return this.getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public getPeerTitle(peerId: PeerId, plainText = false, onlyFirstName = false) {\r\n    if(!peerId) {\r\n      peerId = rootScope.myId;\r\n    }\r\n    \r\n    let title = '';\r\n    if(peerId.isUser()) {\r\n      const user = appUsersManager.getUser(peerId.toUserId());\r\n      if(user.first_name) title += user.first_name;\r\n      if(user.last_name && (!onlyFirstName || !title)) title += ' ' + user.last_name;\r\n  \r\n      if(!title) title = user.pFlags.deleted ? I18n.format('HiddenName', true) : user.username;\r\n      else title = title.trim();\r\n    } else {\r\n      const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\r\n      title = chat.title;\r\n\r\n      if(onlyFirstName) {\r\n        title = title.split(' ')[0];\r\n      }\r\n    }\r\n    \r\n    return plainText ? title : RichTextProcessor.wrapEmojiText(title);\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser()\r\n      ? appUsersManager.getUser(peerId.toUserId())\r\n      : appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputPeer | PeerId | string): PeerId {\r\n    if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\r\n    // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\r\n    // if(typeof(peerId) === 'number') return peerId;\r\n    else if(isObject(peerId)) {\r\n      const userId = (peerId as Peer.peerUser).user_id;\r\n      if(userId !== undefined) {\r\n        return userId.toPeerId(false);\r\n      }\r\n\r\n      const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\r\n      if(chatId !== undefined) {\r\n        return chatId.toPeerId(true);\r\n      }\r\n\r\n      return rootScope.myId; // maybe it is an inputPeerSelf\r\n    // } else if(!peerId) return 'u0';\r\n    } else if(!peerId) return NULL_PEER_ID;\r\n    \r\n    const isUser = (peerId as string).charAt(0) === 'u';\r\n    const peerParams = (peerId as string).substr(1).split('_');\r\n\r\n    return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return +peerId >= 0;\r\n  }\r\n  \r\n  public isAnyChat(peerId: PeerId) {\r\n    return !this.isUser(peerId);\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer', \r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerColorById(peerId: PeerId, pic = true) {\r\n    if(!peerId) return '';\r\n\r\n    const idx = DialogColorsMap[Math.abs(+peerId) % 7];\r\n    const color = (pic ? DialogColors : DialogColorsFg)[idx];\r\n    return color;\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === rootScope.myId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): LangPackKey {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n      \r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n\r\n[\r\n  'isChannel',\r\n  'isMegagroup',\r\n  'isAnyGroup',\r\n  'isBroadcast',\r\n  'isBot',\r\n  'isContact',\r\n  'isUser',\r\n  'isAnyChat',\r\n].forEach((value) => {\r\n  const newMethod = Array.isArray(value) ? value[0] : value;\r\n  const originMethod = Array.isArray(value) ? value[1] : value;\r\n  // @ts-ignore\r\n  String.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return appPeersManager[originMethod](this.toString());\r\n  };\r\n\r\n  // @ts-ignore\r\n  Number.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return appPeersManager[originMethod](this);\r\n  };\r\n});\r\n\r\ndeclare global {\r\n  interface String {\r\n    isChannel(): boolean;\r\n    isMegagroup(): boolean;\r\n    isAnyGroup(): boolean;\r\n    isBroadcast(): boolean;\r\n    isBot(): boolean;\r\n    isContact(): boolean;\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n\r\n  interface Number {\r\n    isChannel(): boolean;\r\n    isMegagroup(): boolean;\r\n    isAnyGroup(): boolean;\r\n    isBroadcast(): boolean;\r\n    isBot(): boolean;\r\n    isContact(): boolean;\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n}\r\n\r\nconst appPeersManager = new AppPeersManager();\r\nMOUNT_CLASS_TO.appPeersManager = appPeersManager;\r\nexport default appPeersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { isObject, safeReplaceObject, copy, deepEqual } from \"../../helpers/object\";\nimport { ChannelParticipant, Chat, ChatAdminRights, ChatBannedRights, ChatParticipant, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, Update, Updates, ChannelsCreateChannel } from \"../../layer\";\nimport apiManagerProxy from \"../mtproto/mtprotoworker\";\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager {\n  private storage = appStateManager.storages.chats;\n  \n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  //private usernames: any;\n  //private channelAccess: any;\n  //private megagroups: {[id: number]: true};\n\n  constructor() {\n    this.clear(true);\n\n    rootScope.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        apiManagerProxy.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = appPeersManager.getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    appStateManager.getState().then((state) => {\n      const chats = appStateManager.storagesResults.chats;\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const chats = appStateManager.storagesResults.chats;\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!appStateManager.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n          \n          chats.findAndSplice((chat) => chat.id === chatId);\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  }\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach(chat => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n    \n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    chat.initials = RichTextProcessor.getAbbreviation(chat.title);\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      if(oldChat.title !== chat.title) {\n        changedTitle = true;\n      }\n\n      safeReplaceObject(oldChat, chat);\n      rootScope.dispatchEvent('chat_update', chat.id);\n    }\n\n    const peerId = chat.id.toPeerId(true);\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', peerId);\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', peerId);\n    }\n\n    if(appStateManager.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  public combineParticipantBannedRights(id: ChatId, rights: ChatBannedRights) {\n    const chat: Chat.channel = this.getChat(id);\n\n    if(chat.default_banned_rights) {\n      rights = copy(rights);\n      const defaultRights = chat.default_banned_rights.pFlags;\n      for(let i in defaultRights) {\n        // @ts-ignore\n        rights.pFlags[i] = defaultRights[i];\n      }\n    }\n\n    return rights;\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id \n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread \n   * @returns \n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty') return false;\n\n    if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\n      return false;\n    }\n\n    const isCheckingRightsForSelf = rights === undefined;\n    if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf) {\n      return true;\n    }\n\n    if(chat._ === 'chatForbidden' ||\n        chat._ === 'channelForbidden' ||\n        (chat as Chat.chat).pFlags.kicked ||\n        (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\n      return false;\n    }\n\n    // const adminRights = chat.admin_rights;\n    // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n    if(!rights) {\n      rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n      if(!rights) {\n        return false;\n      }\n    }\n\n    let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\n    if(rights) {\n      myFlags = rights.pFlags as any;\n    }\n\n    // const adminFlags = adminRights?.pFlags || {};\n    // const bannedFlags = bannedRights?.pFlags || {};\n\n    switch(action) {\n      case 'embed_links':\n      case 'send_games':\n      case 'send_gifs':\n      case 'send_inline':\n      case 'send_media':\n      case 'send_messages':\n      case 'send_polls':\n      case 'send_stickers': {\n        if(!isThread && chat.pFlags.left) {\n          return false;\n        }\n\n        if(rights._ === 'chatBannedRights' && myFlags[action]) {\n          return false;\n        }\n\n        if(chat._ === 'channel') {\n          if(!chat.pFlags.megagroup && !myFlags.post_messages) {\n            return false;\n          }\n        }\n\n        break;\n      }\n\n      // * revoke foreign messages\n      case 'delete_messages':\n      case 'manage_call': {\n        return !!myFlags[action];\n      }\n\n      case 'pin_messages': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] || !!myFlags.post_messages : !myFlags[action];\n      }\n\n      // case 'change_info': {\n        // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\n      // }\n\n      case 'change_info':\n      case 'invite_users': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] : !myFlags[action];\n      }\n\n      // * only creator can do that\n      case 'change_type':\n      case 'delete_chat': {\n        return false;\n      }\n\n      case 'ban_users':\n      case 'change_permissions': {\n        return rights._ === 'chatAdminRights' && !!myFlags['ban_users'];\n      }\n\n      case 'view_participants': {\n        return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\n      }\n    }\n\n    return true;\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n    \n    return apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat && chat._ === 'channel' && chat.pFlags.megagroup);\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' \n      || chat._ === 'chatForbidden' \n      || chat._ === 'chatEmpty' \n      || (chat as Chat.chat).pFlags.left \n      || (chat as Chat.chat).pFlags.kicked \n      || (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = RichTextProcessor.wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: channelId.toPeerId(true)});\n\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map(u => appUsersManager.getUserInput(u));\n\n    return apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return apiManager.invokeApi('messages.createChat', {\n      users: userIds.map(u => appUsersManager.getUserInput(u)),\n      title\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: chatId.toPeerId(true)});\n\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    //console.log('onChatUpdated', chatId, updates);\n\n    apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    //return this.leaveChat(id).then(() => {\n      return apiManager.invokeApi('messages.deleteChat', {\n        chat_id: id\n      });\n    //});\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find(u => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return apiManager.invokeApi('messages.editChatAbout', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      about\n    }).then(bool => {\n      if(bool) {\n        rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public getParticipantPeerId(participant: ChannelParticipant | ChatParticipant): PeerId {\n    const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ? \n      appPeersManager.getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) : \n      (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\n    return peerId;\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : this.getParticipantPeerId(participant);\n    return apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: appUsersManager.getSelf().id,\n            peer: appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n  \n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then(messagesChats => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then(channelId => {\n      return apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n\nconst appChatsManager = new AppChatsManager();\nMOUNT_CLASS_TO.appChatsManager = appChatsManager;\nexport default appChatsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { i18n } from \"../lib/langPack\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport { NULL_PEER_ID } from \"../lib/mtproto/mtproto_config\";\r\n\r\nexport type PeerTitleOptions = {\r\n  peerId?: PeerId,\r\n  fromName?: string,\r\n  plainText?: boolean,\r\n  onlyFirstName?: boolean,\r\n  dialog?: boolean\r\n};\r\n\r\nconst weakMap: WeakMap<HTMLElement, PeerTitle> = new WeakMap();\r\n\r\nMOUNT_CLASS_TO.peerTitleWeakMap = weakMap;\r\n\r\nrootScope.addEventListener('peer_title_edit', (peerId) => {\r\n  const elements = Array.from(document.querySelectorAll(`.peer-title[data-peer-id=\"${peerId}\"]`)) as HTMLElement[];\r\n  elements.forEach(element => {\r\n    const peerTitle = weakMap.get(element);\r\n    //console.log('in the summer silence i was doing nothing', peerTitle, peerId);\r\n\r\n    if(peerTitle) {\r\n      peerTitle.update();\r\n    }\r\n  });\r\n});\r\n\r\nexport default class PeerTitle {\r\n  public element: HTMLElement;\r\n  public peerId: PeerId;\r\n  public fromName: string;\r\n  public plainText = false;\r\n  public onlyFirstName = false;\r\n  public dialog = false;\r\n\r\n  constructor(options: PeerTitleOptions) {\r\n    this.element = document.createElement('span');\r\n    this.element.classList.add('peer-title');\r\n    this.element.setAttribute('dir', 'auto');\r\n    \r\n    this.update(options);\r\n    weakMap.set(this.element, this);\r\n  }\r\n\r\n  public update(options?: PeerTitleOptions) {\r\n    if(options) {\r\n      for(let i in options) {\r\n        // @ts-ignore\r\n        this.element.dataset[i] = options[i] ? '' + (typeof(options[i]) === 'boolean' ? +options[i] : options[i]) : '0';\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    if(this.fromName !== undefined) {\r\n      this.element.innerHTML = RichTextProcessor.wrapEmojiText(this.fromName);\r\n      return;\r\n    }\r\n\r\n    if(this.peerId === undefined) {\r\n      this.peerId = NULL_PEER_ID;\r\n    }\r\n\r\n    if(this.peerId !== rootScope.myId || !this.dialog) {\r\n      if(this.peerId.isUser() && appUsersManager.getUser(this.peerId).pFlags.deleted) {\r\n        replaceContent(this.element, i18n(this.onlyFirstName ? 'Deleted' : 'HiddenName'));\r\n      } else {\r\n        this.element.innerHTML = appPeersManager.getPeerTitle(this.peerId, this.plainText, this.onlyFirstName);\r\n      }\r\n    } else {\r\n      replaceContent(this.element, i18n(this.onlyFirstName ? 'Saved' : 'SavedMessages'));\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport { bytesFromHex } from \"../../helpers/bytes\";\nimport { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport { safeReplaceArrayInObject, isObject } from \"../../helpers/object\";\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport { InputFileLocation, InputMedia, InputPhoto, Photo, PhotoSize, PhotosPhotos } from \"../../layer\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager, { ThumbCache } from \"./appDownloadManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport blur from \"../../helpers/blur\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport calcImageInBox from \"../../helpers/calcImageInBox\";\nimport { makeMediaSize, MediaSize } from \"../../helpers/mediaSizes\";\nimport windowSize from \"../../helpers/windowSize\";\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n//let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  private static jpegHeader = bytesFromHex('ffd8ffe000104a46494600010100000100010000ffdb004300281c1e231e19282321232d2b28303c64413c37373c7b585d4964918099968f808c8aa0b4e6c3a0aadaad8a8cc8ffcbdaeef5ffffff9bc1fffffffaffe6fdfff8ffdb0043012b2d2d3c353c76414176f8a58ca5f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ffc00011080000000003012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00');\n  private static jpegTail = bytesFromHex('ffd9');\n  \n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(photo._ === 'photoEmpty') return undefined;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n  \n  public choosePhotoSize(photo: MyPhoto | MyDocument, boxWidth = 0, boxHeight = 0, useBytes = false, pushDocumentSize = false) {\n    if(window.devicePixelRatio > 1) {\n      boxWidth *= 2;\n      boxHeight *= 2;\n    }\n    \n    /*\n    s\tbox\t100x100\n    m\tbox\t320x320\n    x\tbox\t800x800\n    y\tbox\t1280x1280\n    w\tbox\t2560x2560\n    a\tcrop\t160x160\n    b\tcrop\t320x320\n    c\tcrop\t640x640\n    d\tcrop\t1280x1280 */\n\n    let bestPhotoSize: PhotoSize = {_: 'photoSizeEmpty', type: ''};\n    let sizes = (photo as MyPhoto).sizes || (photo as MyDocument).thumbs as PhotoSize[];\n    if(pushDocumentSize && sizes && photo._ === 'document') {\n      sizes = sizes.concat({\n        _: 'photoSize', \n        w: (photo as MyDocument).w, \n        h: (photo as MyDocument).h, \n        size: (photo as MyDocument).size, \n        type: undefined\n      });\n    }\n\n    if(sizes?.length) {\n      for(let i = 0, length = sizes.length; i < length; ++i) {\n        const photoSize = sizes[i];\n        if(!('w' in photoSize) && !('h' in photoSize)) continue;\n  \n        bestPhotoSize = photoSize;\n  \n        const size = calcImageInBox(photoSize.w, photoSize.h, boxWidth, boxHeight);\n        if(size.width >= boxWidth || size.height >= boxHeight) {\n          break;\n        }\n      }\n\n      if(useBytes && bestPhotoSize._ === 'photoSizeEmpty' && sizes[0]._ === 'photoStrippedSize') {\n        bestPhotoSize = sizes[0];\n      }\n    }\n    \n    return bestPhotoSize;\n  }\n  \n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = appUsersManager.getUserInput(userId);\n    return apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n      \n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  public getPreviewURLFromBytes(bytes: Uint8Array | number[], isSticker = false) {\n    let arr: Uint8Array;\n    if(!isSticker) {\n      arr = new Uint8Array(AppPhotosManager.jpegHeader.concat(Array.from(bytes.slice(3)), AppPhotosManager.jpegTail));\n      arr[164] = bytes[1];\n      arr[166] = bytes[2];\n    } else {\n      arr = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes);\n    }\n\n    let mimeType: string;\n    if(isSticker) {\n      mimeType = IS_SAFARI ? 'image/png' : 'image/webp';\n    } else {\n      mimeType = 'image/jpeg';\n    }\n\n    const blob = new Blob([arr], {type: mimeType});\n    return URL.createObjectURL(blob);\n  }\n\n  /**\n   * https://core.telegram.org/api/files#vector-thumbnails\n   */\n  public getPathFromPhotoPathSize(size: PhotoSize.photoPathSize) {\n    const bytes = size.bytes;\n    const lookup = \"AACAAAAHAAALMAAAQASTAVAAAZaacaaaahaaalmaaaqastava.az0123456789-,\";\n\n    let path = 'M';\n    for(let i = 0, length = bytes.length; i < length; ++i) {\n      const num = bytes[i];\n\n      if(num >= (128 + 64)) {\n        path += lookup[num - 128 - 64];\n      } else {\n        if(num >= 128) {\n          path += ',';\n        } else if(num >= 64) {\n          path += '-'; \n        }\n        path += '' + (num & 63);\n      }\n    }\n    path += 'z';\n\n    return path;\n  }\n\n  public getPreviewURLFromThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, isSticker = false) {\n    const cacheContext = appDownloadManager.getCacheContext(photo, thumb.type);\n    return cacheContext.url || (cacheContext.url = this.getPreviewURLFromBytes(thumb.bytes, isSticker));\n  }\n  \n  public getImageFromStrippedThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, useBlur: boolean) {\n    const url = this.getPreviewURLFromThumb(photo, thumb, false);\n\n    const image = new Image();\n    image.classList.add('thumbnail');\n\n    const loadPromise = (useBlur ? blur(url) : Promise.resolve(url)).then(url => {\n      return renderImageFromUrlPromise(image, url);\n    });\n    \n    return {image, loadPromise};\n  }\n  \n  public setAttachmentSize(\n    photo: MyPhoto | MyDocument, \n    element: HTMLElement | SVGForeignObjectElement, \n    boxWidth: number, \n    boxHeight: number, \n    noZoom = true, \n    message?: any,\n    pushDocumentSize?: boolean,\n    photoSize?: ReturnType<AppPhotosManager['choosePhotoSize']>\n  ) {\n    if(!photoSize) {\n      photoSize = this.choosePhotoSize(photo, boxWidth, boxHeight, undefined, pushDocumentSize);\n    }\n    //console.log('setAttachmentSize', photo, photo.sizes[0].bytes, div);\n    \n    let size: MediaSize;\n    const isDocument = photo._ === 'document';\n    if(isDocument) {\n      size = makeMediaSize((photo as MyDocument).w || (photoSize as PhotoSize.photoSize).w || 512, (photo as MyDocument).h || (photoSize as PhotoSize.photoSize).h || 512);\n    } else {\n      size = makeMediaSize((photoSize as PhotoSize.photoSize).w || 100, (photoSize as PhotoSize.photoSize).h || 100);\n    }\n\n    let boxSize = makeMediaSize(boxWidth, boxHeight);\n\n    boxSize = size = size.aspect(boxSize, noZoom);\n\n    let isFit = true;\n\n    if(!isDocument || ['video', 'gif'].includes((photo as MyDocument).type)) {\n      if(boxSize.width < 200 && boxSize.height < 200) { // make at least one side this big\n        boxSize = size = size.aspectCovered(makeMediaSize(200, 200));\n      }\n  \n      if(message && \n        (message.message || \n          message.reply_to_mid || \n          message.media.webpage || \n          (message.replies && message.replies.pFlags.comments && message.replies.channel_id !== 777)\n        )\n      ) { // make sure that bubble block is human-readable\n        if(boxSize.width < 320) {\n          boxSize = makeMediaSize(320, boxSize.height);\n          isFit = false;\n        }\n      }\n  \n      if(isFit && boxSize.width < 120 && message) { // if image is too narrow\n        boxSize = makeMediaSize(120, boxSize.height);\n        isFit = false;\n      }\n    }\n\n    // if(element instanceof SVGForeignObjectElement) {\n    //   element.setAttributeNS(null, 'width', '' + w);\n    //   element.setAttributeNS(null, 'height', '' + h);\n\n    //   //console.log('set dimensions to svg element:', element, w, h);\n    // } else {\n      element.style.width = boxSize.width + 'px';\n      element.style.height = boxSize.height + 'px';\n    // }\n    \n    return {photoSize, size, isFit};\n  }\n\n  public getStrippedThumbIfNeeded(photo: MyPhoto | MyDocument, cacheContext: ThumbCache, useBlur: boolean, ignoreCache = false): ReturnType<AppPhotosManager['getImageFromStrippedThumb']> {\n    if(!cacheContext.downloaded || (['video', 'gif'] as MyDocument['type'][]).includes((photo as MyDocument).type) || ignoreCache) {\n      if(photo._ === 'document' && cacheContext.downloaded && !ignoreCache) {\n        return null;\n      }\n\n      const sizes = (photo as MyPhoto).sizes || (photo as MyDocument).thumbs;\n      const thumb = sizes?.length ? sizes.find(size => size._ === 'photoStrippedSize') : null;\n      if(thumb && ('bytes' in thumb)) {\n        return this.getImageFromStrippedThumb(photo, thumb as any, useBlur);\n      }\n    }\n\n    return null;\n  }\n  \n  public getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\n    const isDocument = photo._ === 'document';\n\n    if(!photoSize || photoSize._ === 'photoSizeEmpty') {\n      //console.error('no photoSize by photo:', photo);\n      throw new Error('photoSizeEmpty!');\n    }\n    \n    // maybe it's a thumb\n    const isPhoto = (photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference;\n    const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\n      _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\n      id: photo.id,\n      access_hash: photo.access_hash,\n      file_reference: photo.file_reference,\n      thumb_size: photoSize.type\n    };\n\n    return {\n      dcId: photo.dc_id, \n      location, \n      size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined, \n      queueId, \n      onlyCache\n    };\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n  \n  public preloadPhoto(photoId: MyPhoto | MyDocument | string, photoSize?: PhotoSize, queueId?: number, onlyCache?: boolean): CancellablePromise<Blob> {\n    const photo = this.getPhoto(photoId);\n\n    // @ts-ignore\n    if(!photo || photo._ === 'photoEmpty') {\n      throw new Error('preloadPhoto photoEmpty!');\n    }\n\n    if(!photoSize) {\n      const fullWidth = windowSize.width;\n      const fullHeight = windowSize.height;\n      \n      photoSize = this.choosePhotoSize(photo, fullWidth, fullHeight);\n    }\n\n    const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n    if(cacheContext.downloaded >= ('size' in photoSize ? photoSize.size : 0) && cacheContext.url) {\n      return Promise.resolve() as any;\n    }\n    \n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize, queueId, onlyCache);\n    const fileName = getFileNameByLocation(downloadOptions.location);\n\n    let download = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    download = appDownloadManager.download(downloadOptions);\n    download.then(blob => {\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext.downloaded = blob.size;\n        cacheContext.url = url;\n\n        //console.log('wrote photo:', photo, photoSize, cacheContext, blob);\n      }\n\n      return blob;\n    }).catch(() => {});\n\n    return download;\n  }\n  \n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n\n  public getInput(photo: MyPhoto): InputPhoto.inputPhoto {\n    return {\n      _: 'inputPhoto',\n      id: photo.id,\n      access_hash: photo.access_hash,\n      file_reference: photo.file_reference\n    };\n  }\n\n  public getMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n    return {\n      _: 'inputMediaPhoto',\n      id: this.getInput(photo),\n      ttl_seconds: 0\n    };\n  }\n\n  public savePhotoFile(photo: MyPhoto | MyDocument, queueId?: number) {\n    const fullPhotoSize = this.choosePhotoSize(photo, 0xFFFF, 0xFFFF);\n    if(!(fullPhotoSize._ === 'photoSize' || fullPhotoSize._ === 'photoSizeProgressive')) {\n      return;\n    }\n\n    const downloadOptions = this.getPhotoDownloadOptions(photo, fullPhotoSize, queueId);\n    downloadOptions.fileName = 'photo' + photo.id + '.jpg';\n    appDownloadManager.downloadToDisc(downloadOptions, downloadOptions.fileName);\n  }\n}\n\nconst appPhotosManager = new AppPhotosManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appPhotosManager = appPhotosManager);\nexport default appPhotosManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  const length = bytes.length;\r\n  const arr: string[] = new Array(length);\r\n  for(let i = 0; i < length; ++i) {\r\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  const bytes = new Uint8Array(Math.ceil(len / 2));\r\n  let start = 0;\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65;\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes = new Uint8Array(len);\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\n/* export function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n} */\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if(bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\n/* export function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n} */\r\n\r\nexport function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\r\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o = new Uint8Array(input.byteLength);\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o[i] = ((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: Parameters<typeof convertToUint8Array>[0]) {\r\n  const bytes = convertToUint8Array(input);\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered } from '../../layer';\nimport { Modify } from '../../types';\nimport apiManager from '../mtproto/mtprotoworker';\nimport rootScope from '../rootScope';\nimport appDocsManager, { MyDocument } from './appDocsManager';\nimport AppStorage from '../storage';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { forEachReverse } from '../../helpers/array';\nimport DATABASE_STATE from '../../config/databases/state';\nimport { readBlobAsText } from '../../helpers/blob';\nimport lottieLoader from '../rlottie/lottieLoader';\nimport mediaSizes from '../../helpers/mediaSizes';\nimport { getEmojiToneIndex } from '../../vendor/emoji';\nimport RichTextProcessor from '../richtextprocessor';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\n\nconst CACHE_TIME = 3600e3;\n\nconst EMOJI_SET_LOCAL_ID = 'emoji';\nconst EMOJI_ANIMATIONS_SET_LOCAL_ID = 'emojiAnimations';\nconst LOCAL_IDS_SET = new Set([\n  EMOJI_SET_LOCAL_ID,\n  EMOJI_ANIMATIONS_SET_LOCAL_ID\n]);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<Document[]>};\n\n  private greetingStickers: Document.document[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n  \n  constructor() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};    \n    this.sounds = {};\n\n    this.getAnimatedEmojiStickerSet();\n\n    rootScope.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      }\n    });\n\n    this.getGreetingStickersTimeout = window.setTimeout(() => {\n      this.getGreetingStickersTimeout = undefined;\n      this.getGreetingSticker(true);\n    }, 5000);\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then(docs => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n    \n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      appDocsManager.downloadDoc(this.greetingStickers[0]); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  public saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  public async getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> {\n    const id = set.id;\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    return this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        // const perf = performance.now();\n        const cachedSet = await this.storage.get(id);\n        if(cachedSet && cachedSet.documents?.length && ((Date.now() - cachedSet.refreshTime) < CACHE_TIME || params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n          delete this.getStickerSetPromises[id];\n          // console.log('get sticker set from cache time', id, performance.now() - perf);\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n  \n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n  \n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n      \n      delete this.getStickerSetPromises[id];\n    });\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getStickerSet({id: EMOJI_SET_LOCAL_ID}, {saveById: true}),\n      this.getStickerSet({id: EMOJI_ANIMATIONS_SET_LOCAL_ID}, {saveById: true}),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    return this.getAnimatedEmojiSoundsPromise = apiManager.getAppConfig(overwrite).then(appConfig => {\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n        \n        const doc = appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: rootScope.config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg',\n          size: 1\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n  }\n\n  public async getRecentStickers(): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n        this.saveStickers(res.stickers);\n        return res;\n      }\n    });\n\n    return res;\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const stickerSet = this.storage.getFromCache(isAnimation ? EMOJI_ANIMATIONS_SET_LOCAL_ID : EMOJI_SET_LOCAL_ID);\n    if(!stickerSet || !stickerSet.documents) return undefined;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find(p => p.emoticon === emoji);\n    return pack ? appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string, width?: number, height?: number) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      const doc = this.getAnimatedEmojiSticker(emoji);\n      if(doc) {\n        return appDocsManager.downloadDoc(doc)\n        .then(readBlobAsText)\n        .then(async(json) => {\n          const mediaSize = mediaSizes.active.emojiSticker;\n          const toneIndex = getEmojiToneIndex(emoji);\n          const animation = await lottieLoader.loadAnimationWorker({\n            container: undefined,\n            animationData: json,\n            width: width ?? mediaSize.width,\n            height: height ?? mediaSize.height,\n            name: 'doc' + doc.id,\n            autoplay: false,\n            loop: false\n          }, 'none', toneIndex);\n\n          animation.addEventListener('firstFrame', () => {\n            appDocsManager.saveLottiePreview(doc, animation.canvas, toneIndex);\n            animation.remove();\n          }, {once: true});\n        });\n      }\n    });\n    \n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]);\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      const doc = this.getAnimatedEmojiSticker(emoji, true);\n      if(doc) {\n        const soundDoc = this.getAnimatedEmojiSoundDocument(emoji);\n        return Promise.all([\n          appDocsManager.downloadDoc(doc),\n          soundDoc ? appDocsManager.downloadDoc(soundDoc) : undefined\n        ]);\n      }\n    });\n  }\n  \n  public saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    //console.log('stickers save set', res);w\n\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[]\n    };\n    \n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    this.saveStickers(res.documents);\n    \n    //console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet) {\n    const thumb = stickerSet.thumbs.find(thumb => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(set.id === EMOJI_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmoji'\n      };\n    } else if(set.id === EMOJI_ANIMATIONS_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmojiAnimations'\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n        res.sets.forEach(covered => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    if(set.installed_date) {\n      const res = await apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets', \n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        res.sets.forEach(covered => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(let id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find(c => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  public getAllStickers() {\n    return apiManager.invokeApiHashable({method: 'messages.getAllStickers'});\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then(allStickers => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map(set => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = RichTextProcessor.fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      apiManager.invokeApiHashable({\n        method: 'messages.getStickers', \n        params: {\n          emoticon\n        }\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map(sticker => appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      //console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = RichTextProcessor.fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach(s => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = RichTextProcessor.parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach(s => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = RichTextProcessor.fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter(doc => !doc.animated) */;\n\n      return stickers;\n    });\n  }\n\n  public pushRecentSticker(doc: MyDocument) {\n    const docEmoticon = RichTextProcessor.fixEmoji(doc.stickerEmojiRaw);\n    for(const emoticon in this.getStickersByEmoticonsPromises) {\n      const promise = this.getStickersByEmoticonsPromises[emoticon];\n      promise.then(stickers => {\n        const _doc = stickers.findAndSplice(_doc => _doc.id === doc.id);\n        if(_doc) {\n          stickers.unshift(_doc);\n        } else if(emoticon.includes(docEmoticon)) {\n          stickers.unshift(doc);\n        }\n      });\n    }\n  }\n}\n\nconst appStickersManager = new AppStickersManager();\nMOUNT_CLASS_TO.appStickersManager = appStickersManager;\nexport default appStickersManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { tsNow } from \"../../helpers/date\";\nimport { numberThousandSplitter } from \"../../helpers/number\";\nimport { ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull } from \"../../layer\";\nimport { LangPackKey, i18n } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\nimport appNotificationsManager from \"./appNotificationsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager, { MyTopPeer, User } from \"./appUsersManager\";\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager {\n  //private botInfos: any = {};\n  public usersFull: {[id: UserId]: UserFull.userFull} = {};\n  public chatsFull: {[id: ChatId]: ChatFull} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = fullChat.chat_photo?._ !== 'photoEmpty';\n        if(hasChatPhoto !== hasFullChatPhoto || (photo as ChatPhoto.chatPhoto).photo_id !== fullChat.chat_photo?.id) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    // * genius\n    rootScope.addEventListener('chat_full_update', (chatId) => {\n      rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n    \n    // * genius\n    rootScope.addEventListener('user_full_update', (userId) => {\n      rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true): Promise<UserFull> {\n    if(this.usersFull[id] && !override) {\n      return Promise.resolve(this.usersFull[id]);\n    }\n\n    return apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser', \n      params: {\n        id: appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        appChatsManager.saveApiChats(usersUserFull.chats, true);\n        appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(userFull.about !== undefined) {\n          userFull.rAbout = RichTextProcessor.wrapRichText(userFull.about, {noLinebreaks: true});\n        }\n\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        //appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull | UserFull.userFull> {\n    if(appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public getFullPhoto(peerId: PeerId) {\n    return this.getProfileByPeerId(peerId).then(profile => {\n      switch(profile._) {\n        case 'userFull':\n          return profile.profile_photo;\n        case 'channelFull':\n        case 'chatFull':\n          return profile.chat_photo;\n      }\n    });\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull> {\n    if(appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return Promise.resolve(fullChat);\n      }\n    }\n    \n    return apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat', \n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        appChatsManager.saveApiChats(result.chats, true);\n        appUsersManager.saveApiUsers(result.users);\n        const fullChat = result.full_chat as ChatFull.chatFull;\n        const peerId = id.toPeerId(true);\n        if(fullChat && fullChat.chat_photo && fullChat.chat_photo.id) {\n          fullChat.chat_photo = appPhotosManager.savePhoto(fullChat.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        //appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChat.notify_settings\n        });\n        \n        this.chatsFull[id] = fullChat;\n        rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChat;\n      }\n    });\n  }\n\n  public getChatInviteLink(id: ChatId, force?: boolean) {\n    return this.getChatFull(id).then((chatFull) => {\n      if(!force &&\n        chatFull.exported_invite &&\n        chatFull.exported_invite._ == 'chatInviteExported') {\n        return chatFull.exported_invite.link;\n      }\n      \n      return apiManager.invokeApi('messages.exportChatInvite', {\n        peer: appPeersManager.getInputPeerById(id.toPeerId(true))\n      }).then((exportedInvite) => {\n        if(this.chatsFull[id] !== undefined) {\n          this.chatsFull[id].exported_invite = exportedInvite;\n        }\n\n        return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n      });\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n            chat.pFlags.kicked ||\n            chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n          )) {\n        return Promise.reject();\n      }\n    }\n\n    return apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then(result => {\n      appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex(p => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: appChatsManager.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n    }).then(channelParticipant => {\n      appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true): Promise<ChatFull.channelFull> {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return Promise.resolve(this.chatsFull[id] as ChatFull.channelFull);\n    }\n\n    return apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel', \n      params: {\n        channel: appChatsManager.getChannelInput(id)\n      }, \n      processResult: (result) => {\n        const peerId = id.toPeerId(true);\n        appChatsManager.saveApiChats(result.chats, true);\n        appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          //appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      }, \n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            let channel = appChatsManager.getChat(id);\n            channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n            apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              } as Update.updateChannel],\n              chats: [channel],\n              users: []\n            });\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      \n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach(peer => {\n        index.indexObject(peer.id, appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: appMessagesIdsManager.getServerMessageId(threadId)\n      }, 50, 0).then(cP => {\n        return cP.participants.map(p => appChatsManager.getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = (this.getChatFull(chatId) as Promise<ChatFull.chatFull>).then(chatFull => {\n        return (chatFull.participants as ChatParticipants.chatParticipants).participants.map(p => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]), \n      promise\n    ]).then(results => {\n      const peers = results[0].concat(results[1].map(peerId => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  public invalidateChannelParticipants(id: ChatId) {\n    apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) delete this.usersFull[peerId.toUserId()];\n    else delete this.chatsFull[peerId.toChatId()];\n\n    rootScope.dispatchEvent('peer_full_update', peerId);\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name: string, last_name: string, about: string) {\n    return apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then(user => {\n      appUsersManager.saveApiUser(user);\n      \n      return this.getProfile(rootScope.myId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = rootScope.myId;\n      appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map(photoId => {\n        const photo = appPhotosManager.getPhoto(photoId);\n        return appPhotosManager.getInput(photo);\n      })\n    }).then((deletedList) => {\n      \n    });\n  }\n\n  public getChatMembersString(chatId: ChatId) {\n    const chat: Chat = appChatsManager.getChat(chatId);\n    if(chat._ === 'chatForbidden') {\n      return i18n('YouWereKicked');\n    }\n\n    const chatFull = this.chatsFull[chatId];\n    let count: number;\n    if(chatFull) {\n      if(chatFull._ === 'channelFull') {\n        count = chatFull.participants_count;\n      } else {\n        count = (chatFull.participants as ChatParticipants.chatParticipants).participants?.length;\n      }\n    } else {\n      count = (chat as Chat.chat).participants_count || (chat as any).participants?.participants.length;\n    }\n\n    const isChannel = appChatsManager.isBroadcast(chatId);\n    count = count || 1;\n\n    let key: LangPackKey = isChannel ? 'Peer.Status.Subscribers' : 'Peer.Status.Member';\n    return i18n(key, [numberThousandSplitter(count)]);\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n    \n    const chatInfo = await this.getChatFull(id);\n    if(appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ? \n      (update as Update.updateUserTyping).user_id.toPeerId() : \n      appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(rootScope.myId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n    \n    const peerId = appPeersManager.getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find(t => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      //typings.findAndSplice(t => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    //console.log('updateChatUserTyping', update, typings);\n    \n    typing.action = update.action;\n    \n    const hasUser = appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && appChatsManager.hasChat(update.chat_id) && !appChatsManager.isChannel(update.chat_id)) {\n          appProfileManager.getChatFull(update.chat_id).then(() => {\n            if(typing.timeout !== undefined && appUsersManager.hasUser(fromId)) {\n              rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n      \n      //return;\n    } else {\n      appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = window.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = appPeersManager.getPeerId(update.peer_id);\n    if(appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n\nconst appProfileManager = new AppProfileManager();\nMOUNT_CLASS_TO.appProfileManager = appProfileManager;\nexport default appProfileManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n//import apiManager from '../mtproto/apiManager';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport { Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates } from '../../layer';\nimport { logger, LogTypes } from '../logger';\nimport apiManager from '../mtproto/mtprotoworker';\nimport rootScope from '../rootScope';\n//import networkerFactory from '../mtproto/networkerFactory';\nimport appUsersManager from \"./appUsersManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from './appStateManager';\nimport serverTimeManager from '../mtproto/serverTimeManager';\nimport assumeType from '../../helpers/assumeType';\nimport noop from '../../helpers/noop';\nimport RichTextProcessor from '../richtextprocessor';\nimport App from '../../config/app';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nexport class ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n  \n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n  \n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n  \n    if(!goodPts) {\n      return false;\n    }\n  \n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n  \n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n  \n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start,\n      //ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n  \n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n  \n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n  \n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? rootScope.myId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id\n          ? (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true)\n          : ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || rootScope.myId);\n  \n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n  \n      case 'updatesCombined':\n      case 'updates':\n        appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        appChatsManager.saveApiChats(updateMessage.chats, options.override);\n  \n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n  \n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n  \n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    let wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n  \n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts, \n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date, \n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        appUsersManager.saveApiUsers(differenceResult.users);\n        appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n    \n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n          \n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + serverTimeManager.serverTimeOffset;\n        delete updatesState.seq;\n        \n        this.channelStates = {};\n        \n        this.log.warn('getDifference:', differenceResult._);\n        rootScope.dispatchEvent('state_cleared');\n      }\n  \n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n  \n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n  \n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    //this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = apiManager.invokeApi('updates.getChannelDifference', {\n      channel: appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n  \n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n  \n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n  \n      appUsersManager.saveApiUsers(differenceResult.users);\n      appChatsManager.saveApiChats(differenceResult.chats);\n  \n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n  \n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n  \n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n  \n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n  \n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n  \n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n  \n    // this.log.log('process', channelId, curState.pts, update)\n  \n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n  \n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n  \n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n  \n    let popPts: boolean;\n    let popSeq: boolean;\n  \n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: window.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n  \n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n  \n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n  \n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n  \n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: window.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n  \n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n  \n    this.saveUpdate(update);\n  \n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    //this.debug && this.log('saveUpdate', update);\n    rootScope.dispatchEvent(update._, update as any);\n  }\n  \n  public attach() {\n    if(this.attached) return;\n\n    //return;\n\n    this.log('attach');\n    \n    this.attached = true;\n\n    appStateManager.getState().then(({updates: state}) => {\n      const newVersion = appStateManager.newVersion/*  || '0.8.6' */;\n\n      //rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            //setTimeout(() => {\n              this.updatesState.syncLoading = null;\n              resolve();\n              //rootScope.broadcast('state_synchronized');\n            //}, 1000);\n        \n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        /* state.date = 1628623682;\n        state.pts = 2007500;\n        state.seq = 503; */\n\n        Object.assign(this.updatesState, state);\n        \n        this.log('will get difference', Object.assign({}, state));\n        \n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n        this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(() => {\n          fetch('changelogs/' + newVersion.split(' ')[0] + '.md')\n          .then(res => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n          .then(text => {\n            const pre = `**Telegram Web${App.suffix} was updated to version alpha ${newVersion}**\\n\\n`;\n\n            text = pre + text;\n\n            const entities: MessageEntity[] = [];\n            const message = RichTextProcessor.parseMarkdown(text, entities);\n\n            const update: Update.updateServiceNotification = {\n              _: 'updateServiceNotification',\n              entities,\n              message,\n              type: 'local',\n              pFlags: {},\n              inbox_date: Date.now() / 1000 | 0,\n              media: undefined\n            };\n            this.processLocalUpdate(update);\n          })\n          .catch(noop);\n        });\n      }\n    });\n  }\n}\n\nconst apiUpdatesManager = new ApiUpdatesManager();\nMOUNT_CLASS_TO.apiUpdatesManager = apiUpdatesManager;\nexport default apiUpdatesManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { FileURLType, getFileNameByLocation, getFileURL } from '../../helpers/fileName';\nimport { safeReplaceArrayInObject, defineNotNumerableProperties, isObject } from '../../helpers/object';\nimport { Document, InputFileLocation, InputMedia, PhotoSize } from '../../layer';\nimport referenceDatabase, { ReferenceContext } from '../mtproto/referenceDatabase';\nimport opusDecodeController from '../opusDecodeController';\nimport { RichTextProcessor } from '../richtextprocessor';\nimport appDownloadManager, { DownloadBlob } from './appDownloadManager';\nimport appPhotosManager from './appPhotosManager';\nimport blur from '../../helpers/blur';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { getFullDate } from '../../helpers/date';\nimport rootScope from '../rootScope';\nimport IS_WEBP_SUPPORTED from '../../environment/webpSupport';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nconst EXTENSION_MIME_TYPE_MAP = {\n  mov: 'video/quicktime',\n  gif: 'image/gif',\n  pdf: 'application/pdf',\n};\n\nexport class AppDocsManager {\n  private docs: {[docId: DocId]: MyDocument} = {};\n  private savingLottiePreview: {[docId: DocId]: true} = {};\n  public downloading: Map<DocId, DownloadBlob> = new Map();\n\n  constructor() {\n    apiManager.onServiceWorkerFail = this.onServiceWorkerFail;\n  }\n\n  public onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        delete cacheContext.url;\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(doc._ === 'documentEmpty') {\n      return undefined;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      referenceDatabase.saveContext(doc.file_reference, context);\n    }\n    \n    //console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name', \n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle', \n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw', \n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    doc.attributes.forEach(attribute => {\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = RichTextProcessor.wrapPlainText(attribute.file_name);\n          doc.fileName = RichTextProcessor.wrapEmojiText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.audioTitle = RichTextProcessor.wrapEmojiText(attribute.title);\n          doc.audioPerformer = RichTextProcessor.wrapEmojiText(attribute.performer);\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          //apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n            doc.stickerEmoji = RichTextProcessor.wrapRichText(doc.stickerEmojiRaw, {noLinks: true, noLinebreaks: true});\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    });\n    \n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      doc.file_name = doc.fileName = doc.type + '_' + getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n    }\n\n    if(apiManager.isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n        \n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        if(!cacheContext.url) {\n          cacheContext.url = this.getFileURL(doc);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n    \n    if(!doc.file_name) {\n      doc.file_name = doc.fileName = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n  \n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public getMediaInput(doc: MyDocument): InputMedia.inputMediaDocument {\n    return {\n      _: 'inputMediaDocument',\n      id: {\n        _: 'inputDocument',\n        id: doc.id,\n        access_hash: doc.access_hash,\n        file_reference: doc.file_reference\n      },\n      ttl_seconds: 0\n    };\n  }\n\n  public getInput(doc: MyDocument, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\n    return {\n      _: 'inputDocumentFileLocation',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference,\n      thumb_size: thumbSize\n    };\n  }\n\n  public getFileDownloadOptions(doc: MyDocument, thumb?: PhotoSize.photoSize, queueId?: number, onlyCache?: boolean) {\n    const inputFileLocation = this.getInput(doc, thumb?.type);\n\n    let mimeType: string;\n    if(thumb) {\n      mimeType = doc.sticker ? 'image/webp' : 'image/jpeg'/* doc.mime_type */;\n    } else {\n      mimeType = doc.mime_type || 'application/octet-stream';\n    }\n\n    return {\n      dcId: doc.dc_id, \n      location: inputFileLocation, \n      size: thumb ? thumb.size : doc.size, \n      mimeType,\n      fileName: doc.file_name,\n      queueId,\n      onlyCache\n    };\n  }\n\n  public getFileURL(doc: MyDocument, download = false, thumb?: PhotoSize.photoSize) {\n    let type: FileURLType;\n    if(download) {\n      type = 'download';\n    } else if(thumb) {\n      type = 'thumb';\n    } else if(doc.supportsStreaming) {\n      type = 'stream';\n    } else {\n      type = 'document';\n    }\n\n    return getFileURL(type, this.getFileDownloadOptions(doc, thumb));\n  }\n\n  public getThumbURL(doc: MyDocument, thumb: PhotoSize.photoSize | PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize) {\n    let promise: Promise<any> = Promise.resolve();\n\n    const cacheContext = appDownloadManager.getCacheContext(doc, thumb.type);\n    if(!cacheContext.url) {\n      if('bytes' in thumb) {\n        promise = blur(appPhotosManager.getPreviewURLFromBytes(thumb.bytes, !!doc.sticker)).then(url => {\n          cacheContext.url = url;\n        }) as any;\n      } else {\n        //return this.getFileURL(doc, false, thumb);\n        promise = appPhotosManager.preloadPhoto(doc, thumb) as any;\n      }\n    }\n\n    return {thumb, cacheContext, promise};\n  }\n\n  public getThumb(doc: MyDocument, tryNotToUseBytes = true) {\n    const thumb = appPhotosManager.choosePhotoSize(doc, 0, 0, !tryNotToUseBytes);\n    if(thumb._ === 'photoSizeEmpty') return null;\n    return this.getThumbURL(doc, thumb as any);\n  }\n\n  public getInputFileName(doc: MyDocument, thumbSize?: string) {\n    return getFileNameByLocation(this.getInput(doc, thumbSize), {fileName: doc.file_name});\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean): DownloadBlob {\n    const fileName = this.getInputFileName(doc);\n\n    let download: DownloadBlob = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    const downloadOptions = this.getFileDownloadOptions(doc, undefined, queueId, onlyCache);\n    download = appDownloadManager.download(downloadOptions);\n    this.downloading.set(doc.id, download);\n    rootScope.dispatchEvent('download_start', doc.id);\n\n    const cacheContext = appDownloadManager.getCacheContext(doc);\n    const originalPromise = download;\n    originalPromise.then((blob) => {\n      cacheContext.url = URL.createObjectURL(blob);\n      cacheContext.downloaded = blob.size;\n    }, () => {}).finally(() => {\n      this.downloading.delete(doc.id);\n    });\n    \n    if(doc.type === 'voice' && !opusDecodeController.isPlaySupported()) {\n      download = originalPromise.then(async(blob) => {\n        const reader = new FileReader();\n  \n        await new Promise<void>((resolve, reject) => {\n          reader.onloadend = (e) => {\n            const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n            //console.log('sending uint8 to decoder:', uint8);\n            opusDecodeController.decode(uint8).then(result => {\n              cacheContext.url = result.url;\n              resolve();\n            }, (err) => {\n              delete cacheContext.downloaded;\n              reject(err);\n            });\n          };\n    \n          reader.readAsArrayBuffer(blob);\n        });\n  \n        return blob;\n      });\n    }\n\n    download.then(() => {\n      rootScope.dispatchEvent('document_downloaded', doc);\n    });\n\n    return download;\n  }\n\n  public saveLottiePreview(doc: MyDocument, canvas: HTMLCanvasElement, toneIndex: number) {\n    const key = doc.id + '-' + toneIndex;\n    if(this.savingLottiePreview[key]/*  || true */) return;\n\n    if(!doc.stickerCachedThumbs) {\n      defineNotNumerableProperties(doc, ['stickerCachedThumbs']);\n      doc.stickerCachedThumbs = {};\n    }\n\n    const thumb = doc.stickerCachedThumbs[toneIndex];\n    if(thumb && thumb.w >= canvas.width && thumb.h >= canvas.height) {\n      return;\n    }\n\n    /* if(doc.thumbs.find(t => t._ === 'photoStrippedSize') \n      || (doc.stickerCachedThumb || (doc.stickerSavedThumbWidth >= canvas.width && doc.stickerSavedThumbHeight >= canvas.height))) {\n      return;\n    } */\n\n    this.savingLottiePreview[key] = true;\n    canvas.toBlob((blob) => {\n      //console.log('got lottie preview', doc, blob, URL.createObjectURL(blob));\n\n      const thumb = {\n        url: URL.createObjectURL(blob),\n        w: canvas.width,\n        h: canvas.height\n      };\n\n      doc.stickerCachedThumbs[toneIndex] = thumb;\n\n      delete this.savingLottiePreview[key];\n      \n      /* const reader = new FileReader();\n      reader.onloadend = (e) => {\n        const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n        const thumb: PhotoSize.photoStrippedSize = {\n          _: 'photoStrippedSize',\n          bytes: uint8,\n          type: 'i'\n        };\n\n        doc.stickerSavedThumbWidth = canvas.width;\n        doc.stickerSavedThumbHeight = canvas.width;\n\n        defineNotNumerableProperties(thumb, ['url']);\n        thumb.url = URL.createObjectURL(blob);\n        doc.thumbs.findAndSplice(t => t._ === thumb._);\n        doc.thumbs.unshift(thumb);\n\n        if(!webpWorkerController.isWebpSupported()) {\n          doc.pFlags.stickerThumbConverted = true;\n        }\n\n        delete this.savingLottiePreview[doc.id];\n      };\n      reader.readAsArrayBuffer(blob); */\n    });\n  }\n\n  public saveDocFile(doc: MyDocument, queueId?: number) {\n    /* const options = this.getFileDownloadOptions(doc, undefined, queueId);\n    return appDownloadManager.downloadToDisc(options, doc.file_name); */\n    const promise = this.downloadDoc(doc, queueId);\n    promise.then(() => {\n      const cacheContext = appDownloadManager.getCacheContext(doc);\n      appDownloadManager.createDownloadAnchor(cacheContext.url, doc.file_name);\n    });\n    return promise;\n  }\n}\n\nconst appDocsManager = new AppDocsManager();\nMOUNT_CLASS_TO.appDocsManager = appDocsManager;\nexport default appDocsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\n// import { tsNow } from '../../helpers/date';\r\nimport sessionStorage from '../sessionStorage';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class ServerTimeManager {\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  public serverTimeOffset: number; // in seconds\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  constructor() {\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n    \r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    this.serverTimeOffset = 0;\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.serverTimeOffset = to;\r\n        // this.timeParams.serverTimeOffset = to;\r\n      }\r\n    });\r\n\r\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\r\n      this.serverTimeOffset = task.payload;\r\n    });\r\n  }\r\n}\r\n\r\nconst serverTimeManager = new ServerTimeManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\r\nexport default serverTimeManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\ntype TargetType = HTMLElement;\r\nexport type OnVisibilityChange = (target: TargetType, visible: boolean) => void;\r\n\r\nexport default class VisibilityIntersector {\r\n  private observer: IntersectionObserver;\r\n  private items: Map<TargetType, boolean> = new Map();\r\n  private locked = false;\r\n\r\n  constructor(onVisibilityChange: OnVisibilityChange) {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(this.locked) {\r\n        return;\r\n      }\r\n\r\n      const changed: {target: TargetType, visible: boolean}[] = [];\r\n\r\n      entries.forEach(entry => {\r\n        const target = entry.target as TargetType;\r\n\r\n        if(this.items.get(target) === entry.isIntersecting) {\r\n          return;\r\n        } else {\r\n          this.items.set(target, entry.isIntersecting);\r\n        }\r\n\r\n        /* if(entry.isIntersecting) {\r\n          console.log('ooo', entry);\r\n        } */\r\n\r\n        /* if(this.locked) {\r\n          return;\r\n        } */\r\n\r\n        changed[entry.isIntersecting ? 'unshift' : 'push']({target, visible: entry.isIntersecting});\r\n\r\n        //onVisibilityChange(target, entry.isIntersecting);\r\n      });\r\n\r\n      changed.forEach(smth => {\r\n        onVisibilityChange(smth.target, smth.visible);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getVisible() {\r\n    const items: TargetType[] = [];\r\n    this.items.forEach((value, key) => {\r\n      if(value) {\r\n        items.push(key);\r\n      }\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  public clearVisible() {\r\n    const visible = this.getVisible();\r\n    for(const target of visible) {\r\n      this.items.set(target, false);\r\n    }\r\n  }\r\n\r\n  public isVisible(target: TargetType) {\r\n    return this.items.get(target);\r\n  }\r\n\r\n  public disconnect() {\r\n    this.observer.disconnect();\r\n    this.items.clear();\r\n  }\r\n\r\n  public refresh() {\r\n    this.observer.disconnect();\r\n\r\n    //window.requestAnimationFrame(() => {\r\n      const targets = [...this.items.keys()];\r\n      for(const target of targets) {\r\n        //this.items.set(target, false);\r\n        this.observer.observe(target);\r\n      }\r\n    //});\r\n  }\r\n\r\n  public refreshVisible() {\r\n    const visible = this.getVisible();\r\n    for(const target of visible) {\r\n      this.observer.unobserve(target);\r\n    }\r\n\r\n    for(const target of visible) {\r\n      this.observer.observe(target);\r\n    }\r\n  }\r\n\r\n  public observe(target: TargetType) {\r\n    this.items.set(target, false);\r\n    this.observer.observe(target);\r\n  }\r\n\r\n  public unobserve(target: TargetType) {\r\n    this.observer.unobserve(target);\r\n    this.items.delete(target);\r\n  }\r\n\r\n  public unlock() {\r\n    this.locked = false;\r\n  }\r\n\r\n  public unlockAndRefresh() {\r\n    this.unlock();\r\n    this.refresh();\r\n  }\r\n\r\n  public lock() {\r\n    this.locked = true;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport VisibilityIntersector, { OnVisibilityChange } from \"./visibilityIntersector\";\r\nimport { findAndSpliceAll, indexOfAndSplice } from \"../helpers/array\";\r\nimport throttle from \"../helpers/schedulers/throttle\";\r\n\r\ntype LazyLoadElementBase = {\r\n  load: () => Promise<any>\r\n};\r\n\r\ntype LazyLoadElement = Omit<LazyLoadElementBase, 'load'> & {\r\n  load: (target?: HTMLElement) => Promise<any>,\r\n  div: HTMLElement\r\n  wasSeen?: boolean,\r\n};\r\n\r\nconst PARALLEL_LIMIT = 8;\r\n\r\nexport class LazyLoadQueueBase {\r\n  public queueId = 0;\r\n  protected queue: Array<LazyLoadElementBase> = [];\r\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\r\n\r\n  protected lockPromise: Promise<void> = null;\r\n  protected unlockResolve: () => void = null;\r\n\r\n  protected log = logger('LL', LogTypes.Error);\r\n  protected processQueue: () => void;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    this.processQueue = throttle(() => this._processQueue(), 20, false);\r\n  }\r\n\r\n  public clear() {\r\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\r\n\r\n    this.queue.length = 0;\r\n    // unreachable code\r\n    /* for(let item of this.inProcess) { \r\n      this.lazyLoadMedia.push(item);\r\n    } */\r\n  }\r\n\r\n  public lock() {\r\n    if(this.lockPromise) return;\r\n\r\n    //const perf = performance.now();\r\n    this.lockPromise = new Promise((resolve, reject) => {\r\n      this.unlockResolve = resolve;\r\n    });\r\n\r\n    /* if(DEBUG) {\r\n      this.lockPromise.then(() => {\r\n        this.log('was locked for:', performance.now() - perf);\r\n      });\r\n    } */\r\n  }\r\n\r\n  public unlock() {\r\n    if(!this.unlockResolve) return;\r\n\r\n    this.unlockResolve();\r\n    this.unlockResolve = this.lockPromise = null;\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected async processItem(item: LazyLoadElementBase) {\r\n    if(this.lockPromise) {\r\n      return;\r\n    }\r\n\r\n    this.inProcess.add(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('will load media', this.lockPromise, item);\r\n    } */\r\n\r\n    try {\r\n      //await new Promise((resolve) => setTimeout(resolve, 2e3));\r\n      //await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\r\n      //await item.load(item.div);\r\n      await this.loadItem(item);\r\n    } catch(err) {\r\n      if(!['NO_ENTRY_FOUND', 'STORAGE_OFFLINE'].includes(err as string)) {\r\n        this.log.error('loadMediaQueue error:', err/* , item */);\r\n      }\r\n    }\r\n\r\n    this.inProcess.delete(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('loaded media', item);\r\n    } */\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElementBase) {\r\n    return item.load();\r\n  }\r\n\r\n  protected getItem() {\r\n    return this.queue.shift();\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\r\n    this.queue[method](el);\r\n    this.processQueue();\r\n  }\r\n\r\n  protected _processQueue(item?: LazyLoadElementBase) {\r\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\r\n\r\n    //console.log('_processQueue start');\r\n    let added = 0;\r\n    do {\r\n      if(item) {\r\n        indexOfAndSplice(this.queue, item);\r\n      } else {\r\n        item = this.getItem();\r\n      }\r\n  \r\n      if(item) {\r\n        this.processItem(item);\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      item = null;\r\n      ++added;\r\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\r\n    //console.log('_processQueue end, added', added, this.queue.length);\r\n  }\r\n\r\n  public push(el: LazyLoadElementBase) {\r\n    this.addElement('push', el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElementBase) {\r\n    this.addElement('unshift', el);\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueIntersector extends LazyLoadQueueBase {\r\n  protected queue: Array<LazyLoadElement> = [];\r\n  protected inProcess: Set<LazyLoadElement> = new Set();\r\n\r\n  public intersector: VisibilityIntersector;\r\n  protected intersectorTimeout: number;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    super(parallelLimit);\r\n  }\r\n\r\n  public lock() {\r\n    super.lock();\r\n    this.intersector.lock();\r\n  }\r\n\r\n  public unlock() {\r\n    super.unlock();\r\n    this.intersector.unlock();\r\n  }\r\n\r\n  public unlockAndRefresh() {\r\n    super.unlock();\r\n    this.intersector.unlockAndRefresh();\r\n  }\r\n\r\n  public clear() {\r\n    super.clear();\r\n    this.intersector.disconnect();\r\n  }\r\n\r\n  public refresh() {\r\n    this.intersector.refresh();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElement) {\r\n    return item.load(item.div);\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\r\n    const item = this.queue.find(i => i.div === el.div && i.load === el.load);\r\n    if(item) {\r\n      return false;\r\n    } else {\r\n      for(const item of this.inProcess) {\r\n        if(item.div === el.div && item.load === el.load) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.queue[method](el);\r\n    return true;\r\n  }\r\n\r\n  protected setProcessQueueTimeout() {\r\n    if(!this.intersectorTimeout) {\r\n      this.intersectorTimeout = window.setTimeout(() => {\r\n        this.intersectorTimeout = 0;\r\n        this.processQueue();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  public push(el: LazyLoadElement) {\r\n    super.push(el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElement) {\r\n    super.unshift(el);\r\n  }\r\n\r\n  public unobserve(el: HTMLElement) {\r\n    findAndSpliceAll(this.queue, (i) => i.div === el);\r\n\r\n    this.intersector.unobserve(el);\r\n  }\r\n}\r\n\r\nexport default class LazyLoadQueue extends LazyLoadQueueIntersector {\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector(this.onVisibilityChange);\r\n  }\r\n\r\n  private onVisibilityChange = (target: HTMLElement, visible: boolean) => {\r\n    if(visible) {\r\n      /* if(DEBUG) {\r\n        this.log('isIntersecting', target);\r\n      } */\r\n\r\n      // need for set element first if scrolled\r\n      findAndSpliceAll(this.queue, (i) => i.div === target).forEach(item => {\r\n        item.wasSeen = true;\r\n        this.queue.unshift(item);\r\n        //this.processQueue(item);\r\n      });\r\n\r\n      this.setProcessQueueTimeout();\r\n    }\r\n  };\r\n\r\n  protected getItem() {\r\n    return this.queue.findAndSplice(item => item.wasSeen);\r\n  }\r\n\r\n  public async processItem(item: LazyLoadElement) {\r\n    await super.processItem(item);\r\n    this.intersector.unobserve(item.div);\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\r\n    const inserted = super.addElement(method, el);\r\n\r\n    if(!inserted) return false;\r\n\r\n    this.intersector.observe(el.div);\r\n    /* if(el.wasSeen) {\r\n      this.processQueue(el);\r\n    } else  */if(!el.hasOwnProperty('wasSeen')) {\r\n      el.wasSeen = false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueRepeat extends LazyLoadQueueIntersector {\r\n  private _queue: Map<HTMLElement, LazyLoadElement> = new Map();\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector((target, visible) => {\r\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\r\n      if(visible) {\r\n        const items = spliced.length ? spliced : [this._queue.get(target)];\r\n        items.forEach(item => {\r\n          this.queue.unshift(item || this._queue.get(target));\r\n        });\r\n      }\r\n  \r\n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\r\n      this.setProcessQueueTimeout();\r\n    });\r\n  }\r\n\r\n  public clear() {\r\n    super.clear();\r\n    this._queue.clear();\r\n  }\r\n\r\n  /* public async processItem(item: LazyLoadElement) {\r\n    //await super.processItem(item);\r\n    await LazyLoadQueueBase.prototype.processItem.call(this, item);\r\n\r\n    if(this.lazyLoadMedia.length) {\r\n      this.processQueue();\r\n    }\r\n  } */\r\n\r\n  public observe(el: LazyLoadElement) {\r\n    this._queue.set(el.div, el);\r\n    this.intersector.observe(el.div);\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueRepeat2 extends LazyLoadQueueIntersector {\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector((target, visible) => {\r\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\r\n      if(visible && spliced.length) {\r\n        spliced.forEach(item => {\r\n          this.queue.unshift(item);\r\n        });\r\n      }\r\n  \r\n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\r\n      this.setProcessQueueTimeout();\r\n    });\r\n  }\r\n\r\n  public observe(el: HTMLElement) {\r\n    this.intersector.observe(el);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport I18n from \"../lib/langPack\";\n\nlet sortedCountries: HelpCountry[];\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\nconst prefixes: Map<string, PrefixCountry> = new Map();\nlet maxPrefixLength = 0;\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\n  prefix = code.country_code + prefix;\n  /* if(prefixes.has(prefix)) {\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\n  } */\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\n  prefixes.set(prefix, {country, code});\n};\n\nexport function formatPhoneNumber(originalStr: string): {\n  formatted: string,\n  country: HelpCountry,\n  code: HelpCountryCode,\n  leftPattern: string\n} {\n  originalStr = originalStr || '';\n  \n  if(!prefixes.size) {\n    I18n.countriesList.forEach(country => {\n      country.country_codes.forEach(code => {\n        const s = {country, code};\n\n        if(code.prefixes) {\n          code.prefixes.forEach(prefix => {\n            setPrefix(country, code, prefix);\n          });\n        } else {\n          setPrefix(country, code);\n        }\n      });\n    });\n  }\n\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\n  let str = originalStr.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, maxPrefixLength);\n  \n  ////console.log('str', str, phoneCode);\n  // if(!sortedCountries) {\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\n  // }\n  \n  // let country = sortedCountries.find((c) => {\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  // });\n\n  let prefixCountry: PrefixCountry;\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\n    if(prefixCountry) {\n      break;\n    }\n  }\n\n  if(!prefixCountry) {\n    return {\n      formatted: str, \n      country: undefined, \n      code: undefined, \n      leftPattern: ''\n    };\n  }\n\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\n  const country = prefixCountry.country;\n  \n  const patterns = prefixCountry.code.patterns || [];\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\n  for(let i = patterns.length - 1; i >= 0; --i) {\n    pattern = patterns[i];\n\n    const _pattern = pattern.replace(/ /g, '');\n    let patternMatches = 0;\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\n        ++patternMatches;\n      } else {\n        patternMatches = 0;\n        break;\n      }\n    }\n\n    if(patternMatches > mostMatchedPatternMatches) {\n      mostMatchedPatternMatches = patternMatches;\n      mostMatchedPattern = pattern;\n    }\n  }\n\n  pattern = mostMatchedPattern || pattern;\n  pattern = pattern.replace(/\\d/g, 'X');\n\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\n  // let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\n  if(leftPattern) {\n    /* const length = str.length;\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\n    leftPattern = leftPattern.replace(/X/g, '‒');\n    // leftPattern = leftPattern.replace(/X/g, '0');\n  }\n  \n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\n}\n","export default function assumeType<T>(x: unknown): asserts x is T {\r\n  return; // ¯\\_(ツ)_/¯\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string) {\r\n  const span = document.createElement('span');\r\n  span.innerHTML = html;\r\n  return span;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { bufferConcats } from '../../helpers/bytes';\nimport { add_, bigInt2str, cmp, leftShift_, str2bigInt } from '../../vendor/leemon';\n\n                       \n             \n                                                 \n\n                                                                           \n                                                                                 \n                                                                                             \n                                               \n                                                                          \n                                                              \n                \n \n          \n\nexport function isObject(object: any) {\n  return typeof(object) === 'object' && object !== null;\n}\n\n/* export function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n} */\n\n/* export function bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10);\n} */\n\n/* export function base64ToBlob(base64str: string, mimeType: string) {\n  var sliceSize = 1024;\n  var byteCharacters = atob(base64str);\n  var bytesLength = byteCharacters.length;\n  var slicesCount = Math.ceil(bytesLength / sliceSize);\n  var byteArrays = new Array(slicesCount);\n\n  for(var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    var begin = sliceIndex * sliceSize;\n    var end = Math.min(begin + sliceSize, bytesLength);\n\n    var bytes = new Array(end - begin);\n    for(var offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n\n  return blobConstruct(byteArrays, mimeType);\n}\n\nexport function dataUrlToBlob(url: string) {\n  // var name = 'b64blob ' + url.length\n  // console.time(name)\n  var urlParts = url.split(',');\n  var base64str = urlParts[1];\n  var mimeType = urlParts[0].split(':')[1].split(';')[0];\n  var blob = base64ToBlob(base64str, mimeType);\n  // console.timeEnd(name)\n  return blob;\n} */\n\nexport function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n\n/* export function bytesFromBigInt(bigInt: BigInteger, len?: number) {\n  var bytes = bigInt.toByteArray();\n\n  if(len && bytes.length < len) {\n    var padding = [];\n    for(var i = 0, needPadding = len - bytes.length; i < needPadding; i++) {\n      padding[i] = 0;\n    }\n    if(bytes instanceof ArrayBuffer) {\n      bytes = bufferConcat(padding, bytes);\n    } else {\n      bytes = padding.concat(bytes);\n    }\n  } else {\n    while (!bytes[0] && (!len || bytes.length > len)) {\n      bytes = bytes.slice(1);\n    }\n  }\n\n  return bytes;\n} */\n\nexport function longFromInts(high: number, low: number): string {\n  //let perf = performance.now();\n  //let str = bigint(high).shiftLeft(32).add(bigint(low)).toString(10);\n  //console.log('longFromInts jsbn', performance.now() - perf);\n  high = intToUint(high);\n  low = intToUint(low);\n  \n  //perf = performance.now();\n  const bigInt = str2bigInt(high.toString(16), 16, 32);//int2bigInt(high, 64, 64);\n  //console.log('longFromInts construct high', bigint(high).toString(10), bigInt2str(bigInt, 10));\n  leftShift_(bigInt, 32);\n  //console.log('longFromInts shiftLeft', bigint(high).shiftLeft(32).toString(10), bigInt2str(bigInt, 10));\n  add_(bigInt, str2bigInt(low.toString(16), 16, 32));\n  const _str = bigInt2str(bigInt, 10);\n\n  //console.log('longFromInts leemon', performance.now() - perf);\n\n  //console.log('longFromInts', high, low, str, _str, str === _str);\n\n  return _str;\n}\n\nexport function sortLongsArray(arr: string[]) {\n  return arr.map(long => {\n    return str2bigInt(long, 10);\n  }).sort((a, b) => {\n    return cmp(a, b);\n  }).map(bigInt => {\n    return bigInt2str(bigInt, 10);\n  });\n}\n\nexport function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T, \n  blockSize: number = 16, \n  zeroes?: boolean, \n  blockSizeAsTotalLength = false, \n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    ////console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      padding.randomize();\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport class WindowSize {\n  public width = 0;\n  public height = 0;\n\n  constructor() {\n    // @ts-ignore\n    const w: any = 'visualViewport' in window ? window.visualViewport : window;\n    const set = () => {\n      this.width = w.width || w.innerWidth;\n      this.height = w.height || w.innerHeight;\n    };\n    w.addEventListener('resize', set);\n    set();\n  }\n}\n\nconst windowSize = new WindowSize();\nexport default windowSize;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport class AppMessagesIdsManager {\r\n  private static MESSAGE_ID_INCREMENT = 0x10000;\r\n  private static MESSAGE_ID_OFFSET = 0xFFFFFFFF;\r\n\r\n  private tempNum = 0;\r\n\r\n  public generateMessageId(messageId: number, temp = false) {\r\n    const q = AppMessagesIdsManager.MESSAGE_ID_OFFSET;\r\n    const num = temp ? ++this.tempNum : 0;\r\n    if(messageId >= q) {\r\n      if(temp) {\r\n        return messageId + (num & (AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1));\r\n      }\r\n\r\n      return messageId;\r\n    }\r\n\r\n    return q + (messageId * AppMessagesIdsManager.MESSAGE_ID_INCREMENT + (num & (AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1)));\r\n  }\r\n\r\n  /**\r\n   * * will ignore outgoing offset\r\n   */\r\n  public getServerMessageId(messageId: number) {\r\n    return this.clearMessageId(messageId, true);\r\n  }\r\n\r\n  public clearMessageId(messageId: number, toServer?: boolean) {\r\n    const q = AppMessagesIdsManager.MESSAGE_ID_OFFSET;\r\n    if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\r\n      return messageId;\r\n    }\r\n\r\n    const l = AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1;\r\n    const used = messageId & l;\r\n    if(used !== l) {\r\n      messageId -= used + 1;\r\n    }\r\n\r\n    return toServer ? (messageId - q) / AppMessagesIdsManager.MESSAGE_ID_INCREMENT : messageId;\r\n  }\r\n\r\n  public incrementMessageId(messageId: number, increment: number) {\r\n    return this.generateMessageId(this.getServerMessageId(messageId) + increment);\r\n  }\r\n}\r\n\r\nconst appMessagesIdsManager = new AppMessagesIdsManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appMessagesIdsManager = appMessagesIdsManager);\r\nexport default appMessagesIdsManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { fontFamily } from \"../../components/middleEllipsis\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport { deepEqual } from \"../../helpers/object\";\r\nimport { convertInputKeyToKey } from \"../../helpers/string\";\r\nimport { IS_MOBILE } from \"../../environment/userAgent\";\r\nimport { InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update } from \"../../layer\";\r\nimport I18n from \"../langPack\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport webPushApiManager, { PushSubscriptionNotify } from \"../mtproto/webPushApiManager\";\r\nimport rootScope from \"../rootScope\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport appRuntimeManager from \"./appRuntimeManager\";\r\nimport appStateManager from \"./appStateManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport IS_VIBRATE_SUPPORTED from \"../../environment/vibrateSupport\";\r\nimport { MUTE_UNTIL } from \"../mtproto/mtproto_config\";\r\nimport throttle from \"../../helpers/schedulers/throttle\";\r\n\r\ntype MyNotification = Notification & {\r\n  hidden?: boolean,\r\n  show?: () => void,\r\n};\r\n\r\nexport type NotifyOptions = Partial<{\r\n  tag: string;\r\n  image: string;\r\n  key: string;\r\n  title: string;\r\n  message: string;\r\n  silent: boolean;\r\n  onclick: () => void;\r\n}>;\r\n\r\nexport type NotificationSettings = {\r\n  nodesktop: boolean,\r\n  volume: number,\r\n  novibrate: boolean,\r\n  nopreview: boolean,\r\n  nopush: boolean,\r\n  nosound: boolean\r\n};\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager {\r\n  private notificationsUiSupport: boolean;\r\n  private notificationsShown: {[key: string]: MyNotification | true} = {};\r\n  private notificationIndex = 0;\r\n  private notificationsCount = 0;\r\n  private soundsPlayed: {[tag: string]: number} = {};\r\n  private vibrateSupport = IS_VIBRATE_SUPPORTED;\r\n  private nextSoundAt: number;\r\n  private prevSoundVolume: number;\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  //private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n  private faviconEl: HTMLLinkElement = document.head.querySelector('link[rel=\"icon\"]');\r\n\r\n  private titleBackup = document.title;\r\n  private titleChanged = false;\r\n  private titleInterval: number;\r\n  private prevFavicon: string;\r\n  private stopped = false;\r\n\r\n  private settings: NotificationSettings = {} as any;\r\n\r\n  private registeredDevice: any;\r\n  private pushInited = false;\r\n\r\n  private topMessagesDeferred: CancellablePromise<void>;\r\n\r\n  private notifySoundEl: HTMLElement;\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    navigator.vibrate = navigator.vibrate || navigator.mozVibrate || navigator.webkitVibrate;\r\n\r\n    this.notificationsUiSupport = ('Notification' in window) || ('mozNotification' in navigator);\r\n\r\n    this.topMessagesDeferred = deferredPromise<void>();\r\n\r\n    this.notifySoundEl = document.createElement('div');\r\n    this.notifySoundEl.id = 'notify-sound';\r\n    document.body.append(this.notifySoundEl);\r\n\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    rootScope.addEventListener('instance_deactivated', () => {\r\n      this.stop();\r\n    });\r\n\r\n    rootScope.addEventListener('instance_activated', () => {\r\n      if(this.stopped) {\r\n        this.start();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('idle', (newVal) => {\r\n      if(this.stopped) {\r\n        return;\r\n      }\r\n\r\n      if(!newVal) {\r\n        this.clear();\r\n      }\r\n\r\n      this.toggleToggler();\r\n    });\r\n\r\n    rootScope.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && appPeersManager.getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId, \r\n          settings: update.notify_settings\r\n        });\r\n        rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('push_init', (tokenData) => {\r\n      this.pushInited = true;\r\n      if(!this.settings.nodesktop && !this.settings.nopush) {\r\n        if(tokenData) {\r\n          this.registerDevice(tokenData);\r\n        } else {\r\n          webPushApiManager.subscribe();\r\n        }\r\n      } else {\r\n        this.unregisterDevice(tokenData);\r\n      }\r\n    });\r\n    rootScope.addEventListener('push_subscribe', (tokenData) => {\r\n      this.registerDevice(tokenData);\r\n    });\r\n    rootScope.addEventListener('push_unsubscribe', (tokenData) => {\r\n      this.unregisterDevice(tokenData);\r\n    });\r\n\r\n    rootScope.addEventListener('dialogs_multiupdate', () => {\r\n      //unregisterTopMsgs()\r\n      this.topMessagesDeferred.resolve();\r\n    }, {once: true});\r\n\r\n    rootScope.addEventListener('push_notification_click', (notificationData) => {\r\n      if(notificationData.action === 'push_settings') {\r\n        /* this.topMessagesDeferred.then(() => {\r\n          $modal.open({\r\n            templateUrl: templateUrl('settings_modal'),\r\n            controller: 'SettingsModalController',\r\n            windowClass: 'settings_modal_window mobile_modal',\r\n            backdrop: 'single'\r\n          })\r\n        }); */\r\n        return;\r\n      }\r\n\r\n      if(notificationData.action === 'mute1d') {\r\n        apiManager.invokeApi('account.updateDeviceLocked', {\r\n          period: 86400\r\n        }).then(() => {\r\n          // var toastData = toaster.pop({\r\n          //   type: 'info',\r\n          //   body: _('push_action_mute1d_success'),\r\n          //   bodyOutputType: 'trustedHtml',\r\n          //   clickHandler: () => {\r\n          //     toaster.clear(toastData)\r\n          //   },\r\n          //   showCloseButton: false\r\n          // })\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      const peerId = notificationData.custom && notificationData.custom.peerId.toPeerId();\r\n      console.log('click', notificationData, peerId);\r\n      if(peerId) {\r\n        this.topMessagesDeferred.then(() => {\r\n          if(notificationData.custom.channel_id &&\r\n              !appChatsManager.hasChat(notificationData.custom.channel_id)) {\r\n            return;\r\n          }\r\n\r\n          if(peerId.isUser() && !appUsersManager.hasUser(peerId)) {\r\n            return;\r\n          }\r\n\r\n          rootScope.dispatchEvent('history_focus', {\r\n            peerId,\r\n            mid: +notificationData.custom.msg_id\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private toggleToggler(enable = rootScope.idle.isIDLE) {\r\n    if(IS_MOBILE) return;\r\n\r\n    const resetTitle = () => {\r\n      this.titleChanged = false;\r\n      document.title = this.titleBackup;\r\n      this.setFavicon();\r\n    };\r\n\r\n    window.clearInterval(this.titleInterval);\r\n    this.titleInterval = 0;\r\n\r\n    if(!enable) {\r\n      resetTitle();\r\n    } else {\r\n      this.titleInterval = window.setInterval(() => {\r\n        const count = this.notificationsCount;\r\n        if(!count) {\r\n          this.toggleToggler(false);\r\n        } else if(this.titleChanged) {\r\n          resetTitle();\r\n        } else {\r\n          this.titleChanged = true;\r\n          document.title = I18n.format('Notifications.Count', true, [count]);\r\n          //this.setFavicon('assets/img/favicon_unread.ico');\r\n\r\n          // fetch('assets/img/favicon.ico')\r\n          // .then(res => res.blob())\r\n          // .then(blob => {\r\n            // const img = document.createElement('img');\r\n            // img.src = URL.createObjectURL(blob);\r\n\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = 32 * window.devicePixelRatio;\r\n            canvas.height = canvas.width;\r\n  \r\n            const ctx = canvas.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI, false);\r\n            ctx.fillStyle = '#3390ec';\r\n            ctx.fill();\r\n\r\n            let fontSize = 24;\r\n            let str = '' + count;\r\n            if(count < 10) {\r\n              fontSize = 22;\r\n            } else if(count < 100) {\r\n              fontSize = 20;\r\n            } else {\r\n              str = '99+';\r\n              fontSize = 16;\r\n            }\r\n\r\n            fontSize *= window.devicePixelRatio;\r\n            \r\n            ctx.font = `700 ${fontSize}px ${fontFamily}`;\r\n            ctx.textBaseline = 'middle';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillText(str, canvas.width / 2, canvas.height * .5625);\r\n\r\n            /* const ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height); */\r\n  \r\n            this.setFavicon(canvas.toDataURL());\r\n          // });\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  public updateLocalSettings = () => {\r\n    Promise.all(['notify_nodesktop', 'notify_volume', 'notify_novibrate', 'notify_nopreview', 'notify_nopush'].map(k => stateStorage.get(k as any)))\r\n    .then((updSettings) => {\r\n      this.settings.nodesktop = updSettings[0];\r\n      this.settings.volume = updSettings[1] === undefined ? 0.5 : updSettings[1];\r\n      this.settings.novibrate = updSettings[2];\r\n      this.settings.nopreview = updSettings[3];\r\n      this.settings.nopush = updSettings[4];\r\n\r\n      if(this.pushInited) {\r\n        const needPush = !this.settings.nopush && !this.settings.nodesktop && webPushApiManager.isAvailable || false;\r\n        const hasPush = this.registeredDevice !== false;\r\n        if(needPush !== hasPush) {\r\n          if(needPush) {\r\n            webPushApiManager.subscribe();\r\n          } else {\r\n            webPushApiManager.unsubscribe();\r\n          }\r\n        }\r\n      }\r\n\r\n      webPushApiManager.setSettings(this.settings);\r\n    });\r\n\r\n    appStateManager.getState().then(state => {\r\n      this.settings.nosound = !state.settings.notifications.sound;\r\n    });\r\n  }\r\n\r\n  public getLocalSettings() {\r\n    return this.settings;\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then(settings => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId, \r\n        settings\r\n      });\r\n      \r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    //this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then(value => {\r\n      if(value) {\r\n        apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings', \r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          }, \r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings',\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifyExceptions() {\r\n    apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n    .then((updates) => {\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then(value => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private setFavicon(href: string = 'assets/img/favicon.ico') {\r\n    if(this.prevFavicon === href) {\r\n      return;\r\n    }\r\n\r\n    const link = this.faviconEl.cloneNode() as HTMLLinkElement;\r\n    link.href = href;\r\n    this.faviconEl.parentNode.replaceChild(link, this.faviconEl);\r\n    this.faviconEl = link;\r\n\r\n    this.prevFavicon = href;\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n    for(const peerId in this.peerSettings.notifyPeer) {\r\n      const peerNotifySettings = this.peerSettings.notifyPeer[peerId];\r\n      if(peerNotifySettings instanceof Promise) {\r\n        continue;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(muteUntil === undefined) {\r\n        continue;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        // delete peerNotifySettings.mute_until;\r\n\r\n        rootScope.dispatchEvent('updateNotifySettings', {\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            _: 'notifyPeer',\r\n            peer: appPeersManager.getOutputPeer(peerId.toPeerId())\r\n          },\r\n          notify_settings: peerNotifySettings\r\n        });\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n    }\r\n\r\n    this.checkMuteUntilTimeout = window.setTimeout(this.checkMuteUntil, (closestMuteUntil - timestamp) * 1000);\r\n  };\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId, \r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n    \r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    //rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  public getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  public getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    //if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(let i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === rootScope.myId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n\r\n  public start() {\r\n    this.updateLocalSettings();\r\n    rootScope.addEventListener('settings_updated', this.updateLocalSettings);\r\n    webPushApiManager.start();\r\n\r\n    if(!this.notificationsUiSupport) {\r\n      return false;\r\n    }\r\n\r\n    if('Notification' in window && Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n      window.addEventListener('click', this.requestPermission);\r\n    }\r\n\r\n    try {\r\n      if('onbeforeunload' in window) {\r\n        window.addEventListener('beforeunload', this.clear);\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  private stop() {\r\n    this.clear();\r\n    window.clearInterval(this.titleInterval);\r\n    this.titleInterval = 0;\r\n    this.setFavicon();\r\n    this.stopped = true;\r\n  }\r\n\r\n  private requestPermission = () => {\r\n    Notification.requestPermission();\r\n    window.removeEventListener('click', this.requestPermission);\r\n  };\r\n\r\n  public notify(data: NotifyOptions) {\r\n    //console.log('notify', data, rootScope.idle.isIDLE, this.notificationsUiSupport, this.stopped);\r\n    \r\n    if(this.stopped) {\r\n      return;\r\n    }\r\n\r\n    // FFOS Notification blob src bug workaround\r\n    /* if(Config.Navigator.ffos && !Config.Navigator.ffos2p) {\r\n      data.image = 'https://telegram.org/img/t_logo.png'\r\n    }\r\n    else if (data.image && !angular.isString(data.image)) {\r\n      if (Config.Navigator.ffos2p) {\r\n        FileManager.getDataUrl(data.image, 'image/jpeg').then(function (url) {\r\n          data.image = url\r\n          notify(data)\r\n        })\r\n        return false\r\n      } else {\r\n        data.image = FileManager.getUrl(data.image, 'image/jpeg')\r\n      }\r\n    }\r\n    else */ if(!data.image) {\r\n      data.image = 'assets/img/logo_filled_rounded.png';\r\n    }\r\n    // console.log('notify image', data.image)\r\n\r\n    this.notificationsCount++;\r\n    if(!this.titleInterval) {\r\n      this.toggleToggler();\r\n    }\r\n\r\n    const idx = ++this.notificationIndex;\r\n    const key = data.key || 'k' + idx;\r\n    this.notificationsShown[key] = true;\r\n\r\n    const now = tsNow();\r\n    if(this.settings.volume > 0 && !this.settings.nosound/* &&\r\n      (\r\n        !data.tag ||\r\n        !this.soundsPlayed[data.tag] ||\r\n        now > this.soundsPlayed[data.tag] + 60000\r\n      ) */\r\n    ) {\r\n      this.testSound(this.settings.volume);\r\n      this.soundsPlayed[data.tag] = now;\r\n    }\r\n\r\n    if(!this.notificationsUiSupport ||\r\n      'Notification' in window && Notification.permission !== 'granted') {\r\n      return false;\r\n    }\r\n\r\n    if(this.settings.nodesktop) {\r\n      if(this.vibrateSupport && !this.settings.novibrate) {\r\n        navigator.vibrate([200, 100, 200]);\r\n        return;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let notification: MyNotification;\r\n\r\n    if('Notification' in window) {\r\n      try {\r\n        if(data.tag) {\r\n          for(let i in this.notificationsShown) {\r\n            const notification = this.notificationsShown[i];\r\n            if(typeof(notification) !== 'boolean' && notification.tag === data.tag) {\r\n              notification.hidden = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        notification = new Notification(data.title, {\r\n          icon: data.image || '',\r\n          body: data.message || '',\r\n          tag: data.tag || '',\r\n          silent: data.silent || false\r\n        });\r\n\r\n        //console.log('notify constructed notification');\r\n      } catch(e) {\r\n        this.notificationsUiSupport = false;\r\n        webPushApiManager.setLocalNotificationsDisabled();\r\n        return;\r\n      }\r\n    } /* else if('mozNotification' in navigator) {\r\n      notification = navigator.mozNotification.createNotification(data.title, data.message || '', data.image || '')\r\n    } else if(notificationsMsSiteMode) {\r\n      window.external.msSiteModeClearIconOverlay()\r\n      window.external.msSiteModeSetIconOverlay('img/icons/icon16.png', data.title)\r\n      window.external.msSiteModeActivate()\r\n      notification = {\r\n        index: idx\r\n      }\r\n    } */ else {\r\n      return;\r\n    }\r\n\r\n    notification.onclick = () => {\r\n      notification.close();\r\n      appRuntimeManager.focus();\r\n      this.clear();\r\n      if(data.onclick) {\r\n        data.onclick();\r\n      }\r\n    };\r\n\r\n    notification.onclose = () => {\r\n      if(!notification.hidden) {\r\n        delete this.notificationsShown[key];\r\n        this.clear();\r\n      }\r\n    };\r\n\r\n    if(notification.show) {\r\n      notification.show();\r\n    }\r\n    this.notificationsShown[key] = notification;\r\n\r\n    if(!IS_MOBILE) {\r\n      setTimeout(() => {\r\n        this.hide(key);\r\n      }, 8000);\r\n    }\r\n  }\r\n\r\n  public testSound(volume: number) {\r\n    const now = tsNow();\r\n    if(this.nextSoundAt && now < this.nextSoundAt && this.prevSoundVolume === volume) {\r\n      return;\r\n    }\r\n\r\n    this.nextSoundAt = now + 1000;\r\n    this.prevSoundVolume = volume;\r\n    const filename = 'assets/audio/notification.mp3';\r\n    const audio = document.createElement('audio');\r\n    audio.autoplay = true;\r\n    audio.setAttribute('mozaudiochannel', 'notification');\r\n    audio.volume = volume;\r\n    audio.innerHTML = `\r\n      <source src=\"${filename}\" type=\"audio/mpeg\" />\r\n      <embed hidden=\"true\" autostart=\"true\" loop=\"false\" volume=\"${volume * 100}\" src=\"${filename}\" />\r\n    `;\r\n    this.notifySoundEl.append(audio);\r\n\r\n    audio.addEventListener('ended', () => {\r\n      audio.remove();\r\n    }, {once: true});\r\n  }\r\n\r\n  public cancel(key: string) {\r\n    const notification = this.notificationsShown[key];\r\n    if(notification) {\r\n      if(this.notificationsCount > 0) {\r\n        --this.notificationsCount;\r\n      }\r\n\r\n      try {\r\n        if(typeof(notification) !== 'boolean' && notification.close) {\r\n          notification.hidden = true;\r\n          notification.close();\r\n        }/*  else if(notificationsMsSiteMode &&\r\n          notification.index === notificationIndex) {\r\n          window.external.msSiteModeClearIconOverlay()\r\n        } */\r\n      } catch(e) {}\r\n\r\n      delete this.notificationsShown[key];\r\n    }\r\n  }\r\n\r\n  private hide(key: string) {\r\n    const notification = this.notificationsShown[key];\r\n    if(notification && typeof(notification) !== 'boolean') {\r\n      try {\r\n        if(notification.close) {\r\n          notification.hidden = true;\r\n          notification.close();\r\n        }\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n  public soundReset(tag: string) {\r\n    delete this.soundsPlayed[tag];\r\n  }\r\n\r\n  public clear() {\r\n    /* if(notificationsMsSiteMode) {\r\n      window.external.msSiteModeClearIconOverlay()\r\n    } else { */\r\n      for(const i in this.notificationsShown) {\r\n        const notification = this.notificationsShown[i];\r\n        try {\r\n          if(typeof(notification) !== 'boolean' && notification.close) {\r\n            notification.close();\r\n          }\r\n        } catch(e) {}\r\n      }\r\n    /* } */\r\n    this.notificationsShown = {};\r\n    this.notificationsCount = 0;\r\n\r\n    webPushApiManager.hidePushNotifications();\r\n  }\r\n\r\n  private registerDevice(tokenData: PushSubscriptionNotify) {\r\n    if(this.registeredDevice && deepEqual(this.registeredDevice, tokenData)) {\r\n      return false;\r\n    }\r\n\r\n    apiManager.invokeApi('account.registerDevice', {\r\n      token_type: tokenData.tokenType,\r\n      token: tokenData.tokenValue,\r\n      other_uids: [],\r\n      app_sandbox: false,\r\n      secret: new Uint8Array()\r\n    }).then(() => {\r\n      this.registeredDevice = tokenData;\r\n    }, (error) => {\r\n      error.handled = true;\r\n    });\r\n  }\r\n\r\n  private unregisterDevice(tokenData: PushSubscriptionNotify) {\r\n    if(!this.registeredDevice) {\r\n      return false;\r\n    }\r\n\r\n    apiManager.invokeApi('account.unregisterDevice', {\r\n      token_type: tokenData.tokenType,\r\n      token: tokenData.tokenValue,\r\n      other_uids: []\r\n    }).then(() => {\r\n      this.registeredDevice = false;\r\n    }, (error) => {\r\n      error.handled = true;\r\n    });\r\n  }\r\n\r\n  public getVibrateSupport() {\r\n    return this.vibrateSupport\r\n  }\r\n}\r\n\r\nconst appNotificationsManager = new AppNotificationsManager();\r\nMOUNT_CLASS_TO.appNotificationsManager = appNotificationsManager;\r\nexport default appNotificationsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\n\nexport const loadedURLs: {[url: string]: boolean} = {};\nconst set = (elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, url: string) => {\n  if(elem instanceof HTMLImageElement || elem instanceof HTMLVideoElement) elem.src = url;\n  else if(elem instanceof SVGImageElement) elem.setAttributeNS(null, 'href', url);\n  else elem.style.backgroundImage = 'url(' + url + ')';\n};\n\n// проблема функции в том, что она не подходит для ссылок, пригодна только для blob'ов, потому что обычным ссылкам нужен 'load' каждый раз.\nexport default function renderImageFromUrl(\n  elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, \n  url: string, \n  callback?: (err?: Event) => void, \n  useCache = true\n) {\n  if(!url) {\n    console.error('renderImageFromUrl: no url?', elem, url);\n    callback && callback();\n    return;\n  }\n\n  if(((loadedURLs[url]/*  && false */) && useCache) || elem instanceof HTMLVideoElement) {\n    if(elem) {\n      set(elem, url);\n    }\n    \n    callback && callback();\n    // callback && getHeavyAnimationPromise().then(() => callback());\n  } else {\n    const isImage = elem instanceof HTMLImageElement;\n    const loader = isImage ? elem as HTMLImageElement : new Image();\n    //const loader = new Image();\n    loader.src = url;\n    //let perf = performance.now();\n    loader.addEventListener('load', () => {\n      if(!isImage && elem) {\n        set(elem, url);\n      }\n\n      loadedURLs[url] = true;\n      //console.log('onload:', url, performance.now() - perf);\n      // TODO: переделать прогрузки аватаров до начала анимации, иначе с этим ожиданием они неприятно появляются\n      // callback && getHeavyAnimationPromise().then(() => callback());\n      callback && callback();\n    }, {once: true});\n\n    if(callback) {\n      loader.addEventListener('error', callback);\n    }\n  }\n}\n\nexport function renderImageFromUrlPromise(elem: Parameters<typeof renderImageFromUrl>[0], url: string, useCache?: boolean) {\n  return new Promise((resolve) => {\n    renderImageFromUrl(elem, url, resolve, useCache);\n  });\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { CancellablePromise } from \"../helpers/cancellablePromise\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\n\r\nconst TRANSITION_TIME = 200;\r\n\r\nexport default class ProgressivePreloader {\r\n  public preloader: HTMLDivElement;\r\n  public circle: SVGCircleElement;\r\n  private cancelSvg: SVGSVGElement;\r\n  private downloadSvg: HTMLElement;\r\n  \r\n  private tempId = 0;\r\n  public detached = true;\r\n\r\n  public promise: CancellablePromise<any> = null;\r\n\r\n  public isUpload = false;\r\n  private cancelable = true;\r\n  private streamable = false;\r\n  private tryAgainOnFail = true;\r\n  private attachMethod: 'append' | 'prepend' = 'append';\r\n\r\n  public loadFunc: (e?: Event) => {download: CancellablePromise<any>};\r\n\r\n  public totalLength: number;\r\n\r\n  constructor(options?: Partial<{\r\n    isUpload: ProgressivePreloader['isUpload'],\r\n    cancelable: ProgressivePreloader['cancelable'], \r\n    streamable: ProgressivePreloader['streamable'], \r\n    tryAgainOnFail: ProgressivePreloader['tryAgainOnFail'],\r\n    attachMethod: ProgressivePreloader['attachMethod']\r\n  }>) {\r\n    if(options) {\r\n      safeAssign(this, options);\r\n    }\r\n  }\r\n\r\n  public constructContainer(options: Partial<{\r\n    color: 'transparent',\r\n    bold: boolean\r\n  }> = {}) {\r\n    if(!this.preloader) {\r\n      this.preloader = document.createElement('div');\r\n      this.preloader.classList.add('preloader-container');\r\n\r\n      if(options.color) {\r\n        this.preloader.classList.add('preloader-' + options.color);\r\n      }\r\n\r\n      if(options.bold) {\r\n        this.preloader.classList.add('preloader-bold');\r\n      }\r\n  \r\n      if(this.streamable) {\r\n        this.preloader.classList.add('preloader-streamable');\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructDownloadIcon() {\r\n    this.constructContainer();\r\n  }\r\n\r\n  public construct() {\r\n    this.construct = null;\r\n\r\n    this.constructContainer();\r\n    \r\n    this.preloader.innerHTML = `\r\n    <div class=\"you-spin-me-round\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"${this.streamable ? '25 25 50 50' : '27 27 54 54'}\">\r\n    <circle class=\"preloader-path-new\" cx=\"${this.streamable ? '50' : '54'}\" cy=\"${this.streamable ? '50' : '54'}\" r=\"${this.streamable ? 19 : 24}\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n    </svg>\r\n    </div>`;\r\n\r\n    if(this.streamable) {\r\n      this.totalLength = 118.61124420166016;\r\n    } else {\r\n      this.totalLength = 149.82473754882812;\r\n    }\r\n\r\n    if(this.cancelable) {\r\n      this.preloader.innerHTML += `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-close\" viewBox=\"0 0 24 24\">\r\n        <g fill=\"none\" fill-rule=\"evenodd\">\r\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\r\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5.20970461,5.38710056 L5.29289322,5.29289322 C5.65337718,4.93240926 6.22060824,4.90467972 6.61289944,5.20970461 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3466228,19.0675907 17.7793918,19.0953203 17.3871006,18.7902954 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 L5.29289322,5.29289322 L5.20970461,5.38710056 Z\"/>\r\n        </g>\r\n      </svg>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-download\" viewBox=\"0 0 24 24\">\r\n        <g fill=\"none\" fill-rule=\"evenodd\">\r\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\r\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z\"/>\r\n        </g>\r\n      </svg>`;\r\n\r\n      this.downloadSvg = this.preloader.lastElementChild as HTMLElement;\r\n      this.cancelSvg = this.downloadSvg.previousElementSibling as any;\r\n    } else {\r\n      this.preloader.classList.add('preloader-swing');\r\n    }\r\n    \r\n    this.circle = this.preloader.firstElementChild.firstElementChild.firstElementChild as SVGCircleElement;\r\n\r\n    if(this.cancelable) {\r\n      attachClickEvent(this.preloader, this.onClick);\r\n    }\r\n  }\r\n\r\n  public onClick = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(this.preloader.classList.contains('manual')) {\r\n      if(this.loadFunc) {\r\n        this.loadFunc(e);\r\n      }\r\n    } else {\r\n      if(this.promise && this.promise.cancel) {\r\n        this.promise.cancel();\r\n      }\r\n    }\r\n  };\r\n\r\n  public setDownloadFunction(func: ProgressivePreloader['loadFunc']) {\r\n    this.loadFunc = func;\r\n  }\r\n\r\n  public setManual() {\r\n    this.preloader.classList.add('manual');\r\n    this.setProgress(0);\r\n  }\r\n\r\n  public attachPromise(promise: CancellablePromise<any>) {\r\n    if(this.isUpload && this.promise) return;\r\n\r\n    this.promise = promise;\r\n\r\n    const tempId = --this.tempId;\r\n    const startTime = Date.now();\r\n\r\n    const onEnd = (err: Error) => {\r\n      promise.notify = promise.notifyAll = null;\r\n\r\n      if(tempId !== this.tempId) {\r\n        return;\r\n      }\r\n\r\n      const elapsedTime = Date.now() - startTime;\r\n\r\n      //console.log('[PP]: end', this.detached, performance.now());\r\n\r\n      if(!err && this.cancelable) {\r\n        this.setProgress(100);\r\n\r\n        const delay = TRANSITION_TIME * 0.75;\r\n\r\n        if(elapsedTime < delay) {\r\n          this.detach();\r\n        } else {\r\n          setTimeout(() => { // * wait for transition complete\r\n            if(tempId === this.tempId) {\r\n              this.detach();\r\n            }\r\n          }, delay);\r\n        }\r\n      } else {\r\n        if(this.tryAgainOnFail) {\r\n          this.attach(this.preloader.parentElement);\r\n          fastRaf(() => {\r\n            this.setManual();\r\n          });\r\n        } else {\r\n          this.detach();\r\n        }\r\n      }\r\n      \r\n      this.promise = promise = null;\r\n    };\r\n    \r\n    promise\r\n    .then(() => onEnd(null))\r\n    .catch((err) => onEnd(err));\r\n\r\n    if(promise.addNotifyListener) {\r\n      promise.addNotifyListener((details: {done: number, total: number}) => {\r\n        /* if(details.done >= details.total) {\r\n          onEnd();\r\n        } */\r\n\r\n        if(tempId !== this.tempId) return;\r\n\r\n        //console.log('preloader download', promise, details);\r\n        const percents = details.done / details.total * 100;\r\n        this.setProgress(percents);\r\n      });\r\n    }\r\n  }\r\n\r\n  public attach(elem: Element, reset = false, promise?: CancellablePromise<any>) {\r\n    if(this.construct) {\r\n      this.construct();\r\n    }\r\n\r\n    if(this.preloader.parentElement) {\r\n      this.preloader.classList.remove('manual');\r\n    }\r\n\r\n    this.detached = false;\r\n\r\n    if(promise/*  && false */) {\r\n      this.attachPromise(promise);\r\n    }\r\n\r\n    if(this.detached || this.preloader.parentElement !== elem) {\r\n      const useRafs = isInDOM(this.preloader) ? 1 : 2;\r\n      if(this.preloader.parentElement !== elem) {\r\n        elem[this.attachMethod](this.preloader);\r\n      }\r\n\r\n      SetTransition(this.preloader, 'is-visible', true, TRANSITION_TIME, undefined, useRafs);\r\n    }\r\n\r\n    if(this.cancelable && reset) {\r\n      this.setProgress(0);\r\n    }\r\n  }\r\n  \r\n  public detach() {\r\n    if(this.detached) {\r\n      return;\r\n    }\r\n    //return;\r\n\r\n    this.detached = true;\r\n\r\n    //return;\r\n    \r\n    if(this.preloader && this.preloader.parentElement) {\r\n      /* setTimeout(() =>  *///fastRaf(() => {\r\n        /* if(!this.detached) return;\r\n        this.detached = true; */\r\n\r\n        // fastRaf(() => {\r\n          //console.log('[PP]: detach after rAF', this.detached, performance.now());\r\n\r\n          // if(!this.detached || !this.preloader.parentElement) {\r\n          //   return;\r\n          // }\r\n\r\n          SetTransition(this.preloader, 'is-visible', false, TRANSITION_TIME, () => {\r\n            this.preloader.remove();\r\n          }, 1);\r\n        // });\r\n      //})/* , 5e3) */;\r\n    }\r\n  }\r\n  \r\n  public setProgress(percents: number) {\r\n    if(!this.totalLength && !isInDOM(this.circle)) {\r\n      return;\r\n    }\r\n    \r\n    if(percents === 0) {\r\n      this.circle.style.strokeDasharray = '';\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      if(!this.totalLength) {\r\n        this.totalLength = this.circle.getTotalLength();\r\n      }\r\n\r\n      //console.log('setProgress', (percents / 100 * totalLength));\r\n      this.circle.style.strokeDasharray = '' + Math.max(5, percents / 100 * this.totalLength) + ', ' + this.totalLength;\r\n    } catch(err) {}\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { makeMediaSize, MediaSize } from \"./mediaSizes\";\r\nimport { pause } from \"./schedulers/pause\";\r\nimport { IS_APPLE_MOBILE } from \"../environment/userAgent\";\r\n\r\nexport function scaleMediaElement(options: {\r\n  media: CanvasImageSource, \r\n  mediaSize: MediaSize, \r\n  boxSize: MediaSize, \r\n  quality?: number,\r\n  mimeType?: 'image/jpeg' | 'image/png'\r\n}): Promise<{blob: Blob, size: MediaSize}> {\r\n  return new Promise((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    const size = options.mediaSize.aspectFitted(options.boxSize);\r\n    canvas.width = size.width * window.devicePixelRatio;\r\n    canvas.height = size.height * window.devicePixelRatio;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(options.media, 0, 0, canvas.width, canvas.height);\r\n    canvas.toBlob(blob => {\r\n      resolve({blob, size});\r\n    }, options.mimeType ?? 'image/jpeg', options.quality ?? 1);\r\n  });\r\n}\r\n\r\nexport function preloadVideo(url: string): Promise<HTMLVideoElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const video = document.createElement('video');\r\n    video.volume = 0;\r\n    video.addEventListener('loadedmetadata', () => resolve(video), {once: true});\r\n    video.addEventListener('error', reject, {once: true});\r\n    video.src = url;\r\n  });\r\n}\r\n\r\nexport function createPosterFromMedia(media: HTMLVideoElement | HTMLImageElement) {\r\n  let width: number, height: number;\r\n  if(media instanceof HTMLVideoElement) {\r\n    width = media.videoWidth;\r\n    height = media.videoHeight;\r\n  } else {\r\n    width = media.naturalWidth;\r\n    height = media.naturalHeight;\r\n  }\r\n\r\n  return scaleMediaElement({\r\n    media, \r\n    mediaSize: makeMediaSize(width, height), \r\n    boxSize: makeMediaSize(320, 240),\r\n    quality: .9\r\n  });\r\n}\r\n\r\nexport function createPosterFromVideo(video: HTMLVideoElement): ReturnType<typeof scaleMediaElement> {\r\n  return new Promise((resolve, reject) => {\r\n    video.onseeked = () => {\r\n      video.onseeked = () => {\r\n        createPosterFromMedia(video).then(resolve);\r\n\r\n        video.onseeked = undefined;\r\n      };\r\n\r\n      video.currentTime = 0;\r\n    };\r\n    \r\n    video.onerror = reject;\r\n    video.currentTime = Math.min(video.duration, 1);\r\n  });\r\n}\r\n\r\nexport async function createPosterForVideo(url: string) {\r\n  const video = await preloadVideo(url);\r\n\r\n  return Promise.race([\r\n    pause(2000) as Promise<undefined>,\r\n    createPosterFromVideo(video),\r\n  ]);\r\n}\r\n\r\nexport function onMediaLoad(media: HTMLMediaElement, readyState = media.HAVE_METADATA, useCanplayOnIos?: boolean) {\r\n  return new Promise<void>((resolve) => {\r\n    if(media.readyState >= readyState) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    media.addEventListener(IS_APPLE_MOBILE && !useCanplayOnIos ? 'loadeddata' : 'canplay', () => resolve(), {once: true});\r\n  });\r\n}\r\n\r\nexport async function getFilesFromEvent(e: ClipboardEvent | DragEvent, onlyTypes = false): Promise<any[]> {\r\n  const files: any[] = [];\r\n\r\n  const scanFiles = async(entry: any, item: DataTransferItem) => {\r\n    if(entry.isDirectory) {\r\n      const directoryReader = entry.createReader();\r\n      await new Promise<void>((resolve, reject) => {\r\n        directoryReader.readEntries(async(entries: any) => {\r\n          for(const entry of entries) {\r\n            await scanFiles(entry, item);\r\n          }\r\n\r\n          resolve();\r\n        });\r\n      });\r\n    } else if(entry) {\r\n      if(onlyTypes) {\r\n        files.push(entry.type);\r\n      } else {\r\n        const itemFile = item.getAsFile(); // * Safari can't handle entry.file with pasting\r\n        const file = entry instanceof File ? \r\n          entry : \r\n          (\r\n            entry instanceof DataTransferItem ? \r\n              entry.getAsFile() : \r\n              await new Promise((resolve, reject) => entry.file(resolve, (err: any) => resolve(itemFile)))\r\n          );\r\n\r\n        /* if(!onlyTypes) {\r\n          console.log('getFilesFromEvent: got file', item, file);\r\n        } */\r\n\r\n        if(!file) return;\r\n        files.push(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  if(e instanceof DragEvent && e.dataTransfer.files && !e.dataTransfer.items) {\r\n    for(let i = 0; i < e.dataTransfer.files.length; i++) {\r\n      const file = e.dataTransfer.files[i];\r\n      files.push(onlyTypes ? file.type : file);\r\n    }\r\n  } else {\r\n    // @ts-ignore\r\n    const items = (e.dataTransfer || e.clipboardData || e.originalEvent.clipboardData).items;\r\n\r\n    const promises: Promise<any>[] = [];\r\n    for(let i = 0; i < items.length; ++i) {\r\n      const item: DataTransferItem = items[i];\r\n      if(item.kind === 'file') {\r\n        const entry = (onlyTypes ? item : item.webkitGetAsEntry()) || item.getAsFile();\r\n        promises.push(scanFiles(entry, item));\r\n      }\r\n    }\r\n    \r\n    await Promise.all(promises);\r\n  }\r\n\r\n  /* if(!onlyTypes) {\r\n    console.log('getFilesFromEvent: got files:', e, files);\r\n  } */\r\n  \r\n  return files;\r\n}\r\n\r\nexport function requestFile(accept?: string) {\r\n  const input = document.createElement('input');\r\n  input.type = 'file';\r\n  input.style.display = 'none';\r\n\r\n  if(accept) {\r\n    input.accept = accept;\r\n  }\r\n\r\n  document.body.append(input);\r\n\r\n  const promise = new Promise<File>((resolve, reject) => {\r\n    input.addEventListener('change', (e: any) => {\r\n      const file: File = e.target.files[0];\r\n      if(!file) {\r\n        reject('NO_FILE_SELECTED');\r\n        return;\r\n      }\r\n  \r\n      resolve(file);\r\n    }, {once: true});\r\n  }).finally(() => {\r\n    input.remove();\r\n  });\r\n\r\n  input.click();\r\n\r\n  return promise;\r\n}\r\n","'use strict'\n//@flow\n\n/** * * * * * * * * * *\n * Big Integer Library *\n * Created 2000        *\n * Leemon Baird        *\n * www.leemon.com      *\n * * * * * * * * * * * */\n\n////////////////////////////////////////////////////////////////////////////////////////\n// These functions are designed to avoid frequent dynamic memory allocation in the inner loop.\n// For most functions, if it needs a BigInt as a local variable it will actually use\n// a global, and will only allocate to it only when it's not the right size.  This ensures\n// that when a function is called repeatedly with same-sized parameters, it only allocates\n// memory on the first call.\n//\n// Note that for cryptographic purposes, the calls to Math.random() must\n// be replaced with calls to a better pseudorandom number generator.\n//\n// In the following, \"bigInt\" means a bigInt with at least one leading zero element,\n// and \"integer\" means a nonnegative integer less than radix.  In some cases, integer\n// can be negative.  Negative bigInts are 2s complement.\n//\n// The following functions do not modify their inputs.\n// Those returning a bigInt, string, or Array will dynamically allocate memory for that value.\n// Those returning a boolean will return the integer 0 (false) or 1 (true).\n// Those returning boolean or int will not allocate memory except possibly on the first\n// time they're called with a given parameter size.\n//\n// bigInt  add(x,y)               //return (x+y) for bigInts x and y.\n// bigInt  addInt(x,n)            //return (x+n) where x is a bigInt and n is an integer.\n// string  bigInt2str(x,base)     //return a string form of bigInt x in a given base, with 2 <= base <= 95\n// int     bitSize(x)             //return how many bits long the bigInt x is, not counting leading zeros\n// bigInt  dup(x)                 //return a copy of bigInt x\n// boolean equals(x,y)            //is the bigInt x equal to the bigint y?\n// boolean equalsInt(x,y)         //is bigint x equal to integer y?\n// bigInt  expand(x,n)            //return a copy of x with at least n elements, adding leading zeros if needed\n// Array   findPrimes(n)          //return array of all primes less than integer n\n// bigInt  GCD(x,y)               //return greatest common divisor of bigInts x and y (each with same number of elements).\n// boolean greater(x,y)           //is x>y?  (x and y are nonnegative bigInts)\n// boolean greaterShift(x,y,shift)//is (x <<(shift*bpe)) > y?\n// bigInt  int2bigInt(t,n,m)      //return a bigInt equal to integer t, with at least n bits and m array elements\n// bigInt  inverseMod(x,n)        //return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\n// int     inverseModInt(x,n)     //return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\n// boolean isZero(x)              //is the bigInt x equal to zero?\n// boolean millerRabin(x,b)       //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is bigInt, 1<b<x)\n// boolean millerRabinInt(x,b)    //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is int,    1<b<x)\n// bigInt  mod(x,n)               //return a new bigInt equal to (x mod n) for bigInts x and n.\n// int     modInt(x,n)            //return x mod n for bigInt x and integer n.\n// bigInt  mult(x,y)              //return x*y for bigInts x and y. This is faster when y<x.\n// bigInt  multMod(x,y,n)         //return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\n// boolean negative(x)            //is bigInt x negative?\n// bigInt  powMod(x,y,n)          //return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\n// bigInt  randBigInt(n,s)        //return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n// bigInt  randTruePrime(k)       //return a new, random, k-bit, true prime bigInt using Maurer's algorithm.\n// bigInt  randProbPrime(k)       //return a new, random, k-bit, probable prime bigInt (probability it's composite less than 2^-80).\n// bigInt  str2bigInt(s,b,n,m)    //return a bigInt for number represented in string s in base b with at least n bits and m array elements\n// bigInt  sub(x,y)               //return (x-y) for bigInts x and y.  Negative answers will be 2s complement\n// bigInt  trim(x,k)              //return a copy of x with exactly k leading zero elements\n//\n//\n// The following functions each have a non-underscored version, which most users should call instead.\n// These functions each write to a single parameter, and the caller is responsible for ensuring the array\n// passed in is large enough to hold the result.\n//\n// void    addInt_(x,n)          //do x=x+n where x is a bigInt and n is an integer\n// void    add_(x,y)             //do x=x+y for bigInts x and y\n// void    copy_(x,y)            //do x=y on bigInts x and y\n// void    copyInt_(x,n)         //do x=n on bigInt x and integer n\n// void    GCD_(x,y)             //set x to the greatest common divisor of bigInts x and y, (y is destroyed).  (This never overflows its array).\n// boolean inverseMod_(x,n)      //do x=x**(-1) mod n, for bigInts x and n. Returns 1 (0) if inverse does (doesn't) exist\n// void    mod_(x,n)             //do x=x mod n for bigInts x and n. (This never overflows its array).\n// void    mult_(x,y)            //do x=x*y for bigInts x and y.\n// void    multMod_(x,y,n)       //do x=x*y  mod n for bigInts x,y,n.\n// void    powMod_(x,y,n)        //do x=x**y mod n, where x,y,n are bigInts (n is odd) and ** is exponentiation.  0**0=1.\n// void    randBigInt_(b,n,s)    //do b = an n-bit random BigInt. if s=1, then nth bit (most significant bit) is set to 1. n>=1.\n// void    randTruePrime_(ans,k) //do ans = a random k-bit true random prime (not just probable prime) with 1 in the msb.\n// void    sub_(x,y)             //do x=x-y for bigInts x and y. Negative answers will be 2s complement.\n//\n// The following functions do NOT have a non-underscored version.\n// They each write a bigInt result to one or more parameters.  The caller is responsible for\n// ensuring the arrays passed in are large enough to hold the results.\n//\n// void addShift_(x,y,ys)       //do x=x+(y<<(ys*bpe))\n// void carry_(x)               //do carries and borrows so each element of the bigInt x fits in bpe bits.\n// void divide_(x,y,q,r)        //divide x by y giving quotient q and remainder r\n// int  divInt_(x,n)            //do x=floor(x/n) for bigInt x and integer n, and return the remainder. (This never overflows its array).\n// void eGCD_(x,y,d,a,b)        //sets a,b,d to positive bigInts such that d = GCD_(x,y) = a*x-b*y\n// void halve_(x)               //do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement.  (This never overflows its array).\n// void leftShift_(x,n)         //left shift bigInt x by n bits.  n<bpe.\n// void linComb_(x,y,a,b)       //do x=a*x+b*y for bigInts x and y and integers a and b\n// void linCombShift_(x,y,b,ys) //do x=x+b*(y<<(ys*bpe)) for bigInts x and y, and integers b and ys\n// void mont_(x,y,n,np)         //Montgomery multiplication (see comments where the function is defined)\n// void multInt_(x,n)           //do x=x*n where x is a bigInt and n is an integer.\n// void rightShift_(x,n)        //right shift bigInt x by n bits.  0 <= n < bpe. (This never overflows its array).\n// void squareMod_(x,n)         //do x=x*x  mod n for bigInts x,n\n// void subShift_(x,y,ys)       //do x=x-(y<<(ys*bpe)). Negative answers will be 2s complement.\n//\n// The following functions are based on algorithms from the _Handbook of Applied Cryptography_\n//    powMod_()           = algorithm 14.94, Montgomery exponentiation\n//    eGCD_,inverseMod_() = algorithm 14.61, Binary extended GCD_\n//    GCD_()              = algorothm 14.57, Lehmer's algorithm\n//    mont_()             = algorithm 14.36, Montgomery multiplication\n//    divide_()           = algorithm 14.20  Multiple-precision division\n//    squareMod_()        = algorithm 14.16  Multiple-precision squaring\n//    randTruePrime_()    = algorithm  4.62, Maurer's algorithm\n//    millerRabin()       = algorithm  4.24, Miller-Rabin algorithm\n//\n// Profiling shows:\n//     randTruePrime_() spends:\n//         10% of its time in calls to powMod_()\n//         85% of its time in calls to millerRabin()\n//     millerRabin() spends:\n//         99% of its time in calls to powMod_()   (always with a base of 2)\n//     powMod_() spends:\n//         94% of its time in calls to mont_()  (almost always with x==y)\n//\n// This suggests there are several ways to speed up this library slightly:\n//     - convert powMod_ to use a Montgomery form of k-ary window (or maybe a Montgomery form of sliding window)\n//         -- this should especially focus on being fast when raising 2 to a power mod n\n//     - convert randTruePrime_() to use a minimum r of 1/3 instead of 1/2 with the appropriate change to the test\n//     - tune the parameters in randTruePrime_(), including c, m, and recLimit\n//     - speed up the single loop in mont_() that takes 95% of the runtime, perhaps by reducing checking\n//       within the loop when all the parameters are the same length.\n//\n// There are several ideas that look like they wouldn't help much at all:\n//     - replacing trial division in randTruePrime_() with a sieve (that speeds up something taking almost no time anyway)\n//     - increase bpe from 15 to 30 (that would help if we had a 32*32->64 multiplier, but not with JavaScript's 32*32->32)\n//     - speeding up mont_(x,y,n,np) when x==y by doing a non-modular, non-Montgomery square\n//       followed by a Montgomery reduction.  The intermediate answer will be twice as long as x, so that\n//       method would be slower.  This is unfortunate because the code currently spends almost all of its time\n//       doing mont_(x,x,...), both for randTruePrime_() and powMod_().  A faster method for Montgomery squaring\n//       would have a large impact on the speed of randTruePrime_() and powMod_().  HAC has a couple of poorly-worded\n//       sentences that seem to imply it's faster to do a non-modular square followed by a single\n//       Montgomery reduction, but that's obviously wrong.\n////////////////////////////////////////////////////////////////////////////////////////\n\nexport type Bool = 1 | 0\n\n//globals\nexport var bpe = 0 //bits stored per array element\nvar mask = 0 //AND this with an array element to chop it down to bpe bits\nvar radix = mask + 1 //equals 2^bpe.  A single 1 bit to the left of the last bit of mask.\n\n//the digits for converting to different bases\nvar digitsStr =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\\\\\'\"+-'\n\n//initialize the global variables\n\n//bpe=number of bits in the mantissa on this platform\nfor (bpe = 0; 1 << (bpe + 1) > 1 << bpe; bpe++);\nbpe >>= 1 //bpe=number of bits in one element of the array representing the bigInt\nmask = (1 << bpe) - 1 //AND the mask with an integer to get its bpe least significant bits\nradix = mask + 1 //2^bpe.  a single 1 bit to the left of the first bit of mask\nexport var one = int2bigInt(1, 1, 1) //constant used in powMod_()\nexport var zero = int2bigInt(0, 1, 1)\n\n//the following global variables are scratchpad memory to\n//reduce dynamic memory allocation in the inner loop\nvar t: number[] | number = new Array(0)\nvar ss = t //used in mult_()\nvar s0 = t //used in multMod_(), squareMod_()\n// var s1=t;    //used in powMod_(), multMod_(), squareMod_()\n// var s2=t;    //used in powMod_(), multMod_()\nvar s3 = t //used in powMod_()\nvar s4 = t,\n    s5 = t //used in mod_()\nvar s6 = t //used in bigInt2str()\nvar s7 = t //used in powMod_()\nvar T = t //used in GCD_()\nvar sa = t //used in mont_()\nvar mr_x1 = t,\n    mr_r = t,\n    mr_a = t, //used in millerRabin()\n    eg_v = t,\n    eg_u = t,\n    eg_A = t,\n    eg_B = t,\n    eg_C = t,\n    eg_D = t, //used in eGCD_(), inverseMod_()\n    //, md_q1=t, md_q2=t, md_q3=t, md_r=t, md_r1=t, md_r2=t, md_tt=t, //used in mod_()\n\n    primes = t,\n    pows = t,\n    s_i = t,\n    s_i2 = t,\n    s_R = t,\n    s_rm = t,\n    s_q = t,\n    s_n1 = t,\n    s_a = t,\n    s_r2 = t,\n    s_n = t,\n    s_b = t,\n    s_d = t,\n    s_x1 = t,\n    s_x2 = t,\n    s_aa = t, //used in randTruePrime_()\n    rpprb = t //used in randProbPrimeRounds() (which also uses \"primes\")\n\n////////////////////////////////////////////////////////////////////////////////////////\n\nvar k, buff\n\n/**\n * return array of all primes less than integer n\n *\n * @param {number} n\n * @returns {number[]}\n */\nexport function findPrimes(n: number): number[] {\n  var i, s, p, ans\n  s = new Array(n)\n  for (i = 0; i < n; i++) s[i] = 0\n  s[0] = 2\n  p = 0 //first p elements of s are primes, the rest are a sieve\n  for (; s[p] < n; ) {\n    //s[p] is the pth prime\n    for (\n      i = s[p] * s[p];\n      i < n;\n      i += s[p] //mark multiples of s[p]\n    )\n      s[i] = 1\n    p++\n    s[p] = s[p - 1] + 1\n    for (; s[p] < n && s[s[p]]; s[p]++); //find next prime (where s[p]==0)\n  }\n  ans = new Array(p)\n  for (i = 0; i < p; i++) ans[i] = s[i]\n  return ans\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x is a bigInt, and b is an integer, with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number} b\n * @returns {(0 | 1)}\n */\nexport function millerRabinInt(x: number[], b: number): Bool {\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copyInt_(mr_a, b)\n  return millerRabin(x, mr_a)\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x and b are bigInts with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number[]} b\n * @returns {(0 | 1)}\n */\nexport function millerRabin(x: number[], b: number[]): Bool {\n  var i, j, k, s\n\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copy_(mr_a, b)\n  copy_(mr_r, x)\n  copy_(mr_x1, x)\n\n  addInt_(mr_r, -1)\n  addInt_(mr_x1, -1)\n\n  //s=the highest power of two that divides mr_r\n  k = 0\n  for (i = 0; i < mr_r.length; i++)\n    for (j = 1; j < mask; j <<= 1)\n      if (x[i] & j) {\n        s = k < mr_r.length + bpe ? k : 0\n        i = mr_r.length\n        j = mask\n      } else k++\n\n  if (s) rightShift_(mr_r, s)\n\n  powMod_(mr_a, mr_r, x)\n\n  if (!equalsInt(mr_a, 1) && !equals(mr_a, mr_x1)) {\n    j = 1\n    //$off\n    while (j <= s - 1 && !equals(mr_a, mr_x1)) {\n      squareMod_(mr_a, x)\n      if (equalsInt(mr_a, 1)) {\n        return 0\n      }\n      j++\n    }\n    if (!equals(mr_a, mr_x1)) {\n      return 0\n    }\n  }\n  return 1\n}\n\n/**\n * returns how many bits long the bigInt is, not counting leading zeros.\n *\n * @param {number[]} x\n * @returns {number}\n */\nexport function bitSize(x: number[]): number {\n  var j, z, w\n  for (j = x.length - 1; x[j] == 0 && j > 0; j--);\n  for (z = 0, w = x[j]; w; w >>= 1, z++);\n  z += bpe * j\n  return z\n}\n\n/**\n * return a copy of x with at least n elements, adding leading zeros if needed\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\nexport function expand(x: number[], n: number): number[] {\n  var ans = int2bigInt(0, (x.length > n ? x.length : n) * bpe, 0)\n  copy_(ans, x)\n  return ans\n}\n\n/**\n * return a k-bit true random prime using Maurer's algorithm.\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\n/* export function randTruePrime(k: number): number[] {\n  var ans = int2bigInt(0, k, 0)\n  randTruePrime_(ans, k)\n  return trim(ans, 1)\n} */\n\n/**\n * return a k-bit random probable prime with probability of error < 2^-80\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\n/* export function randProbPrime(k: number): number[] {\n  if (k >= 600) return randProbPrimeRounds(k, 2) //numbers from HAC table 4.3\n  if (k >= 550) return randProbPrimeRounds(k, 4)\n  if (k >= 500) return randProbPrimeRounds(k, 5)\n  if (k >= 400) return randProbPrimeRounds(k, 6)\n  if (k >= 350) return randProbPrimeRounds(k, 7)\n  if (k >= 300) return randProbPrimeRounds(k, 9)\n  if (k >= 250) return randProbPrimeRounds(k, 12) //numbers from HAC table 4.4\n  if (k >= 200) return randProbPrimeRounds(k, 15)\n  if (k >= 150) return randProbPrimeRounds(k, 18)\n  if (k >= 100) return randProbPrimeRounds(k, 27)\n  return randProbPrimeRounds(k, 40) //number from HAC remark 4.26 (only an estimate)\n} */\n\n/**\n * return a k-bit probable random prime using n rounds of Miller Rabin\n * (after trial division with small primes)\n *\n * @export\n * @param {number} k\n * @param {number} n\n * @returns {number[]}\n */\n/* export function randProbPrimeRounds(k: number, n: number): number[] {\n  var ans, i, divisible, B\n  B = 30000 //B is largest prime to use in trial division\n  ans = int2bigInt(0, k, 0)\n\n  //optimization: try larger and smaller B to find the best limit.\n\n  if (primes.length === 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (rpprb.length !== ans.length) rpprb = dup(ans)\n\n  for (;;) {\n    //keep trying random values for ans until one appears to be prime\n    //optimization: pick a random number times L=2*3*5*...*p, plus a\n    //   random element of the list of all numbers in [0,L) not divisible by any prime up to p.\n    //   This can reduce the amount of random number generation.\n\n    randBigInt_(ans, k, 0) //ans = a random odd number to check\n    ans[0] |= 1\n    divisible = 0\n\n    //check ans for divisibility by small primes up to B\n    for (i = 0; i < primes.length && primes[i] <= B; i++)\n      if (modInt(ans, primes[i]) === 0 && !equalsInt(ans, primes[i])) {\n        divisible = 1\n        break\n      }\n\n    //optimization: change millerRabin so the base can be bigger than the number being checked, then eliminate the while here.\n\n    //do n rounds of Miller Rabin, with random bases less than ans\n    for (i = 0; i < n && !divisible; i++) {\n      randBigInt_(rpprb, k, 0)\n      while (\n        !greater(ans, rpprb) //pick a random rpprb that's < ans\n      )\n        randBigInt_(rpprb, k, 0)\n      if (!millerRabin(ans, rpprb)) divisible = 1\n    }\n\n    if (!divisible) return ans\n  }\n} */\n\n/**\n * return a new bigInt equal to (x mod n) for bigInts x and n.\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function mod(x: number[], n: number[]): number[] {\n  var ans = dup(x)\n  mod_(ans, n)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+n) where x is a bigInt and n is an integer.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\n/* export function addInt(x: number[], n: number): number[] {\n  var ans = expand(x, x.length + 1)\n  addInt_(ans, n)\n  return trim(ans, 1)\n} */\n\n/**\n * return x*y for bigInts x and y. This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function mult(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length + y.length)\n  mult_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.\n *\n * 0**0=1.\n *\n * Faster for odd n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function powMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  powMod_(\n    //this should work without the trim, but doesn't\n    ans,\n    trim(y, 2),\n    trim(n, 2),\n  )\n  return trim(ans, 1)\n}\n\n/**\n * Simple pow with no optimizations (in 40x times slower than jsbn's pow)\n * @param x bigInt\n * @param e\n */\nexport function pow(x: number[], e: number) {\n  let ans = dup(x);\n  e -= 1;\n  for(let i = 0; i < e; ++i) {\n    ans = mult(ans, x);\n  }\n  return trim(ans, 1);\n}\n\n/**\n * return (x-y) for bigInts x and y\n *\n * Negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function sub(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  sub_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+y) for bigInts x and y\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function add(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  add_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**(-1) mod n) for bigInts x and n.\n *\n * If no inverse exists, it returns null\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(number[] | null)}\n */\n/* export function inverseMod(x: number[], n: number[]): number[] | null {\n  var ans = expand(x, n.length)\n  var s = inverseMod_(ans, n)\n  return s ? trim(ans, 1) : null\n} */\n\n/**\n * return (x*y mod n) for bigInts x,y,n.\n *\n * For greater speed, let y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function multMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  multMod_(ans, y, n)\n  return trim(ans, 1)\n}\n\n/**\n * generate a k-bit true random prime using Maurer's algorithm, and put it into ans.\n *\n * The bigInt ans must be large enough to hold it.\n *\n * @export\n * @param {number[]} ans\n * @param {number} k\n * @return {void}\n */\n/* export function randTruePrime_(ans: number[], k: number): void {\n  var c, m, pm, dd, j, r, B, divisible, z, zz, recSize\n  var w\n  if (primes.length == 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (pows.length == 0) {\n    pows = new Array(512)\n    for (j = 0; j < 512; j++) {\n      pows[j] = Math.pow(2, j / 511 - 1)\n    }\n  }\n\n  //c and m should be tuned for a particular machine and value of k, to maximize speed\n  c = 0.1 //c=0.1 in HAC\n  m = 20 //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n  var recLimit = 20 //stop recursion when k <=recLimit.  Must have recLimit >= 2\n\n  if (s_i2.length != ans.length) {\n    s_i2 = dup(ans)\n    s_R = dup(ans)\n    s_n1 = dup(ans)\n    s_r2 = dup(ans)\n    s_d = dup(ans)\n    s_x1 = dup(ans) //TODO Seems like a bug in eslint, reports as unused\n    s_x2 = dup(ans)\n    s_b = dup(ans)\n    s_n = dup(ans)\n    s_i = dup(ans)\n    s_rm = dup(ans)\n    s_q = dup(ans)\n    s_a = dup(ans)\n    s_aa = dup(ans)\n  }\n\n  if (k <= recLimit) {\n    //generate small random primes by trial division up to its square root\n    pm = (1 << ((k + 2) >> 1)) - 1 //pm is binary number with all ones, just over sqrt(2^k)\n    copyInt_(ans, 0)\n    for (dd = 1; dd; ) {\n      dd = 0\n      ans[0] = 1 | (1 << (k - 1)) | Math.floor(Math.random() * (1 << k)) //random, k-bit, odd integer, with msb 1\n      for (j = 1; j < primes.length && (primes[j] & pm) == primes[j]; j++) {\n        //trial division by all primes 3...sqrt(2^k)\n        if (0 == ans[0] % primes[j]) {\n          dd = 1\n          break\n        }\n      }\n    }\n    carry_(ans)\n    return\n  }\n\n  B = c * k * k //try small primes up to B (or all the primes[] array if the largest is less than B).\n  if (k > 2 * m)\n    //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n    for (r = 1; k - k * r <= m; ) r = pows[Math.floor(Math.random() * 512)] //r=Math.pow(2,Math.random()-1);\n  else r = 0.5\n\n  //simulation suggests the more complex algorithm using r=.333 is only slightly faster.\n\n  recSize = Math.floor(r * k) + 1\n\n  randTruePrime_(s_q, recSize)\n  copyInt_(s_i2, 0)\n  s_i2[Math.floor((k - 2) / bpe)] |= 1 << ((k - 2) % bpe) //s_i2=2^(k-2)\n  divide_(s_i2, s_q, s_i, s_rm) //s_i=floor((2^(k-1))/(2q))\n\n  z = bitSize(s_i)\n\n  for (;;) {\n    for (;;) {\n      //generate z-bit numbers until one falls in the range [0,s_i-1]\n      randBigInt_(s_R, z, 0)\n      if (greater(s_i, s_R)) break\n    } //now s_R is in the range [0,s_i-1]\n    addInt_(s_R, 1) //now s_R is in the range [1,s_i]\n    add_(s_R, s_i) //now s_R is in the range [s_i+1,2*s_i]\n\n    copy_(s_n, s_q)\n    mult_(s_n, s_R)\n    multInt_(s_n, 2)\n    addInt_(s_n, 1) //s_n=2*s_R*s_q+1\n\n    copy_(s_r2, s_R)\n    multInt_(s_r2, 2) //s_r2=2*s_R\n\n    //check s_n for divisibility by small primes up to B\n    for (divisible = 0, j = 0; j < primes.length && primes[j] < B; j++)\n      if (modInt(s_n, primes[j]) == 0 && !equalsInt(s_n, primes[j])) {\n        divisible = 1\n        break\n      }\n\n    if (!divisible)\n      if (!millerRabinInt(s_n, 2))\n        //if it passes small primes check, then try a single Miller-Rabin base 2\n        //this line represents 75% of the total runtime for randTruePrime_\n        divisible = 1\n\n    if (!divisible) {\n      //if it passes that test, continue checking s_n\n      addInt_(s_n, -3)\n      for (j = s_n.length - 1; s_n[j] == 0 && j > 0; j--); //strip leading zeros\n      for (zz = 0, w = s_n[j]; w; w >>= 1, zz++);\n      zz += bpe * j //zz=number of bits in s_n, ignoring leading zeros\n      for (;;) {\n        //generate z-bit numbers until one falls in the range [0,s_n-1]\n        randBigInt_(s_a, zz, 0)\n        if (greater(s_n, s_a)) break\n      } //now s_a is in the range [0,s_n-1]\n      addInt_(s_n, 3) //now s_a is in the range [0,s_n-4]\n      addInt_(s_a, 2) //now s_a is in the range [2,s_n-2]\n      copy_(s_b, s_a)\n      copy_(s_n1, s_n)\n      addInt_(s_n1, -1)\n      powMod_(s_b, s_n1, s_n) //s_b=s_a^(s_n-1) modulo s_n\n      addInt_(s_b, -1)\n      if (isZero(s_b)) {\n        copy_(s_b, s_a)\n        powMod_(s_b, s_r2, s_n)\n        addInt_(s_b, -1)\n        copy_(s_aa, s_n)\n        copy_(s_d, s_b)\n        GCD_(s_d, s_n) //if s_b and s_n are relatively prime, then s_n is a prime\n        if (equalsInt(s_d, 1)) {\n          copy_(ans, s_aa)\n          return //if we've made it this far, then s_n is absolutely guaranteed to be prime\n        }\n      }\n    }\n  }\n} */\n\n/**\n * Return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n *\n * @export\n * @param {number} n\n * @param {number} s\n * @returns {number[]}\n */\n/* export function randBigInt(n: number, s: number): number[] {\n  var a, b\n  a = Math.floor((n - 1) / bpe) + 2 //# array elements to hold the BigInt with a leading 0 element\n  b = int2bigInt(0, 0, a)\n  randBigInt_(b, n, s)\n  return b\n} */\n\n/**\n * Set b to an n-bit random BigInt.  If s=1, then the most significant of those n bits is set to 1.\n *\n * Array b must be big enough to hold the result. Must have n>=1\n *\n * @export\n * @param {number[]} b\n * @param {number} n\n * @param {number} s\n * @return {void}\n */\n/* export function randBigInt_(b: number[], n: number, s: number): void {\n  var i, a\n  for (i = 0; i < b.length; i++) b[i] = 0\n  a = Math.floor((n - 1) / bpe) + 1 //# array elements to hold the BigInt\n  for (i = 0; i < a; i++) {\n    b[i] = Math.floor(Math.random() * (1 << (bpe - 1)))\n  }\n  b[a - 1] &= (2 << ((n - 1) % bpe)) - 1\n  if (s == 1) b[a - 1] |= 1 << ((n - 1) % bpe)\n} */\n\n/**\n * Return the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function GCD(x: number[], y: number[]): number[] {\n  var xc, yc\n  xc = dup(x)\n  yc = dup(y)\n  GCD_(xc, yc)\n  return xc\n}\n\n/**\n * set x to the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * y is destroyed.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n */\nexport function GCD_(x: number[], y: number[]): void {\n  var i: number, xp: number, yp: number, A: number, B, C: number, D: number, q, sing\n  var qp\n  if (T.length !== x.length) T = dup(x)\n\n  sing = 1\n  while (sing) {\n    //while y has nonzero elements other than y[0]\n    sing = 0\n    for (\n      i = 1;\n      i < y.length;\n      i++ //check if y has nonzero elements other than 0\n    )\n      if (y[i]) {\n        sing = 1\n        break\n      }\n    if (!sing) break //quit when y all zero elements except possibly y[0]\n\n    for (i = x.length; !x[i] && i >= 0; i--); //find most significant element of x\n    xp = x[i]\n    yp = y[i]\n    A = 1\n    B = 0\n    C = 0\n    D = 1\n    while (yp + C && yp + D) {\n      q = Math.floor((xp + A) / (yp + C))\n      qp = Math.floor((xp + B) / (yp + D))\n      if (q != qp) break\n      t = A - q * C\n      A = C\n      C = t //  do (A,B,xp, C,D,yp) = (C,D,yp, A,B,xp) - q*(0,0,0, C,D,yp)\n      t = B - q * D\n      B = D\n      D = t\n      t = xp - q * yp\n      xp = yp\n      yp = t\n    }\n    if (B) {\n      copy_(T, x)\n      linComb_(x, y, A, B) //x=A*x+B*y\n      linComb_(y, T, D, C) //y=D*y+C*T\n    } else {\n      mod_(x, y)\n      copy_(T, x)\n      copy_(x, y)\n      copy_(y, T)\n    }\n  }\n  if (y[0] === 0) return\n  t = modInt(x, y[0])\n  copyInt_(x, y[0])\n  y[0] = t\n  while (y[0]) {\n    x[0] %= y[0]\n    t = x[0]\n    x[0] = y[0]\n    y[0] = t\n  }\n}\n\n/**\n * do x=x**(-1) mod n, for bigInts x and n.\n *\n * If no inverse exists, it sets x to zero and returns 0, else it returns 1.\n * The x array must be at least as large as the n array.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(0 | 1)}\n */\n/* export function inverseMod_(x: number[], n: number[]): Bool {\n  var k = 1 + 2 * Math.max(x.length, n.length)\n\n  if (!(x[0] & 1) && !(n[0] & 1)) {\n    //if both inputs are even, then inverse doesn't exist\n    copyInt_(x, 0)\n    return 0\n  }\n\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_v = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n\n  copy_(eg_u, x)\n  copy_(eg_v, n)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while eg_u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if eg_A==eg_B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, n)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(eg_v[0] & 1)) {\n      //while eg_v is even\n      halve_(eg_v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if eg_C==eg_D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, n)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(eg_v, eg_u)) {\n      //eg_v <= eg_u\n      sub_(eg_u, eg_v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //eg_v > eg_u\n      sub_(eg_v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n\n    if (equalsInt(eg_u, 0)) {\n      while (\n        negative(eg_C) //make sure answer is nonnegative\n      )\n        add_(eg_C, n)\n      copy_(x, eg_C)\n\n      if (!equalsInt(eg_v, 1)) {\n        //if GCD_(x,n)!=1, then there is no inverse\n        copyInt_(x, 0)\n        return 0\n      }\n      return 1\n    }\n  }\n} */\n\n/**\n * return x**(-1) mod n, for integers x and n.\n *\n * Return 0 if there is no inverse\n *\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nexport function inverseModInt(x: number, n: number): number {\n  var a = 1,\n      b = 0,\n      t\n  for (;;) {\n    if (x === 1) return a\n    if (x === 0) return 0\n    b -= a * Math.floor(n / x)\n    //$off\n    n %= x\n\n    if (n === 1) return b //to avoid negatives, change this b to n-b, and each -= to +=\n    if (n === 0) return 0\n    a -= b * Math.floor(x / n)\n    //$off\n    x %= n\n  }\n  /*::\n  declare var never: empty\n  return never\n  */\n}\n\n//this deprecated function is for backward compatibility only.\n/* function inverseModInt_(x: number, n: number) {\n  return inverseModInt(x, n)\n} */\n\n/**\n * Given positive bigInts x and y, change the bigints v, a, and b to positive bigInts such that:\n *\n *      v = GCD_(x,y) = a*x-b*y\n *\n * The bigInts v, a, b, must have exactly as many elements as the larger of x and y.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} v\n * @param {number[]} a\n * @param {number[]} b\n * @return {void}\n */\nexport function eGCD_(\n  x: number[],\n  y: number[],\n  v: number[],\n  a: number[],\n  b: number[],\n): void {\n  var g = 0\n  var k = Math.max(x.length, y.length)\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n  while (!(x[0] & 1) && !(y[0] & 1)) {\n    //while x and y both even\n    halve_(x)\n    halve_(y)\n    g++\n  }\n  copy_(eg_u, x)\n  copy_(v, y)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if A==B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, y)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(v[0] & 1)) {\n      //while v is even\n      halve_(v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if C==D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, y)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(v, eg_u)) {\n      //v<=u\n      sub_(eg_u, v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //v>u\n      sub_(v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n    if (equalsInt(eg_u, 0)) {\n      while (negative(eg_C)) {\n        //make sure a (C) is nonnegative\n        add_(eg_C, y)\n        sub_(eg_D, x)\n      }\n      multInt_(eg_D, -1) ///make sure b (D) is nonnegative\n      copy_(a, eg_C)\n      copy_(b, eg_D)\n      leftShift_(v, g)\n      return\n    }\n  }\n}\n\n/**\n * is bigInt x negative?\n *\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function negative(x: number[]) {\n  //TODO Flow Bool type inference\n  return (x[x.length - 1] >> (bpe - 1)) & 1\n}\n\n/**\n * is (x << (shift*bpe)) > y?\n *\n * x and y are nonnegative bigInts\n * shift is a nonnegative integer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} shift\n * @returns {(1 | 0)}\n */\nexport function greaterShift(x: number[], y: number[], shift: number): Bool {\n  var i,\n      kx = x.length,\n      ky = y.length\n  k = kx + shift < ky ? kx + shift : ky\n  for (i = ky - 1 - shift; i < kx && i >= 0; i++) if (x[i] > 0) return 1 //if there are nonzeros in x to the left of the first column of y, then x is bigger\n  for (i = kx - 1 + shift; i < ky; i++) if (y[i] > 0) return 0 //if there are nonzeros in y to the left of the first column of x, then x is not bigger\n  for (i = k - 1; i >= shift; i--)\n    if (x[i - shift] > y[i]) return 1\n    else if (x[i - shift] < y[i]) return 0\n  return 0\n}\n\n/**\n * is x > y?\n *\n * x and y both nonnegative\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function greater(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n\n  for (i = x.length; i < y.length; i++) if (y[i]) return 0 //y has more digits\n\n  for (i = y.length; i < x.length; i++) if (x[i]) return 1 //x has more digits\n\n  for (i = k - 1; i >= 0; i--)\n    if (x[i] > y[i]) return 1\n    else if (x[i] < y[i]) return 0\n  return 0\n}\n\n/**\n * divide x by y giving quotient q and remainder r.\n *\n *     q = floor(x/y)\n *     r = x mod y\n *\n * All 4 are bigints.\n *\n * * x must have at least one leading zero element.\n * * y must be nonzero.\n * * q and r must be arrays that are exactly the same length as x. (Or q can have more).\n * * Must have x.length >= y.length >= 2.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} q\n * @param {number[]} r\n * @return {void}\n */\nexport function divide_(\n  x: number[],\n  y: number[],\n  q: number[],\n  r: number[],\n): void {\n  var kx, ky\n  var i, j, y1, y2, c, a, b\n  copy_(r, x)\n  for (ky = y.length; y[ky - 1] === 0; ky--); //ky is number of elements in y, not including leading zeros\n\n  //normalize: ensure the most significant element of y has its highest bit set\n  b = y[ky - 1]\n  for (a = 0; b; a++) b >>= 1\n  a = bpe - a //a is how many bits to shift so that the high order bit of y is leftmost in its array element\n  leftShift_(y, a) //multiply both by 1<<a now, then divide both by that at the end\n  leftShift_(r, a)\n\n  //Rob Visser discovered a bug: the following line was originally just before the normalization.\n  for (kx = r.length; r[kx - 1] === 0 && kx > ky; kx--); //kx is number of elements in normalized x, not including leading zeros\n\n  copyInt_(q, 0) // q=0\n  while (!greaterShift(y, r, kx - ky)) {\n    // while (leftShift_(y,kx-ky) <= r) {\n    subShift_(r, y, kx - ky) //   r=r-leftShift_(y,kx-ky)\n    q[kx - ky]++ //   q[kx-ky]++;\n  } // }\n\n  for (i = kx - 1; i >= ky; i--) {\n    if (r[i] == y[ky - 1]) q[i - ky] = mask\n    else q[i - ky] = Math.floor((r[i] * radix + r[i - 1]) / y[ky - 1])\n\n    //The following for(;;) loop is equivalent to the commented while loop,\n    //except that the uncommented version avoids overflow.\n    //The commented loop comes from HAC, which assumes r[-1]==y[-1]==0\n    //  while (q[i-ky]*(y[ky-1]*radix+y[ky-2]) > r[i]*radix*radix+r[i-1]*radix+r[i-2])\n    //    q[i-ky]--;\n    for (;;) {\n      y2 = (ky > 1 ? y[ky - 2] : 0) * q[i - ky]\n      c = y2 >> bpe\n      y2 = y2 & mask\n      y1 = c + q[i - ky] * y[ky - 1]\n      c = y1 >> bpe\n      y1 = y1 & mask\n\n      if (\n        c == r[i]\n          ? y1 == r[i - 1] ? y2 > (i > 1 ? r[i - 2] : 0) : y1 > r[i - 1]\n          : c > r[i]\n      )\n        q[i - ky]--\n      else break\n    }\n\n    linCombShift_(r, y, -q[i - ky], i - ky) //r=r-q[i-ky]*leftShift_(y,i-ky)\n    if (negative(r)) {\n      addShift_(r, y, i - ky) //r=r+leftShift_(y,i-ky)\n      q[i - ky]--\n    }\n  }\n\n  rightShift_(y, a) //undo the normalization step\n  rightShift_(r, a) //undo the normalization step\n}\n\n/**\n * do carries and borrows so each element of the bigInt x fits in bpe bits.\n *\n * @param {number[]} x\n */\nexport function carry_(x: number[]): void {\n  var i, k, c, b\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * return x mod n for bigInt x and integer n.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number}\n */\nexport function modInt(x: number[], n: number): number {\n  var i,\n      c = 0\n  for (i = x.length - 1; i >= 0; i--) c = (c * radix + x[i]) % n\n  return c\n}\n\n/**\n * convert the integer t into a bigInt with at least the given number of bits.\n * the returned array stores the bigInt in bpe-bit chunks, little endian (buff[0] is least significant word)\n * Pad the array with leading zeros so that it has at least minSize elements.\n *\n * There will always be at least one leading 0 element.\n *\n * @export\n * @param {number} t\n * @param {number} bits\n * @param {number} minSize\n * @returns {number[]}\n */\nexport function int2bigInt(t: number, bits: number, minSize: number): number[] {\n  var i, k\n  k = Math.ceil(bits / bpe) + 1\n  k = minSize > k ? minSize : k\n  var buff = new Array(k)\n  copyInt_(buff, t)\n  return buff\n}\n\n/**\n * return the bigInt given a string representation in a given base.\n * Pad the array with leading zeros so that it has at least minSize elements.\n * If base=-1, then it reads in a space-separated list of array elements in decimal.\n *\n * The array will always have at least one leading zero, unless base=-1.\n *\n * @export\n * @param {string} s\n * @param {number} base\n * @param {number} [minSize]\n * @returns {number[]}\n */\nexport function str2bigInt(\n  s: string,\n  base: number,\n  minSize?: number,\n): number[] {\n  var d, i, x, y, kk\n  var k = s.length\n  if (base === -1) {\n    //comma-separated list of array elements in decimal\n    x = new Array(0)\n    for (;;) {\n      y = new Array(x.length + 1)\n      for (i = 0; i < x.length; i++) y[i + 1] = x[i]\n      y[0] = parseInt(s, 10) //TODO PERF Should we replace that with ~~ (not not)? https://jsperf.com/number-vs-parseint-vs-plus/7\n      x = y\n      d = s.indexOf(',', 0)\n      if (d < 1) break\n      //$off\n      s = s.substring(d + 1)\n      if (s.length == 0) break\n    }\n    //$off\n    if (x.length < minSize) {\n      //$off\n      y = new Array(minSize)\n      copy_(y, x)\n      return y\n    }\n    return x\n  }\n\n  x = int2bigInt(0, base * k, 0)\n  for (i = 0; i < k; i++) {\n    d = digitsStr.indexOf(s.substring(i, i + 1), 0)\n    if (base <= 36 && d >= 36)\n      //convert lowercase to uppercase if base<=36\n      d -= 26\n    if (d >= base || d < 0) {\n      //stop at first illegal character\n      break\n    }\n    multInt_(x, base)\n    addInt_(x, d)\n  }\n\n  for (k = x.length; k > 0 && !x[k - 1]; k--); //strip off leading zeros\n  //$off\n  k = minSize > k + 1 ? minSize : k + 1\n  //$off\n  y = new Array(k)\n  //$off\n  kk = k < x.length ? k : x.length\n  //$off\n  for (i = 0; i < kk; i++) y[i] = x[i]\n  //$off\n  for (; i < k; i++) y[i] = 0\n  return y\n}\n\n//return the bigInt given a string representation in a given base.\n//Pad the array with leading zeros so that it has at least minSize elements.\n//If base=-1, then it reads in a space-separated list of array elements in decimal.\n//The array will always have at least one leading zero, unless base=-1.\n// function str2bigInt(s,b,minSize) {\n//   var d, i, j, base, str, x, y, kk;\n//   if (typeof b === 'string') {\n//           base = b.length;\n//           str = b;\n//   } else {\n//           base = b;\n//           str = digitsStr;\n//   }\n//   var k=s.length;\n//   if (base==-1) { //comma-separated list of array elements in decimal\n//       x=new Array(0);\n//       for (;;) {\n//           y=new Array(x.length+1);\n//           for (i=0;i<x.length;i++)\n//               y[i+1]=x[i];\n//           y[0]=parseInt(s,10);\n//           x=y;\n//           d=s.indexOf(',',0);\n//           if (d<1)\n//               break;\n//           s=s.substring(d+1);\n//           if (s.length==0)\n//               break;\n//       }\n//       if (x.length<minSize) {\n//           y=new Array(minSize);\n//           copy_(y,x);\n//           return y;\n//       }\n//       return x;\n//   }\n\n//   x=int2bigInt(0,base*k,0);\n// for (i=0;i<k;i++) {\n//   d=str.indexOf(s.substring(i,i+1),0);\n//   if (base<=36 && d>=36) { //convert lowercase to uppercase if base<=36\n//       d-=26;\n//   }\n//   if (d>=base || d<0) {   //ignore illegal characters\n//   continue;\n//       }\n//       multInt_(x,base);\n//       addInt_(x,d);\n//   }\n\n//   for (k=x.length;k>0 && !x[k-1];k--); //strip off leading zeros\n//   k=minSize>k+1 ? minSize : k+1;\n//   y=new Array(k);\n//   kk=k<x.length ? k : x.length;\n//   for (i=0;i<kk;i++)\n//       y[i]=x[i];\n//   for (;i<k;i++)\n//       y[i]=0;\n//   return y;\n// }\n\n/**\n * is bigint x equal to integer y?\n *\n * y must have less than bpe bits\n *\n * @export\n * @param {number[]} x\n * @param {number} y\n * @returns {(1 | 0)}\n */\nexport function equalsInt(x: number[], y: number): Bool {\n  var i\n  if (x[0] != y) return 0\n  for (i = 1; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * are bigints x and y equal?\n *\n * this works even if x and y are different lengths and have arbitrarily many leading zeros\n *\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function equals(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) if (x[i] !== y[i]) return 0\n  if (x.length > y.length) {\n    for (; i < x.length; i++) if (x[i]) return 0\n  } else {\n    for (; i < y.length; i++) if (y[i]) return 0\n  }\n  return 1\n}\n\n/**\n * is the bigInt x equal to zero?\n *\n * @export\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function isZero(x: number[]): Bool {\n  var i\n  for (i = 0; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * Convert a bigInt into a string in a given base, from base 2 up to base 95.\n *\n * Base -1 prints the contents of the array representing the number.\n *\n * @export\n * @param {number[]} x\n * @param {number} base\n * @returns {string}\n */\nexport function bigInt2str(x: number[], base: number): string {\n  var i,\n      t,\n      s = ''\n\n  if (s6.length !== x.length) s6 = dup(x)\n  else copy_(s6, x)\n\n  if (base === -1) {\n    //return the list of array contents\n    for (i = x.length - 1; i > 0; i--) s += x[i] + ','\n    s += x[0]\n  } else {\n    //return it in the given base\n    while (!isZero(s6)) {\n      t = divInt_(s6, base) //t=s6 % base; s6=floor(s6/base);\n      s = digitsStr.substring(t, t + 1) + s\n    }\n  }\n  if (s.length === 0) s = '0'\n  return s\n}\n\n/**\n * Convert a bigInt into bytes\n * @param x bigInt\n * @param littleEndian byte order by default\n */\nexport function bigInt2bytes(x: number[], littleEndian = true) {\n  if(s6.length !== x.length) s6 = dup(x);\n  else copy_(s6, x);\n\n  const out: number[] = [];\n\n  //console.log('bigInt2bytes');\n  while(!isZero(s6)) {\n    t = divInt_(s6, 256); //t=s6 % base; s6=floor(s6/base);\n    out.push(t);\n    //console.log('bigInt2bytes', t);\n  }\n\n  if(littleEndian) {\n    out.reverse();\n  }\n\n  //console.log('bigInt2bytes', out);\n\n  return out;\n}\n\n/**\n * Compare two bigInts and return -1 if x is less, 0 if equals, 1 if greater\n * @param x bigInt\n * @param y bigInt\n */\nexport function cmp(x: number[], y: number[]) {\n  return greater(x, y) ? 1 : (equals(x, y) ? 0 : -1);\n}\n\n/* Object.assign(self, {\n  cmp,\n  str2bigInt,\n  int2bigInt,\n  bigInt2str,\n  one,\n  divide_,\n  divInt_,\n  dup,\n  negative\n}); */\n\n/**\n * Returns a duplicate of bigInt x\n *\n * @export\n * @param {number[]} x\n * @returns {number[]}\n */\nexport function dup(x: number[]): number[] {\n  var i\n  buff = Array(x.length)\n  copy_(buff, x)\n  return buff\n}\n\n/**\n * do x=y on bigInts x and y.\n *\n * x must be an array at least as big as y (not counting the leading zeros in y).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {void}\n */\nexport function copy_(x: number[], y: number[]): void {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) x[i] = y[i]\n  for (i = k; i < x.length; i++) x[i] = 0\n}\n\n/**\n * do x=y on bigInt x and integer y.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function copyInt_(x: number[], n: number): void {\n  var i, c\n  var len = x.length //TODO .length in for loop have perfomance costs. Bench this\n  for (c = n, i = 0; i < len; i++) {\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function addInt_(x: number[], n: number): void {\n  var i, k, c, b\n  x[0] += n\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n    if (!c) return //stop carrying as soon as the carry is zero\n  }\n}\n\n/**\n * right shift bigInt x by n bits.\n *\n *     0 <= n < bpe.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n */\nexport function rightShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = 0;\n      i < x.length - k;\n      i++ //right shift x by k elements\n    )\n      x[i] = x[i + k]\n    for (; i < x.length; i++) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - n)) | (x[i] >> n))\n  }\n  x[i] >>= n\n}\n\n/**\n * do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement\n *\n * @param {number[]} x\n * @returns {void}\n */\nexport function halve_(x: number[]): void {\n  var i\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - 1)) | (x[i] >> 1))\n  }\n  x[i] = (x[i] >> 1) | (x[i] & (radix >> 1)) //most significant bit stays the same\n}\n\n/**\n * left shift bigInt x by n bits\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function leftShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = x.length;\n      i >= k;\n      i-- //left shift x by k elements\n    )\n      x[i] = x[i - k]\n    for (; i >= 0; i--) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  if (!n) return\n  for (i = x.length - 1; i > 0; i--) {\n    x[i] = mask & ((x[i] << n) | (x[i - 1] >> (bpe - n)))\n  }\n  x[i] = mask & (x[i] << n)\n}\n\n/**\n * do x=x*n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function multInt_(x: number[], n: number): void {\n  var i, k, c, b\n  if (!n) return\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i] * n\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * do x=floor(x/n) for bigInt x and integer n, and return the remainder\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number} remainder\n */\nexport function divInt_(x: number[], n: number): number {\n  var i,\n      r = 0,\n      s\n  for (i = x.length - 1; i >= 0; i--) {\n    s = r * radix + x[i]\n    x[i] = Math.floor(s / n)\n    r = s % n\n  }\n  return r\n}\n\n/**\n * do the linear combination x=a*x+b*y for bigInts x and y, and integers a and b.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} a\n * @param {number} b\n * @returns {void}\n */\nexport function linComb_(x: number[], y: number[], a: number, b: number): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  kk = x.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += a * x[i] + b * y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; i < kk; i++) {\n    c += a * x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do the linear combination x=a*x+b*(y<<(ys*bpe)) for bigInts x and y, and integers a, b and ys.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} b\n * @param {number} ys\n * @returns {void}\n */\nexport function linCombShift_(\n  x: number[],\n  y: number[],\n  b: number,\n  ys: number,\n): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + b * y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+(y<<(ys*bpe)) for bigInts x and y, and integer ys.\n *\n * x must be large enough to hold the answer.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function addShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-(y<<(ys*bpe)) for bigInts x and y, and integer ys\n *\n * x must be large enough to hold the answer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function subShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] - y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function sub_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] - y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function add_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] + y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x*y for bigInts x and y.\n *\n * This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function mult_(x: number[], y: number[]): void {\n  var i\n  if (ss.length != 2 * x.length) ss = new Array(2 * x.length)\n  copyInt_(ss, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(ss, x, y[i], i) //ss=1*ss+y[i]*(x<<(i*bpe))\n  copy_(x, ss)\n}\n\n/**\n * do x=x mod n for bigInts x and n\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function mod_(x: number[], n: number[]): void {\n  if (s4.length !== x.length) s4 = dup(x)\n  else copy_(s4, x)\n  if (s5.length !== x.length) s5 = dup(x)\n  divide_(s4, n, s5, x) //x = remainder of s4 / n\n}\n\n/**\n * do x=x*y mod n for bigInts x,y,n.\n *\n * for greater speed, let y<x.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function multMod_(x: number[], y: number[], n: number[]): void {\n  var i\n  if (s0.length != 2 * x.length) s0 = new Array(2 * x.length)\n  copyInt_(s0, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(s0, x, y[i], i) //s0=1*s0+y[i]*(x<<(i*bpe))\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * do x=x*x mod n for bigInts x,n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function squareMod_(x: number[], n: number[]): void {\n  var i, j, d, c, kx, kn, k\n  for (kx = x.length; kx > 0 && !x[kx - 1]; kx--); //ignore leading zeros in x\n  k = kx > n.length ? 2 * kx : 2 * n.length //k=# elements in the product, which is twice the elements in the larger of x and n\n  if (s0.length != k) s0 = new Array(k)\n  copyInt_(s0, 0)\n  for (i = 0; i < kx; i++) {\n    c = s0[2 * i] + x[i] * x[i]\n    s0[2 * i] = c & mask\n    c >>= bpe\n    for (j = i + 1; j < kx; j++) {\n      c = s0[i + j] + 2 * x[i] * x[j] + c\n      s0[i + j] = c & mask\n      c >>= bpe\n    }\n    s0[i + kx] = c\n  }\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * return x with exactly k leading zero elements\n *\n * @export\n * @param {number[]} x\n * @param {number} k\n * @returns {number[]}\n */\nexport function trim(x: number[], k: number): number[] {\n  var i, y\n  for (i = x.length; i > 0 && !x[i - 1]; i--);\n  y = new Array(i + k)\n  copy_(y, x)\n  return y\n}\n\n/**\n * do `x=x**y mod n`, where x,y,n are bigInts and `**` is exponentiation.  `0**0=1`.\n *\n * this is faster when n is odd.\n *\n * x usually needs to have as many elements as n.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function powMod_(x: number[], y: number[], n: number[]): void {\n  var k1, k2, kn, np\n  if (s7.length != n.length) s7 = dup(n)\n\n  //for even modulus, use a simple square-and-multiply algorithm,\n  //rather than using the more complex Montgomery algorithm.\n  if ((n[0] & 1) == 0) {\n    copy_(s7, x)\n    copyInt_(x, 1)\n    while (!equalsInt(y, 0)) {\n      if (y[0] & 1) multMod_(x, s7, n)\n      divInt_(y, 2)\n      squareMod_(s7, n)\n    }\n    return\n  }\n\n  //calculate np from n for the Montgomery multiplications\n  copyInt_(s7, 0)\n  for (kn = n.length; kn > 0 && !n[kn - 1]; kn--);\n  np = radix - inverseModInt(modInt(n, radix), radix)\n  s7[kn] = 1\n  multMod_(x, s7, n) // x = x * 2**(kn*bp) mod n\n\n  if (s3.length != x.length) s3 = dup(x)\n  else copy_(s3, x)\n  //$off\n  // @ts-ignore\n  for (k1 = y.length - 1; (k1 > 0) & !y[k1]; k1--); //k1=first nonzero element of y\n  if (y[k1] == 0) {\n    //anything to the 0th power is 1\n    copyInt_(x, 1)\n    return\n  }\n  for (k2 = 1 << (bpe - 1); k2 && !(y[k1] & k2); k2 >>= 1); //k2=position of first 1 bit in y[k1]\n  for (;;) {\n    if (!(k2 >>= 1)) {\n      //look at next bit of y\n      k1--\n      if (k1 < 0) {\n        mont_(x, one, n, np)\n        return\n      }\n      k2 = 1 << (bpe - 1)\n    }\n    mont_(x, x, n, np)\n\n    if (k2 & y[k1])\n      //if next bit is a 1\n      mont_(x, s3, n, np)\n  }\n}\n\n/**\n * do x=x*y*Ri mod n for bigInts x,y,n,\n * where Ri = 2**(-kn*bpe) mod n, and kn is the\n * number of elements in the n array, not\n * counting leading zeros.\n *\n * x array must have at least as many elemnts as the n array\n * It's OK if x and y are the same variable.\n *\n * must have:\n *  * x,y < n\n *  * n is odd\n *  * np = -(n^(-1)) mod radix\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @param {number} np\n * @return {void}\n */\nexport function mont_(x: number[], y: number[], n: number[], np: number): void {\n  var i, j, c, ui, t, ks\n  var kn = n.length\n  var ky = y.length\n\n  if (sa.length != kn) sa = new Array(kn)\n\n  copyInt_(sa, 0)\n\n  for (; kn > 0 && n[kn - 1] == 0; kn--); //ignore leading zeros of n\n  for (; ky > 0 && y[ky - 1] == 0; ky--); //ignore leading zeros of y\n  ks = sa.length - 1 //sa will never have more than this many nonzero elements.\n\n  //the following loop consumes 95% of the runtime for randTruePrime_() and powMod_() for large numbers\n  for (i = 0; i < kn; i++) {\n    t = sa[0] + x[i] * y[0]\n    ui = ((t & mask) * np) & mask //the inner \"& mask\" was needed on Safari (but not MSIE) at one time\n    c = (t + ui * n[0]) >> bpe\n    t = x[i]\n\n    //do sa=(sa+x[i]*y+ui*n)/b   where b=2**bpe.  Loop is unrolled 5-fold for speed\n    j = 1\n    for (; j < ky - 4; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ky; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn - 4; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ks; ) {\n      c += sa[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    sa[j - 1] = c & mask\n  }\n\n  if (!greater(n, sa)) sub_(sa, n)\n  copy_(x, sa)\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport sequentialDom from \"../../helpers/sequentialDom\";\nimport { UserProfilePhoto, ChatPhoto, InputFileLocation } from \"../../layer\";\nimport { NULL_PEER_ID, REPLIES_PEER_ID } from \"../mtproto/mtproto_config\";\nimport RichTextProcessor from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager from \"./appUsersManager\";\n\ntype PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  public isAvatarCached(peerId: PeerId) {\n    return !!this.savedAvatarURLs[peerId];\n  }\n  \n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n\n    let cached = false;\n    let getAvatarPromise: Promise<string>;\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      //console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation', \n        pFlags: {},\n        peer: inputPeer, \n        photo_id: photo.photo_id\n      };\n\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n      }\n\n      const downloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = appDownloadManager.download(downloadOptions);\n      getAvatarPromise = saved[size] = promise.then(blob => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else if(typeof(saved[size]) !== 'string') {\n      getAvatarPromise = saved[size] as Promise<any>;\n    } else {\n      getAvatarPromise = Promise.resolve(saved[size]);\n      cached = true;\n    }\n\n    return {cached, loadPromise: getAvatarPromise};\n  }\n\n  public putAvatar(\n    div: HTMLElement, \n    peerId: PeerId, \n    photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, \n    size: PeerPhotoSize, \n    img = new Image(), \n    onlyThumb = false\n  ) {\n    let {cached, loadPromise} = this.loadAvatar(peerId, photo, size);\n\n    img.classList.add('avatar-photo');\n\n    let renderThumbPromise: Promise<void>;\n    let callback: () => void;\n    let thumbImage: HTMLImageElement;\n    if(cached) {\n      // смотри в misc.ts: renderImageFromUrl\n      callback = () => {\n        replaceContent(div, img);\n        div.dataset.color = '';\n      };\n    } else {\n      const animate = rootScope.settings.animationsEnabled;\n      if(animate) {\n        img.classList.add('fade-in');\n      }\n\n      if(size === 'photo_big') { // let's load small photo first\n        const res = this.putAvatar(div, peerId, photo, 'photo_small');\n        renderThumbPromise = res.loadPromise;\n        thumbImage = res.thumbImage;\n      } else if(photo.stripped_thumb) {\n        thumbImage = new Image();\n        div.classList.add('avatar-relative');\n        thumbImage.classList.add('avatar-photo', 'avatar-photo-thumbnail');\n        const url = appPhotosManager.getPreviewURLFromBytes(photo.stripped_thumb);\n        renderThumbPromise = renderImageFromUrlPromise(thumbImage, url).then(() => {\n          replaceContent(div, thumbImage);\n        });\n      }\n\n      callback = () => {\n        if(thumbImage) {\n          div.append(img);\n        } else {\n          replaceContent(div, img);\n        }\n\n        setTimeout(() => {\n          if(div.childElementCount) {\n            sequentialDom.mutateElement(img, () => {\n              div.dataset.color = '';\n              \n              if(animate) {\n                img.classList.remove('fade-in');\n              }\n\n              if(thumbImage) {\n                thumbImage.remove();\n              }\n            });\n          }\n        }, animate ? 200 : 0);\n      };\n    }\n\n    const renderPromise = loadPromise\n    .then((url) => renderImageFromUrlPromise(img, url/* , false */))\n    .then(callback);\n\n    return {\n      cached, \n      loadPromise: renderThumbPromise || renderPromise,\n      thumbImage\n    };\n  }\n\n  public s(div: HTMLElement, innerHTML: string, color: string, icon: string) {\n    div.innerHTML = innerHTML;\n    div.dataset.color = color;\n    div.classList.remove('tgico-saved', 'tgico-deletedaccount', 'tgico-reply_filled');\n    icon && div.classList.add(icon);\n  }\n\n  // peerId === peerId || title\n  public putPhoto(div: HTMLElement, peerId: PeerId, isDialog = false, title = '', onlyThumb = false) {\n    const myId = rootScope.myId;\n    \n    //console.log('loadDialogPhoto location:', location, inputPeer);\n    if(peerId === myId && isDialog) {\n      this.s(div, '', '', 'tgico-saved');\n      return;\n    }\n    \n    if(peerId !== NULL_PEER_ID && peerId.isUser()) {\n      const user = appUsersManager.getUser(peerId);\n      if(user && user.pFlags && user.pFlags.deleted) {\n        this.s(div, '', appPeersManager.getPeerColorById(peerId), 'tgico-deletedaccount');\n        return;\n      }\n    }\n    \n    const photo = appPeersManager.getPeerPhoto(peerId);\n    const avatarAvailable = !!photo;\n    const avatarRendered = !!div.firstElementChild && !(div.firstElementChild as HTMLElement).classList.contains('emoji');\n    if(!avatarAvailable || !avatarRendered || !this.savedAvatarURLs[peerId]) {\n      let color = '';\n      if(peerId && (peerId !== myId || !isDialog)) {\n        color = appPeersManager.getPeerColorById(peerId);\n      }\n\n      if(peerId === REPLIES_PEER_ID) {\n        this.s(div, '', color, 'tgico-reply_filled');\n        return;\n      }\n\n      let abbr: string;\n      if(!title) {\n        const peer = appPeersManager.getPeer(peerId);\n        abbr = peer.initials ?? '';\n      } else {\n        abbr = RichTextProcessor.getAbbreviation(title);\n      }\n\n      this.s(div, abbr, color, '');\n      //return Promise.resolve(true);\n    }\n\n    if(avatarAvailable/*  && false */) {\n      const size: PeerPhotoSize = 'photo_small';\n      return this.putAvatar(div, peerId, photo, size, undefined, onlyThumb);\n    }\n  }\n}\n\nconst appAvatarsManager = new AppAvatarsManager();\nexport default appAvatarsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport const getMiddleware = () => {\r\n  let cleanupObj = {cleaned: false};\r\n  return {\r\n    clean: () => {\r\n      cleanupObj.cleaned = true;\r\n      cleanupObj = {cleaned: false};\r\n    },\r\n    get: (additionalCallback?: () => boolean) => {\r\n      const _cleanupObj = cleanupObj;\r\n      return () => {\r\n        return !_cleanupObj.cleaned && (!additionalCallback || additionalCallback());\r\n      };\r\n    }\r\n  };\r\n};\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nenum GROUP_CALL_STATE {\n  UNMUTED,\n  MUTED,\n  MUTED_BY_ADMIN,\n  CONNECTING,\n  CLOSED\n}\n\nexport default GROUP_CALL_STATE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { processSearchText, ProcessSearchTextOptions } from '../helpers/cleanSearchText';\n\nexport default class SearchIndex<SearchWhat> {\n  private fullTexts: Map<SearchWhat, string> = new Map();\n\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\n  constructor(private options?: ProcessSearchTextOptions, private minChars = 0) {\n  }\n\n  public indexObject(id: SearchWhat, searchText: string) {\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\n      return false;\n    } */\n\n    if(this.options && searchText.trim()) {\n      searchText = processSearchText(searchText, this.options);\n    }\n\n    if(!searchText) {\n      this.fullTexts.delete(id);\n      return false;\n    }\n\n    this.fullTexts.set(id, searchText);\n    \n    /* const shortIndexes = searchIndex.shortIndexes;\n    searchText.split(' ').forEach((searchWord) => {\n      let len = Math.min(searchWord.length, 3),\n        wordPart, i;\n      for(i = 1; i <= len; i++) {\n        wordPart = searchWord.substr(0, i);\n        if(shortIndexes[wordPart] === undefined) {\n          shortIndexes[wordPart] = [id];\n        } else {\n          shortIndexes[wordPart].push(id);\n        }\n      }\n    }); */\n  }\n\n  public search(query: string) {\n    const fullTexts = this.fullTexts;\n    //const shortIndexes = searchIndex.shortIndexes;\n\n    if(this.options) {\n      query = processSearchText(query, this.options);\n    }\n\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\n    const queryWords = query.split(' ');\n    const queryWordsLength = queryWords.length;\n    fullTexts.forEach((fullText, what) => {\n      let found = true;\n      let foundChars = 0;\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\n        const word = queryWords[i];\n        const idx = fullText.indexOf(word);\n        if(idx === -1 || (idx !== 0 && fullText[idx - 1] !== ' ')) { // * search only from word beginning\n          found = false;\n          break;\n        }\n\n        foundChars += word.length;\n      }\n\n      if(found) {\n        foundChars += queryWordsLength - 1;\n        const fullTextLength = fullText.length;\n        if(this.minChars <= foundChars || fullTextLength <= foundChars) {\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\n        }\n      }\n    });\n\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\n\n    //newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map(o => o.what));\n\n    /* const queryWords = query.split(' ');\n    let foundArr: number[];\n    for(let i = 0; i < queryWords.length; i++) {\n      const newFound = shortIndexes[queryWords[i].substr(0, 3)];\n      if(!newFound) {\n        foundArr = [];\n        break;\n      }\n      \n      if(foundArr === undefined || foundArr.length > newFound.length) {\n        foundArr = newFound;\n      }\n    }\n\n    for(let j = 0; j < foundArr.length; j++) {\n      let found = true;\n      let searchText = fullTexts[foundArr[j]];\n      for(let i = 0; i < queryWords.length; i++) {\n        if(searchText.indexOf(queryWords[i]) === -1) {\n          found = false;\n          break;\n        }\n      }\n\n      if(found) {\n        newFoundObjs[foundArr[j]] = true;\n      }\n    } */\n\n    return newFoundObjs2;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// Thanks to https://stackoverflow.com/a/49349813\r\nimport { clamp } from \"../helpers/number\";\r\n\r\n/**\r\n * Attibute modifier to create middle ellipsis\r\n * When the attribute value is left blank the ellipsis will be in the middle\r\n * When positive the attribute value will be used as a percentage\r\n * When negative the attribute value will be used as character index counted from the end\r\n * @example\r\n *   <div data-middle-ellipsis>A Javascript solution to middle ellipsis</div>\r\n *   <div data-middle-ellipsis=\"20\">A Javascript solution to middle ellipsis</div>\r\n *   <div data-middle-ellipsis=\"-3\">A Javascript solution to middle ellipsis</div>\r\n */\r\nconst ellipsis = '…';\r\nconst map: Map<HTMLElement, {\r\n  text: string,\r\n  textLength: number,\r\n  from: number,\r\n  multiplier: number,\r\n  font: string,\r\n  textWidth: number,\r\n  elementWidth: number\r\n}> = new Map();\r\n\r\nconst testQueue: Set<HTMLElement> = new Set();\r\nexport const fontFamily = 'Roboto, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\r\nconst fontSize = '16px';\r\nlet timeoutId: number;\r\n\r\nconst setTestQueue = () => {\r\n  cancelAnimationFrame(timeoutId);\r\n  timeoutId = window.requestAnimationFrame(testQueueElements);\r\n};\r\n\r\nconst testQueueElements = () => {\r\n  testQueue.forEach(testElement);\r\n  testQueue.clear();\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  for(const [key] of map) {\r\n    testQueue.add(key);\r\n  }\r\n  \r\n  setTestQueue();\r\n}, {capture: true, passive: true});\r\n\r\nconst testElement = (element: HTMLElement) => {\r\n  //const perf = performance.now();\r\n  // do not recalculate variables a second time\r\n  let mapped = map.get(element);\r\n  const firstTime = !mapped;\r\n\r\n  let {text, textLength, from, multiplier, font, textWidth, elementWidth} = mapped || {};\r\n  //console.log('[MEE] testElement got mapped', mapped);\r\n\r\n  if(firstTime) {\r\n    text = element.textContent;\r\n    textLength = text.length;\r\n    from = /* parseFloat(element.getAttribute(attributeName)) ||  */50;\r\n    multiplier = from > 0 && from / 100;\r\n\r\n    //const perf = performance.now();\r\n    font = `${element.dataset.fontWeight || 400} ${fontSize} ${fontFamily}`;\r\n    /* const computedStyle = window.getComputedStyle(elm, null);\r\n    font = `${computedStyle.getPropertyValue('font-weight')} ${computedStyle.getPropertyValue('font-size')} ${computedStyle.getPropertyValue('font-family')}`; */\r\n    //console.log('testMiddleEllipsis get computed style:', performance.now() - perf, font);\r\n\r\n    textWidth = getTextWidth(text, font);\r\n    //const perf = performance.now();\r\n    elementWidth = element.getBoundingClientRect().width;\r\n    //console.log('testMiddleEllipsis get offsetWidth:', performance.now() - perf, font);\r\n    mapped = {text, textLength, from, multiplier, font, textWidth, elementWidth};\r\n    map.set(element, mapped);\r\n\r\n    //console.log('[MEE] testElement map set', element);\r\n  }\r\n  \r\n  const newElementWidth = element.getBoundingClientRect().width;\r\n  const widthChanged = firstTime || elementWidth !== newElementWidth;\r\n  !firstTime && widthChanged && (mapped.elementWidth = elementWidth = newElementWidth);\r\n  \r\n  if(widthChanged) {\r\n    if(textWidth > elementWidth) {\r\n      element.setAttribute('title', text);\r\n      let smallerText = text;\r\n      let smallerWidth = elementWidth;\r\n      while(smallerText.length > 3) {\r\n        let smallerTextLength = smallerText.length;\r\n        const half = multiplier &&\r\n          clamp(multiplier * smallerTextLength << 0, 1, smallerTextLength - 2) ||\r\n          Math.max(smallerTextLength + from - 1, 1);\r\n        const half1 = smallerText.substr(0, half).replace(/\\s*$/,'');\r\n        const half2 = smallerText.substr(half + 1).replace(/^\\s*/,'');\r\n        smallerText = half1 + half2;\r\n        smallerWidth = getTextWidth(smallerText + ellipsis, font);\r\n        if(smallerWidth < elementWidth) {\r\n          element.textContent = half1 + ellipsis + half2;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // * set new width after cutting text\r\n      mapped.elementWidth = element.getBoundingClientRect().width;\r\n      //mapped.textWidth = smallerWidth;\r\n    } else {\r\n      element.removeAttribute('title');\r\n    }\r\n  }\r\n\r\n  //console.log('testMiddleEllipsis for element:', elm, performance.now() - perf);\r\n};\r\n\r\nlet context: CanvasRenderingContext2D;\r\n/**\r\n * Get the text width\r\n * @param {string} text\r\n * @param {string} font\r\n */\r\nfunction getTextWidth(text: string, font: string) {\r\n  //const perf = performance.now();\r\n  if(!context) {\r\n    const canvas = document.createElement('canvas');\r\n    context = canvas.getContext('2d');\r\n    context.font = font;\r\n  }\r\n\r\n  //context.font = font;\r\n  const metrics = context.measureText(text);\r\n  //console.log('getTextWidth perf:', performance.now() - perf);\r\n  return metrics.width;\r\n  //return Math.round(metrics.width);\r\n}\r\n\r\nexport class MiddleEllipsisElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    //console.log('[MEE]: connectedCallback before', map.has(this), testQueue.has(this), map.size, this.textContent, map);\r\n\r\n    map.set(this, null);\r\n    testQueue.add(this);\r\n    setTestQueue();\r\n    //testElement(this);\r\n\r\n    //console.log('[MEE]: connectedCallback after', map.has(this), map.size, testQueue.has(this), testQueue.size);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const deleted = map.delete(this);\r\n    //console.log('[MEE]: disconnectedCallback', deleted, map.has(this), map.size, this.textContent, map);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"middle-ellipsis-element\", MiddleEllipsisElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../rootScope\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport appMessagesManager from \"./appMessagesManager\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport RichTextProcessor from \"../richtextprocessor\";\r\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\r\nimport { MessageEntity, DraftMessage, MessagesSaveDraft } from \"../../layer\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport { deepEqual } from \"../../helpers/object\";\r\nimport { isObject } from \"../mtproto/bin_utils\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    stateStorage.get('drafts').then(drafts => {\r\n      this.drafts = drafts || {};\r\n    });\r\n\r\n    rootScope.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerID = appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft(peerID, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAllDrafts() {\r\n    return this.getAllDraftPromise || (\r\n      this.getAllDraftPromise = apiManager.invokeApi('messages.getAllDrafts')\r\n      .then((updates) => {\r\n        const p = apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n        p.then(() => {\r\n          apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n    if(typeof(draft1) !== typeof(draft2)) {\r\n      return false;\r\n    }\r\n\r\n    if(!isObject(draft1)) {\r\n      return true;\r\n    }\r\n\r\n    if(draft1._ !== draft2._) {\r\n      return false;\r\n    }\r\n  \r\n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\r\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\r\n        return false;\r\n      }\r\n  \r\n      if(!deepEqual(draft1.entities, draft2.entities)) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.message !== draft2.message) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n    \r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n    \r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    const myEntities = RichTextProcessor.parseEntities(draft.message);\r\n    const apiEntities = draft.entities || [];\r\n    const totalEntities = RichTextProcessor.mergeEntities(apiEntities.slice(), myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\r\n\r\n    draft.rMessage = RichTextProcessor.wrapDraftText(draft.message, {entities: totalEntities});\r\n    //draft.rReply = appMessagesManager.getRichReplyText(draft);\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = appMessagesIdsManager.generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    let params: MessagesSaveDraft = {\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      let message = localDraft.message;\r\n      let entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = appMessagesIdsManager.getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + serverTimeManager.serverTimeOffset;\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return apiManager.invokeApi('messages.clearAllDrafts').then(bool => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, emptyDraft, {notify: true, force: true});  \r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});  \r\n    }\r\n  }\r\n}\r\n\r\nconst appDraftsManager = new AppDraftsManager();\r\nMOUNT_CLASS_TO.appDraftsManager = appDraftsManager;\r\nexport default appDraftsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nconst ASSETS_PATH = 'assets/audio/';\n\nexport default class AudioAssetPlayer<AssetName extends string> {\n  private audio: HTMLAudioElement;\n  private tempId: number;\n\n  constructor(private assets: AssetName[]) {\n    this.tempId = 0;\n  }\n\n  public playSound(name: AssetName, loop = false) {\n    ++this.tempId;\n    \n    try {\n      const audio = this.createAudio();\n      audio.autoplay = true;\n      audio.src = ASSETS_PATH + name;\n      audio.loop = loop;\n      audio.play();\n    } catch(e) {\n      console.error('playSound', name, e);\n    }\n  }\n\n  public createAudio() {\n    let {audio} = this;\n    if(audio) {\n      return audio;\n    }\n\n    audio = this.audio = new Audio();\n    audio.play();\n    return audio;\n  }\n\n  public stopSound() {\n    this.audio?.pause();\n  }\n\n  public cancelDelayedPlay() {\n    ++this.tempId;\n  }\n\n  public playSoundWithTimeout(name: AssetName, loop: boolean, timeout: number) {\n    // timeout = 0;\n    const tempId = ++this.tempId;\n    setTimeout(() => {\n      if(this.tempId !== tempId) {\n        return;\n      }\n\n      this.playSound(name, loop);\n    }, timeout);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport AudioAssetPlayer from \"../../helpers/audioAssetPlayer\";\nimport { safeReplaceObject } from \"../../helpers/object\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { GroupCall, GroupCallParticipant, GroupCallParticipantVideo, GroupCallParticipantVideoSourceGroup, InputGroupCall, Peer, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates } from \"../../layer\";\nimport GroupCallInstance from \"../calls/groupCallInstance\";\nimport GROUP_CALL_STATE from \"../calls/groupCallState\";\nimport createMainStreamManager from \"../calls/helpers/createMainStreamManager\";\nimport { generateSsrc } from \"../calls/localConferenceDescription\";\nimport { WebRTCLineType } from \"../calls/sdpBuilder\";\nimport StreamManager from \"../calls/streamManager\";\nimport { Ssrc } from \"../calls/types\";\nimport { logger } from \"../logger\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nlet IS_MUTED = true;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport type GroupCallAudioAssetName = \"group_call_connect.mp3\" | \"group_call_end.mp3\" | \"group_call_start.mp3\" | \"voip_onallowtalk.mp3\";\n\nexport class AppGroupCallsManager {\n  private log: ReturnType<typeof logger>;\n  \n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n  \n  // private audioAsset: AudioAsset;\n  \n  private currentGroupCall: GroupCallInstance;\n  private connectionAudio: HTMLAudioElement;\n  private doNotDispatchParticipantUpdate: PeerId;\n  private audioAsset: AudioAssetPlayer<GroupCallAudioAssetName>;\n\n  constructor() {\n    this.log = logger('GROUP-CALLS');\n    \n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n    \n    rootScope.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n      \n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n        \n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        const {currentGroupCall} = this;\n        if(currentGroupCall?.id === groupCall.id) {\n          currentGroupCall.hangUp(false, false, true);\n        }\n\n        this.participants.delete(groupCall.id);\n      }\n    });\n\n    this.audioAsset = new AudioAssetPlayer<GroupCallAudioAssetName>([\n      'group_call_connect.mp3',\n      'group_call_end.mp3',\n      'group_call_start.mp3',\n      'voip_onallowtalk.mp3'\n    ]);\n  }\n\n  get groupCall() {\n    return this.currentGroupCall;\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const {currentGroupCall} = this;\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = appPeersManager.getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    const isCurrentGroupCall = currentGroupCall?.id === groupCallId;\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    if(isCurrentGroupCall) {\n      currentGroupCall.onParticipantUpdate(participant, this.doNotDispatchParticipantUpdate);\n    }\n\n    // if(!skipCounterUpdating) {\n      const groupCall = this.getGroupCall(groupCallId);\n      if(groupCall?._ === 'groupCall') {\n        let modified = false;\n        if(hasLeft) {\n          --groupCall.participants_count;\n          modified = true;\n        } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n          ++groupCall.participants_count;\n          modified = true;\n        }\n  \n        if(modified) {\n          rootScope.dispatchEvent('group_call_update', groupCall);\n        }\n      }\n    // }\n    \n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant && this.doNotDispatchParticipantUpdate !== peerId) {\n      rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach(p => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    if(!Object.keys(options).length) {\n      return;\n    }\n\n    let processUpdate = true;\n    if(participant) {\n      const {currentGroupCall} = this;\n      const isCurrentCall = currentGroupCall?.id === groupCallId;\n      const isUpdatingMeInCurrentCall = isCurrentCall && participant.pFlags.self;\n\n      if(isUpdatingMeInCurrentCall) {\n        if(options.muted !== undefined && !currentGroupCall.isSharingAudio) {\n          delete options.muted;\n\n          if(!Object.keys(options).length) {\n            return;\n          }\n        }\n      }\n\n      // if(isCurrentCall) {\n        const muted = options.muted;\n        if(muted !== undefined) {\n          /* const isAdmin = appChatsManager.hasRights(currentGroupCall.chatId, 'manage_call');\n          if(isAdmin) {\n            if(muted) {\n              participant.pFlags.muted = true;\n              delete participant.pFlags.can_self_unmute;\n            } else {\n              participant.pFlags.can_self_unmute = true;\n            }\n          } else  */if(participant.pFlags.self) {\n            if(muted) {\n              participant.pFlags.muted = true;\n            } else if(participant.pFlags.can_self_unmute) {\n              delete participant.pFlags.muted;\n            }\n          }/*  else {\n            if(muted) {\n              participant.pFlags.muted_by_you = true;\n            } else {\n              delete participant.pFlags.muted_by_you;\n            }\n          } */\n        }\n      // }\n\n      /* const a: [keyof GroupCallParticipant['pFlags'], keyof typeof options][] = [\n        ['muted', 'muted']\n      ];\n\n      a.forEach(([key, optionKey]) => {\n        const value = options[optionKey];\n        if(value === undefined) {\n          return;\n        }\n\n        if(value) {\n          participant.pFlags[key] = true;\n        } else {\n          delete participant.pFlags[key];\n        }\n      }); */\n\n      if(options.raiseHand !== undefined) {\n        if(options.raiseHand) participant.raise_hand_rating = '1';\n        else delete participant.raise_hand_rating;\n      }\n\n      if(isUpdatingMeInCurrentCall) {\n        if(options.videoStopped !== undefined) {\n          if(options.videoStopped) delete participant.video;\n          else participant.video = this.generateSelfVideo(currentGroupCall.connections.main.sources.video);\n        }\n\n        if(!participant.pFlags.muted && participant.pFlags.can_self_unmute) {\n          currentGroupCall.setMuted(false);\n        }\n\n        currentGroupCall.dispatchEvent('state', currentGroupCall.state);\n      }\n\n      rootScope.dispatchEvent('group_call_participant', {groupCallId, participant});\n\n      /* if(participant.pFlags.self) {\n        processUpdate = false;\n      } */\n    }\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : appPeersManager.getPeerId(participant.peer);\n    const updates = await apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: appGroupCallsManager.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? appPeersManager.getInputPeerSelf() : appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n    \n    // do not replace with peerId because it can be null\n    if(!processUpdate) this.doNotDispatchParticipantUpdate = appPeersManager.getPeerId(participant.peer);\n    apiUpdatesManager.processUpdateMessage(updates);\n    if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n  \n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        appUsersManager.saveApiUsers(groupCall.users);\n        appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n  \n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n      \n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n  \n  public startConnectingSound() {\n    this.stopConnectingSound();\n    this.audioAsset.playSoundWithTimeout('group_call_connect.mp3', true, 2500);\n  }\n  \n  public stopConnectingSound() {\n    this.audioAsset.stopSound();\n    this.audioAsset.cancelDelayedPlay();\n  }\n\n  public setCurrentGroupCall(groupCall: GroupCallInstance) {\n    this.currentGroupCall = groupCall;\n\n    if(groupCall) {\n      rootScope.dispatchEvent('group_call_instance', groupCall);\n    }\n    /* TdLibController.clientUpdate({\n      '@type': 'clientUpdateGroupCall',\n      call\n    }); */\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await apiManager.invokeApi('phone.createGroupCall', {\n      peer: appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find(update => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n  \n  public async joinGroupCall(chatId: ChatId, groupCallId: GroupCallId, muted = IS_MUTED, rejoin?: boolean, joinVideo?: boolean) {\n    this.audioAsset.createAudio();\n\n    this.log(`joinGroupCall chatId=${chatId} id=${groupCallId} muted=${muted} rejoin=${rejoin}`);\n    \n    let streamManager: StreamManager;\n    if(rejoin) {\n      streamManager = this.currentGroupCall.connections.main.streamManager;\n    } else {\n      streamManager = await createMainStreamManager(muted, joinVideo);\n    }\n\n    return this.joinGroupCallInternal(chatId, groupCallId, streamManager, muted, rejoin, joinVideo);\n  }\n\n  public async joinGroupCallInternal(chatId: ChatId, groupCallId: GroupCallId, streamManager: StreamManager, muted: boolean, rejoin = false, joinVideo?: boolean) {\n    const log = this.log.bindPrefix('joinGroupCallInternal');\n    log('start', groupCallId);\n\n    const type: GroupCallConnectionType = 'main';\n\n    let {currentGroupCall} = this;\n    if(currentGroupCall && rejoin) {\n      // currentGroupCall.connections.main.connection = connection;\n      currentGroupCall.handleUpdateGroupCallParticipants = false;\n      currentGroupCall.updatingSdp = false;\n      log('update currentGroupCall', groupCallId, currentGroupCall);\n    } else {\n      currentGroupCall = new GroupCallInstance({\n        chatId,\n        id: groupCallId\n      });\n\n      currentGroupCall.fixSafariAudio();\n\n      currentGroupCall.addEventListener('state', (state) => {\n        if(this.currentGroupCall === currentGroupCall && state === GROUP_CALL_STATE.CLOSED) {\n          this.setCurrentGroupCall(null);\n          this.stopConnectingSound();\n          this.audioAsset.playSound('group_call_end.mp3');\n          rootScope.dispatchEvent('chat_update', currentGroupCall.chatId);\n        }\n      });\n\n      currentGroupCall.groupCall = await this.getGroupCallFull(groupCallId);\n\n      const connectionInstance = currentGroupCall.createConnectionInstance({\n        streamManager,\n        type,\n        options: {\n          type,\n          isMuted: muted,\n          joinVideo,\n          rejoin\n        }\n      });\n\n      const connection = connectionInstance.createPeerConnection();\n      connection.addEventListener('negotiationneeded', () => {\n        connectionInstance.negotiate();\n      });\n\n      connection.addEventListener('track', (event) => {\n        log('ontrack', event);\n        currentGroupCall.onTrack(event);\n      });\n  \n      connection.addEventListener('iceconnectionstatechange', () => {\n        currentGroupCall.dispatchEvent('state', currentGroupCall.state);\n        \n        const {iceConnectionState} = connection;\n        if(iceConnectionState === 'disconnected' || iceConnectionState === 'checking' || iceConnectionState === 'new') {\n          this.startConnectingSound();\n        } else {\n          this.stopConnectingSound();\n        }\n        \n        switch(iceConnectionState) {\n          case 'checking': {\n            break;\n          }\n          \n          case 'closed': {\n            currentGroupCall.hangUp();\n            break;\n          }\n          \n          case 'completed': {\n            break;\n          }\n          \n          case 'connected': {\n            if(!currentGroupCall.joined) {\n              currentGroupCall.joined = true;\n              this.audioAsset.playSound('group_call_start.mp3');\n  \n              this.getGroupCallParticipants(groupCallId).then(({participants}) => {\n                this.saveApiParticipants(groupCallId, [...participants.values()]);\n              });\n            }\n            \n            break;\n          }\n          \n          case 'disconnected': {\n            break;\n          }\n          \n          case 'failed': {\n            //TODO: replace with ICE restart\n            currentGroupCall.hangUp();\n            // connection.restartIce();\n            break;\n          }\n          \n          case 'new': {\n            break;\n          }\n        }\n      });\n\n      connectionInstance.createDescription();\n      connectionInstance.createDataChannel();\n\n      connectionInstance.appendStreamToConference();\n\n      this.setCurrentGroupCall(currentGroupCall);\n      log('set currentGroupCall', groupCallId, currentGroupCall);\n\n      this.startConnectingSound();\n\n      return connectionInstance.negotiate();\n    }\n  }\n  \n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  public generateSelfVideo(source: Ssrc, audioSource?: number): GroupCallParticipantVideo {\n    return source && {\n      _: 'groupCallParticipantVideo',\n      pFlags: {},\n      endpoint: '',\n      source_groups: source.sourceGroups,\n      audio_source: audioSource\n    };\n  }\n  \n  public generateSelfParticipant(): GroupCallParticipant {\n    const mainSources = this.currentGroupCall.connections.main.sources;\n    const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n    return {\n      _: 'groupCallParticipant',\n      pFlags: {\n        can_self_unmute: true,\n        self: true\n      },\n      source: mainSources.audio.source,\n      video: this.generateSelfVideo(mainSources.video),\n      presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n      date: tsNow(true),\n      peer: appPeersManager.getOutputPeer(rootScope.myId)\n    };\n  }\n\n  public makeSsrcsFromParticipant = (participant: GroupCallParticipant) => {\n    return [\n      this.makeSsrcFromParticipant(participant, 'audio', participant.source),\n      participant.video?.audio_source && this.makeSsrcFromParticipant(participant, 'audio', participant.video.audio_source),\n      participant.video && this.makeSsrcFromParticipant(participant, 'video', participant.video.source_groups, participant.video.endpoint),\n      participant.presentation?.audio_source && this.makeSsrcFromParticipant(participant, 'audio', participant.presentation.audio_source),\n      participant.presentation && this.makeSsrcFromParticipant(participant, 'video', participant.presentation.source_groups, participant.presentation.endpoint)\n    ].filter(Boolean);\n  };\n\n  public makeSsrcFromParticipant(participant: GroupCallParticipant, type: WebRTCLineType, source?: number | GroupCallParticipantVideoSourceGroup[], endpoint?: string): Ssrc {\n    return generateSsrc(type, source, endpoint);\n  }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants', \n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n  \n          appChatsManager.saveApiChats(groupCallParticipants.chats);\n          appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n    \n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public async hangUp(groupCallId: GroupCallId, discard = false, rejoin = false) {\n    this.log(`hangUp start id=${groupCallId} discard=${discard} rejoin=${rejoin}`);\n    const {currentGroupCall} = this;\n    if(currentGroupCall?.id !== groupCallId) return;\n\n    currentGroupCall.hangUp(discard, rejoin);\n  }\n\n  public toggleMuted(muted?: boolean) {\n    return this.changeUserMuted(NULL_PEER_ID, muted);\n  }\n  \n  public changeUserMuted(peerId: PeerId, muted?: boolean) {\n    const {currentGroupCall} = this;\n    if(!currentGroupCall) return;\n\n    const participant = currentGroupCall.getParticipantByPeerId(peerId);\n    if(NULL_PEER_ID === peerId && participant.pFlags.can_self_unmute) {\n      muted = muted === undefined ? !participant.pFlags.muted : muted;\n    }\n\n    return this.editParticipant(currentGroupCall.id, participant, {muted});\n  }\n}\n\nconst appGroupCallsManager = new AppGroupCallsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appGroupCallsManager = appGroupCallsManager);\nexport default appGroupCallsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS } from \"../constants\";\nimport StreamManager from \"../streamManager\";\nimport getAudioConstraints from \"./getAudioConstraints\";\nimport getStream from \"./getStream\";\nimport getVideoConstraints from \"./getVideoConstraints\";\n\nexport default async function createMainStreamManager(muted?: boolean, joinVideo?: boolean) {\n  const constraints: MediaStreamConstraints = {\n    audio: getAudioConstraints(),\n    video: joinVideo && getVideoConstraints()\n  };\n\n  const streamManager = new StreamManager(GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS);\n  \n  try {\n    const stream = await getStream(constraints, muted);\n    streamManager.addStream(stream, 'input');\n  } catch(err) {\n    console.error('joinGroupCall getStream error', err, constraints);\n    streamManager.inputStream = new MediaStream();\n  }\n\n  return streamManager;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Config from \"../lib/config\";\n\nconst badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = Config.LatinizeMap[ch];\n    return latinizeCh !== undefined ? latinizeCh : ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  const hasTag = text.charAt(0) === '%';\n  text = clearBadCharsAndTrim(text);\n  if(latinize) text = latinizeString(text);\n  \n  text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n\n  return text;\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n\r\n/**\r\n * Descend sorted storage\r\n */\r\n\r\ntype ItemType = number;\r\n\r\nexport enum SliceEnd {\r\n  None = 0,\r\n  Top = 1,\r\n  Bottom = 2,\r\n  Both = SliceEnd.Top | SliceEnd.Bottom\r\n};\r\n\r\nexport interface Slice extends Array<ItemType> {\r\n  //slicedArray: SlicedArray;\r\n  end: SliceEnd;\r\n\r\n  isEnd: (side: SliceEnd) => boolean;\r\n  setEnd: (side: SliceEnd) => void;\r\n  unsetEnd: (side: SliceEnd) => void;\r\n\r\n  slice: (from?: number, to?: number) => Slice;\r\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice;\r\n}\r\n\r\nexport interface SliceConstructor {\r\n  new(...items: ItemType[]): Slice;\r\n}\r\n\r\nexport default class SlicedArray {\r\n  private slices: Slice[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\r\n  private sliceConstructor: SliceConstructor;\r\n  \r\n  constructor() {\r\n    // @ts-ignore\r\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\r\n\r\n    const first = this.constructSlice();\r\n    //first.setEnd(SliceEnd.Bottom);\r\n    this.slices = [first];\r\n  }\r\n\r\n  private static getSliceConstructor(slicedArray: SlicedArray) {\r\n    return class Slice extends Array<ItemType> implements Slice {\r\n      //slicedArray: SlicedArray;\r\n      end: SliceEnd = SliceEnd.None;\r\n  \r\n      /* constructor(...items: ItemType[]) {\r\n        super(...items);\r\n        //this.slicedArray = slicedArray;\r\n      } */\r\n  \r\n      isEnd(side: SliceEnd): boolean {\r\n        if((this.end & side) === side) {\r\n          return true;\r\n        }/*  else if(!this.slicedArray) {\r\n          return false;\r\n        } */\r\n  \r\n        let isEnd = false;\r\n        if(side === SliceEnd.Top) {\r\n          const slice = slicedArray.last;\r\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Bottom) {\r\n          const slice = slicedArray.first;\r\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Both) {\r\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\r\n        }\r\n\r\n        if(isEnd) {\r\n          this.setEnd(side);\r\n        }\r\n  \r\n        return isEnd;\r\n      }\r\n  \r\n      setEnd(side: SliceEnd) {\r\n        this.end |= side;\r\n      }\r\n\r\n      unsetEnd(side: SliceEnd) {\r\n        this.end ^= side;\r\n      }\r\n\r\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\r\n        const ret = super.splice(start, deleteCount, ...items);\r\n\r\n        if(!this.length) {\r\n          const slices = slicedArray.slices as number[][];\r\n          const idx = slices.indexOf(this);\r\n          if(idx !== -1) {\r\n            if(slices.length === 1) { // left empty slice without ends\r\n              this.unsetEnd(SliceEnd.Both);\r\n            } else { // delete this slice\r\n              slices.splice(idx, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructSlice(...items: ItemType[]) {\r\n    //const slice = new Slice(this, ...items);\r\n    // can't pass items directly to constructor because first argument is length\r\n    const slice = new this.sliceConstructor(items.length);\r\n    for(let i = 0, length = items.length; i < length; ++i) {\r\n      slice[i] = items[i];\r\n    }\r\n    return slice;\r\n    \r\n    // ! code below will slow execution in 15 times\r\n    /* const self = this;\r\n    const p: Slice = new Proxy(slice, {\r\n      get: function(target, name: any) {\r\n        if(name === 'constructor') {\r\n          const p = new Proxy(Slice, {\r\n            construct: (target, args) => {\r\n              return self.constructSlice(...args);\r\n            }\r\n          });\r\n\r\n          return p;\r\n        }\r\n\r\n        return target[name];\r\n      }\r\n    });\r\n\r\n    return p; */\r\n\r\n    /*\r\n    var p = slicedArray.constructSlice();\r\n    p.length = 100000;\r\n    p.fill(255);\r\n\r\n    var a = new Array(100000);\r\n    a.fill(255);\r\n\r\n    var b = 0;\r\n    var perf = performance.now();\r\n    for(var i = 0; i < p.length; ++i) {\r\n        b += p[i];\r\n    }\r\n\r\n    console.log('perf 1', performance.now() - perf);\r\n\r\n    b = 0;\r\n    perf = performance.now();\r\n    for(var i = 0; i < a.length; ++i) {\r\n        b += a[i];\r\n    }\r\n\r\n    console.log('perf 2', performance.now() - perf);\r\n    */\r\n  }\r\n\r\n  public insertSlice(slice: ItemType[], flatten = true) {\r\n    if(!slice.length) {\r\n      return;\r\n    }\r\n\r\n    const first = this.slices[0];\r\n    if(!first.length) {\r\n      first.push(...slice);\r\n      return first;\r\n    }\r\n\r\n    const lowerBound = slice[slice.length - 1];\r\n    const upperBound = slice[0];\r\n\r\n    let foundSlice: Slice, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\r\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\r\n      foundSlice = this.slices[foundSliceIndex];\r\n      lowerIndex = foundSlice.indexOf(lowerBound);\r\n      upperIndex = foundSlice.indexOf(upperBound);\r\n      \r\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n        break;\r\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n\r\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\r\n      const sliced = slice.slice(foundSlice.length - upperIndex);\r\n      foundSlice.push(...sliced);\r\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\r\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\r\n      foundSlice.unshift(...sliced);\r\n    } else {\r\n      let insertIndex = 0;\r\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\r\n        const s = this.slices[insertIndex];\r\n        if(slice[0] > s[0]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\r\n      foundSliceIndex = insertIndex;\r\n    }\r\n\r\n    if(flatten) {\r\n      return this.flatten(foundSliceIndex);\r\n    }\r\n  }\r\n\r\n  private flatten(foundSliceIndex: number) {\r\n    if(this.slices.length >= 2) {\r\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\r\n        const prevSlice = this.slices[i];\r\n        const nextSlice = this.slices[i + 1];\r\n  \r\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\r\n        if(upperIndex !== -1) {\r\n          prevSlice.setEnd(nextSlice.end);\r\n          this.slices.splice(i + 1, 1);\r\n\r\n          if(i < foundSliceIndex) {\r\n            --foundSliceIndex;\r\n          }\r\n\r\n          --length; // respect array bounds\r\n          --i;      // repeat from the same place\r\n  \r\n          this.insertSlice(nextSlice, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.slices[foundSliceIndex];\r\n  }\r\n\r\n  // * \r\n  \r\n  get first() {\r\n    return this.slices[0];\r\n  }\r\n  \r\n  get last() {\r\n    return this.slices[this.slices.length - 1];\r\n  }\r\n\r\n  get slice() {\r\n    return this.first;\r\n  }\r\n\r\n  get length() {\r\n    return this.slice.length;\r\n  }\r\n\r\n  public findSlice(item: ItemType) {\r\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\r\n      const slice = this.slices[i];\r\n      const index = slice.indexOf(item);\r\n      if(index !== -1) {\r\n        return {slice, index};\r\n      }\r\n    }\r\n    \r\n    return undefined;\r\n  }\r\n\r\n  public findSliceOffset(maxId: number) {\r\n    let slice: Slice;\r\n    for(let i = 0; i < this.slices.length; ++i) {\r\n      let offset = 0;\r\n      slice = this.slices[i];\r\n      if(slice.length < 2) {\r\n        continue;\r\n      }\r\n      \r\n      for(; offset < slice.length; offset++) {\r\n        if(maxId >= slice[offset]) {\r\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\r\n            return undefined;\r\n          } */\r\n\r\n          return {\r\n            slice, \r\n            offset: maxId === slice[offset] ? offset : offset - 1\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(slice && slice.isEnd(SliceEnd.Top)) {\r\n      return {\r\n        slice,\r\n        offset: slice.length\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // * https://core.telegram.org/api/offsets\r\n  public sliceMe(offsetId: number, add_offset: number, limit: number) {\r\n    let slice = this.slice;\r\n    let offset = 0;\r\n    let sliceOffset = 0;\r\n\r\n    if(offsetId) {\r\n      const pos = this.findSliceOffset(offsetId);\r\n      if(!pos) {\r\n        return undefined;\r\n      }\r\n\r\n      slice = pos.slice;\r\n      offset = sliceOffset = pos.offset;\r\n\r\n      if(slice.includes(offsetId)) {\r\n        sliceOffset += 1;\r\n      }\r\n\r\n      /* if(slice.includes(offsetId) && add_offset < 0) {\r\n        add_offset += 1;\r\n      } */\r\n    }\r\n\r\n    let sliceStart = Math.max(sliceOffset + add_offset, 0);\r\n    let sliceEnd = sliceOffset + add_offset + limit;\r\n    //const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\r\n    //sliceEnd += fixHalfBackLimit;\r\n\r\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice;\r\n\r\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(add_offset);\r\n\r\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\r\n    // useful when there is only 1 message in chat on its reopening\r\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\r\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\r\n\r\n    //console.log('sliceMe', topFulfilled, bottomFulfilled);\r\n\r\n    return {\r\n      slice: sliced, \r\n      offsetIdOffset: offset,\r\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\r\n    };\r\n  }\r\n\r\n  public unshift(...items: ItemType[]) {\r\n    let slice = this.first;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Bottom);\r\n      this.slices.unshift(slice);\r\n    }\r\n\r\n    slice.unshift(...items);\r\n  }\r\n\r\n  public push(...items: ItemType[]) {\r\n    let slice = this.last;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    } else if(!slice.isEnd(SliceEnd.Top)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Top);\r\n      this.slices.push(slice);\r\n    }\r\n\r\n    slice.push(...items);\r\n  }\r\n\r\n  public delete(item: ItemType) {\r\n    const found = this.findSlice(item);\r\n    if(found) {\r\n      found.slice.splice(found.index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { copy } from \"../../helpers/object\";\r\nimport { InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults } from \"../../layer\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport rootScope from \"../rootScope\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\r\nimport appMessagesManager from './appMessagesManager';\r\nimport appPeersManager from './appPeersManager';\r\nimport appUsersManager from \"./appUsersManager\";\r\n\r\nexport class AppPollsManager {\r\n  public polls: {[id: string]: Poll} = {};\r\n  public results: {[id: string]: PollResults} = {};\r\n  public pollToMessages: {[id: string]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n        \r\n        rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.rQuestion = RichTextProcessor.wrapEmojiText(poll.question);\r\n      poll.rReply = RichTextProcessor.wrapEmojiText('📊') + ' ' + (poll.rQuestion || 'poll');\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId], \r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = RichTextProcessor.parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n    \r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map(index => {\r\n      return poll.answers[index].option;\r\n    });\r\n    \r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message, optionIds);\r\n      });\r\n    }\r\n\r\n    return apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: appMessagesIdsManager.getServerMessageId(message.mid),\r\n      options\r\n    }).then(updates => {\r\n      this.log('sendVote updates:', updates);\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: any) {\r\n    const inputPeer = appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: appMessagesIdsManager.getServerMessageId(message.mid)\r\n    }).then(updates => {\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: appPeersManager.getInputPeerById(message.peerId),\r\n      id: appMessagesIdsManager.getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: any) {\r\n    const poll: Poll = message.media.poll;\r\n    \r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      //console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n\r\nconst appPollsManager = new AppPollsManager();\r\nMOUNT_CLASS_TO.appPollsManager = appPollsManager;\r\nexport default appPollsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n\treturn source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n\treturn source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n\tif(!array) return 0;\n\n\tconst {length} = array;\n\tlet total = 0;\n\tfor(let i = 0; i < length; ++i) {\n\t\ttotal += array[i] * array[i];\n\t}\n\tconst rms = Math.sqrt(total / length) / 255;\n\n\treturn Math.min(1, rms * scale);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { indexOfAndSplice } from '../../helpers/array';\nimport { safeAssign } from '../../helpers/object';\nimport { GroupCallParticipantVideoSourceGroup } from '../../layer';\nimport { SDPBuilder, WebRTCLineType, WEBRTC_MEDIA_PORT } from './sdpBuilder';\nimport { AudioCodec, GroupCallConnectionTransport, Ssrc, UpdateGroupCallConnectionData, VideoCodec } from './types';\n\nexport class ConferenceEntry {\n  public source: number;\n  public sourceGroups: GroupCallParticipantVideoSourceGroup[];\n  public transceiver: RTCRtpTransceiver;\n  public originalDirection: RTCRtpTransceiverDirection;\n  public direction: RTCRtpTransceiverDirection;\n  public port: string;\n  public endpoint: string;\n  public peerId: PeerId;\n  \n  public sendEntry: ConferenceEntry;\n  public recvEntry: ConferenceEntry;\n\n  constructor(public mid: string, public type: WebRTCLineType) {\n    this.port = WEBRTC_MEDIA_PORT;\n  }\n\n  public setDirection(direction: RTCRtpTransceiverDirection) {\n    if(!this.originalDirection) {\n      this.originalDirection = direction;\n    }\n\n    return this.direction = direction;\n  }\n\n  public setPort(port: string) {\n    return this.port = port;\n  }\n\n  public setEndpoint(endpoint: string) {\n    return this.endpoint = endpoint;\n  }\n\n  public setPeerId(peerId: PeerId) {\n    return this.peerId = peerId;\n  }\n\n  public createTransceiver(connection: RTCPeerConnection, init?: RTCRtpTransceiverInit) {\n    if(init?.direction) {\n      this.setDirection(init.direction);\n    }\n\n    return this.transceiver = connection.addTransceiver(this.type, init);\n  }\n\n  public setSource(source: number | GroupCallParticipantVideoSourceGroup[]) {\n    let sourceGroups: GroupCallParticipantVideoSourceGroup[];\n    if(Array.isArray(source)) {\n      if(!source[0]) return;\n      sourceGroups = source;\n      source = sourceGroups[0].sources[0];\n    }\n\n    this.sourceGroups = sourceGroups;\n    return this.source = source;\n  }\n\n  public shouldBeSkipped(isAnswer?: boolean) {\n    return isAnswer && this.direction === 'inactive';\n  }\n}\n\nexport function generateSsrc(type: WebRTCLineType, source: number | GroupCallParticipantVideoSourceGroup[], endpoint?: string): Ssrc {\n  let sourceGroups: GroupCallParticipantVideoSourceGroup[];\n  if(Array.isArray(source)) {\n    if(!source[0]) return;\n    sourceGroups = source;\n    source = sourceGroups[0].sources[0];\n  }\n  \n  return {\n    endpoint,\n    type,\n    source,\n    sourceGroups,\n  };\n}\n\nexport default class LocalConferenceDescription implements UpdateGroupCallConnectionData {\n  public readonly sessionId: string;\n  // public ssrcs: Ssrc[];\n  public readonly transport: GroupCallConnectionTransport;\n  public readonly audio?: AudioCodec;\n  public readonly video: VideoCodec;\n  \n  private maxSeenId: number;\n  public readonly entries: ConferenceEntry[];\n  private entriesByMid: Map<ConferenceEntry['mid'], ConferenceEntry>;\n  private entriesBySource: Map<ConferenceEntry['source'], ConferenceEntry>;\n  private entriesByPeerId: Map<ConferenceEntry['peerId'], Set<ConferenceEntry>>;\n  \n  constructor(public connection: RTCPeerConnection) {\n    this.sessionId = '' + Date.now();\n    // this.ssrcs = [];\n    this.maxSeenId = -1;\n    this.entries = [];\n    this.entriesByMid = new Map();\n    this.entriesBySource = new Map();\n    this.entriesByPeerId = new Map();\n  }\n\n  public setData(data: UpdateGroupCallConnectionData) {\n    return safeAssign(this, data);\n  }\n\n  public createEntry(type: WebRTCLineType) {\n    const mid = '' + ++this.maxSeenId;\n    const entry = new ConferenceEntry(mid, type);\n    this.entries.push(entry);\n    this.entriesByMid.set(mid, entry);\n    return entry;\n  }\n\n  public deleteEntry(entry: ConferenceEntry) {\n    indexOfAndSplice(this.entries, entry);\n    this.entriesByMid.delete(entry.mid);\n    this.entriesBySource.delete(entry.source);\n\n    const set = this.entriesByPeerId.get(entry.peerId);\n    if(set) {\n      set.delete(entry);\n      if(!set.size) {\n        this.entriesByPeerId.delete(entry.peerId);\n      }\n    }\n  }\n\n  public setEntrySource(entry: ConferenceEntry, source: Parameters<ConferenceEntry['setSource']>[0]) {\n    entry.setSource(source);\n    this.entriesBySource.set(entry.source, entry);\n  }\n\n  public setEntryPeerId(entry: ConferenceEntry, peerId: ConferenceEntry['peerId']) {\n    entry.setPeerId(peerId);\n    let set = this.entriesByPeerId.get(peerId);\n    if(!set) {\n      this.entriesByPeerId.set(peerId, set = new Set());\n    }\n\n    set.add(entry);\n  }\n  \n  public findEntry(verify: Parameters<LocalConferenceDescription['entries']['find']>[0]) {\n    return this.entries.find(verify);\n  }\n\n  public findFreeSendRecvEntry(type: WebRTCLineType, isSending: boolean) {\n    let entry = this.entries.find(entry => {\n      return entry.direction === 'sendrecv' && entry.type === type && !(isSending ? entry.sendEntry : entry.recvEntry);\n    });\n\n    if(!entry) {\n      entry = this.createEntry(type);\n      entry.setDirection('sendrecv');\n    }\n\n    return entry;\n  }\n  \n  public getEntryByMid(mid: ConferenceEntry['mid']) {\n    return this.entriesByMid.get(mid);\n  }\n\n  public getEntryBySource(source: ConferenceEntry['source']) {\n    return this.entriesBySource.get(source);\n  }\n\n  public getEntriesByPeerId(peerId: ConferenceEntry['peerId']) {\n    return this.entriesByPeerId.get(peerId);\n  }\n\n  public generateSdp(options: Omit<Parameters<SDPBuilder['addConference']>[0], 'conference'>) {\n    return SDPBuilder.fromConference({\n      conference: this,\n      ...options\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\r\nimport { fastRaf } from \"./schedulers\";\r\n\r\ntype HeavyQueue<T> = {\r\n  items: any[], \r\n  process: (...args: any[]) => T,\r\n  context: any,\r\n  promise?: CancellablePromise<ReturnType<HeavyQueue<T>['process']>[]>\r\n};\r\nconst heavyQueue: HeavyQueue<any>[] = [];\r\nlet processingQueue = false;\r\n\r\nexport default function addHeavyTask<T>(queue: HeavyQueue<T>, method: 'push' | 'unshift' = 'push') {\r\n  if(!queue.items.length) {\r\n    return Promise.resolve([]);\r\n  }\r\n  \r\n  queue.promise = deferredPromise<T[]>();\r\n  heavyQueue[method](queue);\r\n  processHeavyQueue();\r\n\r\n  return queue.promise;\r\n}\r\n\r\nfunction processHeavyQueue() {\r\n  if(!processingQueue) {\r\n    const queue = heavyQueue.shift();\r\n    timedChunk(queue).finally(() => {\r\n      processingQueue = false;\r\n      if(heavyQueue.length) {\r\n        processHeavyQueue();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction timedChunk<T>(queue: HeavyQueue<T>) {\r\n  if(!queue.items.length) {\r\n    queue.promise.resolve([]);\r\n    return Promise.resolve([]);\r\n  }\r\n\r\n  const todo = queue.items.slice();\r\n  const results: T[] = [];\r\n\r\n  return new Promise<T[]>((resolve, reject) => {\r\n    const f = async() => {\r\n      const start = performance.now();\r\n\r\n      do {\r\n        await getHeavyAnimationPromise();\r\n        const possiblePromise = queue.process.apply(queue.context, todo.shift());\r\n        let realResult: T;\r\n        if(possiblePromise instanceof Promise) {\r\n          try {\r\n            realResult = await possiblePromise;\r\n          } catch(err) {\r\n            reject(err);\r\n            return;\r\n          }\r\n        } else {\r\n          realResult = possiblePromise;\r\n        }\r\n\r\n        results.push(realResult);\r\n      } while(todo.length > 0 && (performance.now() - start) < 6);\r\n\r\n      if(todo.length > 0) {\r\n        fastRaf(f);\r\n        //setTimeout(f, 25);\r\n      } else {\r\n        resolve(results);\r\n      }\r\n    };\r\n\r\n    fastRaf(f);\r\n    //setTimeout(f, 25);\r\n  }).then(queue.promise.resolve, queue.promise.reject);\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type fastBlur from '../vendor/fastBlur';\r\nimport addHeavyTask from './heavyQueue';\r\n\r\nconst RADIUS = 2;\r\nconst ITERATIONS = 2;\r\n\r\nconst isFilterAvailable = 'filter' in (document.createElement('canvas').getContext('2d') || {});\r\nlet requireBlurPromise: Promise<any>;\r\nlet fastBlurFunc: typeof fastBlur;\r\nif(!isFilterAvailable) {\r\n  requireBlurPromise = import('../vendor/fastBlur').then(m => {\r\n    fastBlurFunc = m.default;\r\n  });\r\n} else {\r\n  requireBlurPromise = Promise.resolve();\r\n}\r\n\r\nfunction processBlurNext(img: HTMLImageElement, radius: number, iterations: number) {\r\n  return new Promise<string>((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    \r\n    const ctx = canvas.getContext('2d', {alpha: false});\r\n    if(isFilterAvailable) {\r\n      ctx.filter = `blur(${radius}px)`;\r\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\r\n    } else {\r\n      ctx.drawImage(img, 0, 0);\r\n      fastBlurFunc(ctx, 0, 0, canvas.width, canvas.height, radius, iterations);\r\n    }\r\n    \r\n    resolve(canvas.toDataURL());\r\n    /* if(DEBUG) {\r\n      console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\r\n    } */\r\n\r\n    /* canvas.toBlob(blob => {\r\n      resolve(URL.createObjectURL(blob));\r\n      \r\n      if(DEBUG) {\r\n        console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\r\n      }\r\n    }); */\r\n  });\r\n}\r\n\r\nconst blurPromises: Map<string, Promise<string>> = new Map();\r\nconst CACHE_SIZE = 1000;\r\n\r\nexport default function blur(dataUri: string, radius: number = RADIUS, iterations: number = ITERATIONS) {\r\n  if(!dataUri) {\r\n    console.error('no dataUri for blur', dataUri);\r\n    return Promise.resolve(dataUri);\r\n  }\r\n\r\n  if(blurPromises.size > CACHE_SIZE) {\r\n    blurPromises.clear();\r\n  }\r\n  \r\n  if(blurPromises.has(dataUri)) return blurPromises.get(dataUri);\r\n  const promise = new Promise<string>((resolve) => {\r\n    //return resolve(dataUri);\r\n    requireBlurPromise.then(() => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        if(isFilterAvailable) {\r\n          processBlurNext(img, radius, iterations).then(resolve);\r\n        } else {\r\n          addHeavyTask({\r\n            items: [[img, radius, iterations]],\r\n            context: null,\r\n            process: processBlurNext\r\n          }, 'unshift').then(results => {\r\n            resolve(results[0]);\r\n          });\r\n        }\r\n      };\r\n      img.src = dataUri;\r\n\r\n      /* addHeavyTask({\r\n        items: [[dataUri, radius, iterations]],\r\n        context: null,\r\n        process: processBlur\r\n      }, 'unshift').then(results => {\r\n        resolve(results[0]);\r\n      }); */\r\n    });\r\n  });\r\n\r\n  blurPromises.set(dataUri, promise);\r\n\r\n  return promise;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { RefreshReferenceTask, RefreshReferenceTaskResponse } from \"./apiFileManager\";\nimport appMessagesManager from \"../appManagers/appMessagesManager\";\nimport appStickersManager from \"../appManagers/appStickersManager\";\nimport { Photo } from \"../../layer\";\nimport { bytesToHex } from \"../../helpers/bytes\";\nimport { deepEqual } from \"../../helpers/object\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport apiManager from \"./mtprotoworker\";\nimport assumeType from \"../../helpers/assumeType\";\nimport { logger } from \"../logger\";\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n//type ReferenceBytes = Uint8Array;\n\nclass ReferenceDatabase {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  //private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  constructor() {\n    apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n      const originalPayload = task.payload;\n\n      assumeType<RefreshReferenceTaskResponse>(task);\n      task.originalPayload = originalPayload;\n\n      this.refreshReference(originalPayload).then((bytes) => {\n        task.payload = bytes;\n      }, (err) => {\n        task.error = err;\n      }).then(() => apiManager.postMessage(task));\n    });\n  }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n    \n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        break; \n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw 'NO_NEW_CONTEXT';\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n\nconst referenceDatabase = new ReferenceDatabase();\nMOUNT_CLASS_TO.referenceDatabase = referenceDatabase;\nexport default referenceDatabase;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToDocumentFragment(html: string) {\r\n  var template = document.createElement('template');\r\n  html = html.trim(); // Never return a text node of whitespace as the result\r\n  template.innerHTML = html;\r\n  return template.content;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus', \r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","export default async function getStream(constraints: MediaStreamConstraints, muted: boolean) {\n  // console.log('getStream', constraints);\n  \n\tconst stream = await navigator.mediaDevices.getUserMedia(constraints);\n\tstream.getTracks().forEach(x => {\n\t\t/* x.onmute = x => {\n\t\t\tconsole.log('track.onmute', x);\n\t\t};\n\t\tx.onunmute = x => {\n\t\t\tconsole.log('track.onunmute', x);\n\t\t}; */\n\n\t\tx.enabled = !muted;\n\t});\n\n\t// console.log('getStream result', stream);\n\treturn stream;\n}\n\n(window as any).getStream = getStream;\n","export default function getVideoConstraints(): MediaTrackConstraints {\n  return {\n    width: {min: 1280, max: 1920/* , ideal: 1920 */},\n    height: {min: 720, max: 1080/* , ideal: 1080 */},\n    frameRate: {min: 24, max: 30}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { logger } from '../logger';\nimport rootScope from '../rootScope';\nimport { GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX } from './constants';\nimport stopTrack from './helpers/stopTrack';\nimport LocalConferenceDescription from './localConferenceDescription';\nimport { getAmplitude, toTelegramSource } from './utils';\n\nexport type StreamItemBase = {\n  type: 'input' | 'output',\n  track: MediaStreamTrack,\n  source: string,\n  stream: MediaStream\n};\n\nexport type StreamItem = StreamAudioItem | StreamVideoItem;\n\nexport type StreamAudioItem = StreamItemBase & {kind: 'audio', streamAnalyser: AudioStreamAnalyser};\nexport type StreamVideoItem = StreamItemBase & {kind: 'video'};\n\nexport type StreamAmplitude = {\n  type: \"input\" | \"output\";\n  source: string;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  value: number;\n};\n\nclass AudioStreamAnalyser {\n  public analyser: AnalyserNode;\n  public gain: GainNode;\n  public streamSource: MediaStreamAudioSourceNode;\n\n  constructor(context: AudioContext, stream: MediaStream) {\n    const streamSource = this.streamSource = context.createMediaStreamSource(stream);\n    const analyser = this.analyser = context.createAnalyser();\n    const gain = this.gain = context.createGain();\n    // const streamDestination = context.createMediaStreamDestination();\n    \n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n    \n    // connect Web Audio API\n    streamSource.connect(analyser);\n    // analyser.connect(context.destination);\n  }\n}\n\nexport default class StreamManager {\n  private context: AudioContext;\n  public outputStream: MediaStream;\n  public inputStream: MediaStream;\n\n  private timer: number;\n  private counter: number;\n\n  private items: StreamItem[];\n\n  private log: ReturnType<typeof logger>;\n\n  public direction: RTCRtpTransceiver['direction'];\n  public canCreateConferenceEntry: boolean;\n  public lol: boolean;\n  \n  constructor(private interval?: number) {\n    this.context = new (window.AudioContext || (window as any).webkitAudioContext)();\n    this.items = [];\n    this.outputStream = new MediaStream();\n    this.inputStream = new MediaStream();\n    this.counter = 0;\n    this.log = logger('SM');\n    this.direction = 'sendonly';\n    this.canCreateConferenceEntry = true;\n    // this.lol = true;\n  }\n\n  public addStream(stream: MediaStream, type: StreamItem['type']) {\n    stream.getTracks().forEach(track => {\n      this.addTrack(stream, track, type);\n    });\n  }\n\n  public addTrack(stream: MediaStream, track: MediaStreamTrack, type: StreamItem['type']) {\n    this.log('addTrack', type, track, stream);\n\n    const {context, items, inputStream, outputStream} = this;\n    const kind: StreamItem['kind'] = track.kind as any;\n    const source = StreamManager.getSource(stream, type);\n    \n    // this.removeTrack(track);\n    switch(type) {\n      case 'input': {\n        if(!inputStream) {\n          this.inputStream = stream;\n        } else {\n          inputStream.addTrack(track);\n        }\n\n        break;\n      }\n\n      case 'output': {\n        for(let i = 0; i < items.length; ++i) {\n          const {track: t, type, source: itemSource} = items[i];\n          if(itemSource === source && type === 'input') {\n            items.splice(i, 1);\n            outputStream.removeTrack(t);\n            break;\n          }\n        }\n        \n        if(kind !== 'video') {\n          outputStream.addTrack(track);\n        }\n        \n        break;\n      }\n    }\n\n    this.finalizeAddingTrack({\n      type,\n      source,\n      stream,\n      track,\n      kind,\n      streamAnalyser: kind === 'audio' ? new AudioStreamAnalyser(context, stream) : undefined\n    });\n\n    if(kind === 'audio' && this.interval) {\n      this.changeTimer();\n    }\n  }\n\n  private finalizeAddingTrack(item: StreamItem) {\n    const {track} = item;\n    track.addEventListener('ended', () => {\n      this.removeTrack(track);\n    }, {once: true});\n\n    this.items.push(item);\n  }\n\n  public hasInputTrackKind(kind: StreamItem['kind']) {\n    return this.items.find(item => item.type === 'input' && item.kind === kind);\n  }\n\n  public static getSource(stream: MediaStream, type: StreamItem['type']) {\n    return type === 'input' ? (stream.source || stream.id) : '' + toTelegramSource(+stream.id.substring(6));\n  }\n  \n  public removeTrack(track: MediaStreamTrack) {\n    this.log('removeTrack', track);\n\n    const {items} = this;\n    \n    let handled = false;\n    for(let i = 0, length = items.length; !handled && i < length; ++i) {\n      const {track: t, type} = items[i];\n      switch(type) {\n        case 'output': {\n          if(t === track) {\n            items.splice(i, 1);\n            this.outputStream.removeTrack(track);\n            handled = true;\n          }\n\n          break;\n        }\n\n        case 'input': {\n          if(t === track) {\n            items.splice(i, 1);\n            this.inputStream.removeTrack(track);\n            handled = true;\n          }\n\n          break;\n        }\n      }\n    }\n    \n    if(track.kind === 'audio' && this.interval) {\n      this.changeTimer();\n    }\n  }\n  \n  public replaceInputAudio(stream: MediaStream, oldTrack: MediaStreamTrack) {\n    this.removeTrack(oldTrack);\n    this.addStream(stream, 'input');\n  }\n  \n  private changeTimer() {\n    if(this.timer !== undefined) {\n      clearInterval(this.timer);\n    }\n    \n    if(this.items.length) {\n      this.timer = window.setInterval(this.analyse, this.interval);\n    }\n  }\n  \n  public getAmplitude = (item: StreamAudioItem): StreamAmplitude => {\n    const {streamAnalyser, stream, track, source, type} = item;\n    const analyser = streamAnalyser.analyser;\n    if(!analyser) return;\n    \n    const array = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(array);\n    const value = getAmplitude(array);\n    \n    return {\n      type,\n      source,\n      stream,\n      track,\n      value\n    };\n  };\n  \n  public analyse = () => {\n    const all = this.counter % 3 === 0;\n    const filteredItems = all ? this.items : this.items.filter(x => x.type === 'input');\n    const audioItems = filteredItems.filter(x => x.kind === 'audio') as StreamAudioItem[];\n    const amplitudes = audioItems.slice(0, GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX).map(this.getAmplitude);\n    if(++this.counter >= 1000) {\n      this.counter = 0;\n    }\n    \n    rootScope.dispatchEvent('group_call_amplitude', {\n      amplitudes,\n      type: all ? 'all' : 'input'\n    });\n  };\n\n  /* public appendToConnection(connection: RTCPeerConnection) {\n    if(this.inputStream) {\n      this.inputStream.getTracks().forEach(track => {\n        connection.log('addTrack', track);\n        connection.addTrack(track, this.inputStream);\n\n        if(track.kind === 'video') {\n          track.enabled = true;\n        }\n      });\n    }\n  } */\n\n  public appendToConference(conference: LocalConferenceDescription) {\n    if(this.lol) {\n      return;\n    }\n    // return;\n    const {inputStream, direction, canCreateConferenceEntry} = this;\n    // const direction: RTCRtpTransceiverInit['direction'] = 'sendrecv';\n    // const direction: RTCRtpTransceiverInit['direction'] = 'sendonly';\n    const transceiverInit: RTCRtpTransceiverInit = {direction, streams: [inputStream]};\n    const types: ['audio' | 'video', RTCRtpTransceiverInit][] = [\n      ['audio' as const, transceiverInit], \n      ['video' as const, transceiverInit/* {sendEncodings: [{maxBitrate: 2500000}], ...transceiverInit} */]\n    ];\n\n    const tracks = inputStream.getTracks();\n    // const transceivers = conference.connection.getTransceivers();\n    for(const [type, transceiverInit] of types) {\n      let entry = conference.findEntry(entry => entry.direction === direction && entry.type === type);\n      if(!entry) {\n        if(!canCreateConferenceEntry) {\n          continue;\n        }\n\n        entry = conference.createEntry(type);\n      }\n      /* const entry = conference.findFreeSendRecvEntry(type, true);\n      if(!entry.transceiver) {\n        entry.transceiver = transceivers.find(transceiver => transceiver.mid === entry.mid);\n      } */\n\n      let {transceiver} = entry;\n      if(!transceiver) {\n        transceiver = entry.createTransceiver(conference.connection, transceiverInit);\n      }\n\n      if(entry.direction !== transceiver.direction) {\n        transceiver.direction = entry.direction;\n      }\n\n      const track = tracks.find(track => track.kind === type);\n      const sender = transceiver.sender;\n      if(sender.track === track) {\n        continue;\n      }\n\n      // try { // ! don't use await here. it will wait for adding track and fake one won't be visible in startNegotiation.\n        /* await  */sender.replaceTrack(track).catch(err => {\n          this.log.error(err);\n        });\n      // } catch(err) {\n\n      // }\n    }\n  }\n\n  public stop() {\n    try {\n      const tracks = this.inputStream.getTracks().concat(this.outputStream.getTracks());\n      tracks.forEach(track => {\n        stopTrack(track);\n      });\n    } catch(e) {\n      this.log.error(e);\n    }\n  }\n}\n","const IS_VIBRATE_SUPPORTED = !!navigator?.vibrate;\n\nexport default IS_VIBRATE_SUPPORTED;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { IS_SAFARI } from \"../environment/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\n\r\ntype Result = {\r\n  bytes: Uint8Array, \r\n  waveform?: Uint8Array\r\n};\r\n\r\ntype Task = {\r\n  pages: Uint8Array,\r\n  withWaveform: boolean,\r\n  waveform?: Uint8Array,\r\n  callback: {resolve: (result: Result) => void, reject: (err: any) => void},\r\n  timeout: number\r\n};\r\n\r\nexport class OpusDecodeController {\r\n  private worker: Worker;\r\n  private wavWorker : Worker;\r\n  private sampleRate = 48000;\r\n  private tasks: Array<Task> = [];\r\n  private keepAlive = false;\r\n  private isPlaySupportedResult: boolean;\r\n  private log = logger('OPUS', LogTypes.Error);\r\n\r\n  public isPlaySupported() {\r\n    if(this.isPlaySupportedResult !== undefined) return this.isPlaySupportedResult;\r\n\r\n    const audio = document.createElement('audio');\r\n    return this.isPlaySupportedResult = !!(audio.canPlayType && audio.canPlayType('audio/ogg;').replace(/no/, ''))/*  && false */;\r\n  }\r\n\r\n  public loadWavWorker() {\r\n    if(this.wavWorker) return;\r\n\r\n    this.wavWorker = new Worker('waveWorker.min.js');\r\n    this.wavWorker.addEventListener('message', (e) => {\r\n      const data = e.data;\r\n\r\n      this.log('[WAV] got message:', data);\r\n      if(data && data.page) {\r\n        const bytes = data.page;\r\n        this.onTaskEnd(this.tasks.shift(), bytes);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadWorker() {\r\n    if(this.worker) return;\r\n\r\n    this.worker = new Worker('decoderWorker.min.js');\r\n    this.worker.addEventListener('message', (e) => {\r\n      const data = e.data;\r\n      \r\n      this.log('[DECODER] got message', data);\r\n      if(data.type === 'done') {\r\n        //this.log('[DECODER] send done to wav');\r\n        this.wavWorker.postMessage({command: 'done'});\r\n\r\n        if(data.waveform) {\r\n          this.tasks[0].waveform = data.waveform;\r\n        }\r\n      } else { // e.data contains decoded buffers as float32 values\r\n        //this.log('[DECODER] send encode to wav');\r\n        this.wavWorker.postMessage({\r\n          command: 'encode',\r\n          buffers: e.data\r\n        }, IS_SAFARI ? undefined : data.map((typedArray: Uint8Array) => typedArray.buffer));\r\n      }\r\n    });\r\n  }\r\n\r\n  public setKeepAlive(keepAlive: boolean) {\r\n    this.keepAlive = keepAlive;\r\n    if(this.keepAlive) {\r\n      this.loadWorker();\r\n      this.loadWavWorker();\r\n    } else if(!this.tasks.length) {\r\n      this.terminateWorkers();\r\n    }\r\n  }\r\n\r\n  public onTaskEnd(task: Task, result?: Uint8Array) {\r\n    if(!result) {\r\n      task.callback.reject('timeout');\r\n    } else {\r\n      clearTimeout(task.timeout);\r\n      task.callback.resolve({bytes: result, waveform: task.waveform});\r\n    }\r\n\r\n    if(this.tasks.length) {\r\n      this.executeNewTask(this.tasks[0]);\r\n    }\r\n\r\n    this.terminateWorkers();\r\n  }\r\n\r\n  public terminateWorkers(kill = false) {\r\n    if((this.keepAlive || this.tasks.length) && !kill) return;\r\n\r\n    if(this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n    }\r\n    \r\n    if(this.wavWorker) {\r\n      this.wavWorker.terminate();\r\n      this.wavWorker = null;\r\n    }\r\n  }\r\n\r\n  public executeNewTask(task: Task) {\r\n    this.worker.postMessage({ \r\n      command: 'init',\r\n      decoderSampleRate: this.sampleRate,\r\n      outputBufferSampleRate: this.sampleRate\r\n    });\r\n\r\n    this.wavWorker.postMessage({ \r\n      command: 'init',\r\n      wavBitDepth: 16,\r\n      wavSampleRate: this.sampleRate\r\n    });\r\n\r\n    //console.log('sending command to worker:', task);\r\n    //setTimeout(() => {\r\n      this.log('[DECODER] send decode');\r\n      this.worker.postMessage({\r\n        command: 'decode',\r\n        pages: task.pages,\r\n        waveform: task.withWaveform\r\n      }, IS_SAFARI ? undefined : [task.pages.buffer]);\r\n    //}, 1e3);\r\n\r\n    task.timeout = window.setTimeout(() => {\r\n      this.log.error('decode timeout'/* , task */);\r\n\r\n      this.terminateWorkers(true);\r\n      if(this.tasks.length) {\r\n        this.loadWorker();\r\n        this.loadWavWorker();\r\n      }\r\n\r\n      this.onTaskEnd(this.tasks.shift());\r\n    }, 10e3);\r\n  }\r\n\r\n  public pushDecodeTask(pages: Uint8Array, withWaveform: boolean) {\r\n    return new Promise<Result>((resolve, reject) => {\r\n      const task = {\r\n        pages,\r\n        withWaveform,\r\n        callback: {resolve, reject},\r\n        timeout: 0\r\n      };\r\n\r\n      this.loadWorker();\r\n      this.loadWavWorker();\r\n\r\n      if(this.tasks.push(task) === 1) {\r\n        this.executeNewTask(task);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async decode(typedArray: Uint8Array, withWaveform = false) {\r\n    return this.pushDecodeTask(typedArray, withWaveform).then(result => {\r\n      const dataBlob = new Blob([result.bytes], {type: \"audio/wav\"});\r\n      return {url: URL.createObjectURL(dataBlob), waveform: result.waveform};\r\n    });\r\n  }\r\n}\r\n\r\nconst opusDecodeController = new OpusDecodeController();\r\nMOUNT_CLASS_TO.opusDecodeController = opusDecodeController;\r\nexport default opusDecodeController;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport appPhotosManager from \"./appPhotosManager\";\r\nimport appDocsManager from \"./appDocsManager\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\r\nimport rootScope from \"../rootScope\";\r\nimport { safeReplaceObject } from \"../../helpers/object\";\r\nimport { limitSymbols } from \"../../helpers/string\";\r\nimport { WebPage } from \"../../layer\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n  \r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage && \r\n      oldWebPage._ === apiWebPage._ && \r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n  \r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n  \r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      let shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      shortTitle = limitSymbols(shortTitle, 80, 100);\r\n\r\n      apiWebPage.rTitle = RichTextProcessor.wrapRichText(shortTitle, {noLinks: true, noLinebreaks: true});\r\n      let contextHashtag = '';\r\n      if(siteName === 'GitHub') {\r\n        const matches = apiWebPage.url.match(/(https?:\\/\\/github\\.com\\/[^\\/]+\\/[^\\/]+)/);\r\n        if(matches) {\r\n          contextHashtag = matches[0] + '/issues/{1}';\r\n        }\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n      const shortDescriptionText = limitSymbols(apiWebPage.description || '', 150, 180);\r\n      apiWebPage.rDescription = RichTextProcessor.wrapRichText(shortDescriptionText, {\r\n        contextSite: siteName || 'external',\r\n        contextHashtag: contextHashtag\r\n      });\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n    \r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n    \r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n    \r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(), \r\n          mid: +mid, \r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n}\r\n\r\nconst appWebPagesManager = new AppWebPagesManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appWebPagesManager = appWebPagesManager);\r\nexport default appWebPagesManager;\r\n","import IS_WEBP_SUPPORTED from \"./webpSupport\";\n\nconst IMAGE_MIME_TYPES_SUPPORTED = new Set([\n  'image/jpeg',\n  'image/png',\n  'image/bmp'\n]);\n\nif(IS_WEBP_SUPPORTED) {\n  IMAGE_MIME_TYPES_SUPPORTED.add('image/webp');\n}\n\nexport default IMAGE_MIME_TYPES_SUPPORTED;\n","export const GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX = 50;\nexport const GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS = 100;\nexport const GROUP_CALL_PARTICIPANTS_LOAD_LIMIT = 100;\n","import simulateEvent from \"../../../helpers/dom/dispatchEvent\";\n\nexport default function stopTrack(track: MediaStreamTrack) {\n  track.stop();\n  simulateEvent(track, 'ended');\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":-646342540,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1073147056,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"kicked\",\"type\":\"flags.1?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-2107528095,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":-779165146,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-516145888,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-2074799289,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":1080663248,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1441072131,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":739712882,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-1673717362,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1353671392,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-818518751,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1682413576,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1007549728,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-232290676,\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":1135492588,\"predicate\":\"updateStickerSets\",\"params\":[],\"type\":\"Update\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-299124375,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1153291573,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":357013699,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":856375399,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":1248893260,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":512177195,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":408623183,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-673242758,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":-1240849242,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":460632885,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-2067782896,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":215516896,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"}],\"type\":\"Invoice\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":378828315,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?PaymentSavedCredentials\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1655957568,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1661470870,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":1648543603,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":-534283678,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-532532493,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"int\"},{\"name\":\"file_size_max\",\"type\":\"int\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":1705297877,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-2091463255,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1873957073,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":142306870,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactons\",\"type\":\"flags.1?Vector<MessageUserReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":-1826077446,\"predicate\":\"messageUserReaction\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"MessageUserReaction\"},{\"id\":-1553558980,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessageUserReaction>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1126886015,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":1099779595,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"reason\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1880182943,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":-323339813,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-262453244,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?int\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":-1919060949,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":228423076,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-497026848,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-869258997,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":164303470,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":864953444,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":2057376407,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1137057461,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1180140658,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":251759059,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-134016113,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1932455680,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-265962357,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":627641572,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-521245833,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":335875750,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"Vector<string>\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":-647969580,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":1926525996,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1319462148,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":536919235,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1302676017,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-956147407,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":1029681423,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1355375294,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1976353651,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-619695760,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":818134173,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"}]},\"layer\":137} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n//import sha1 from '@cryptography/sha1';\n//import sha256 from '@cryptography/sha256';\nimport {IGE} from '@cryptography/aes';\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n\nimport {str2bigInt, bpe, equalsInt, greater, \n  copy_, eGCD_, add_, rightShift_, sub_, copyInt_, isZero,\n  divide_, one, bigInt2str, powMod, bigInt2bytes, int2bigInt, mod} from '../../vendor/leemon';//from 'leemon';\n\nimport { addPadding } from '../mtproto/bin_utils';\nimport { bytesToWordss, bytesFromWordss, bytesToHex, bytesFromHex, convertToUint8Array } from '../../helpers/bytes';\nimport { nextRandomUint } from '../../helpers/random';\nimport type { RSAPublicKeyHex } from '../mtproto/rsaKeysManager';\n\nconst subtle = typeof(window) !== 'undefined' && 'crypto' in window ? window.crypto.subtle : self.crypto.subtle;\n\nexport function longToBytes(sLong: string) {\n  /* let perf = performance.now();\n  for(let i = 0; i < 1000000; ++i) {\n    bytesFromWords({words: longToInts(sLong), sigBytes: 8}).reverse();\n  }\n  console.log('longToBytes JSBN', sLong, performance.now() - perf);\n  \n  //const bytes = bytesFromWords({words: longToInts(sLong), sigBytes: 8}).reverse();\n  \n  perf = performance.now();\n  for(let i = 0; i < 1000000; ++i) {\n    bigInt2bytes(str2bigInt(sLong, 10));\n  }\n  console.log('longToBytes LEEMON', sLong, performance.now() - perf); */\n\n  const bigIntBytes = new Uint8Array(bigInt2bytes(str2bigInt(sLong, 10), false));\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  //console.log('longToBytes', bytes, b);\n  \n  return bytes;\n}\n\nexport function sha1HashSync(bytes: Parameters<typeof convertToUint8Array>[0]) {\n  return subtle.digest('SHA-1', convertToUint8Array(bytes)).then(b => {\n    return new Uint8Array(b);\n  });\n  /* //console.trace(dT(), 'SHA-1 hash start', bytes);\n\n  const hashBytes: number[] = [];\n\n  let hash = sha1(String.fromCharCode.apply(null, \n    bytes instanceof Uint8Array ? [...bytes] : [...new Uint8Array(bytes)]));\n  for(let i = 0; i < hash.length; ++i) {\n    hashBytes.push(hash.charCodeAt(i));\n  }\n\n  //console.log(dT(), 'SHA-1 hash finish', hashBytes, bytesToHex(hashBytes));\n\n  return new Uint8Array(hashBytes); */\n}\n\nexport function sha256HashSync(bytes: Parameters<typeof convertToUint8Array>[0]) {\n  return subtle.digest('SHA-256', convertToUint8Array(bytes)).then(b => {\n    //console.log('legacy', performance.now() - perfS);\n    return new Uint8Array(b);\n  });\n  /* //console.log('SHA-256 hash start');\n\n  let perfS = performance.now();\n  \n\n  let perfD = performance.now();\n  let words = typeof(bytes) === 'string' ? bytes : bytesToWordss(bytes as any);\n  let hash = sha256(words);\n  console.log('darutkin', performance.now() - perfD);\n\n  //console.log('SHA-256 hash finish', hash, sha256(words, 'hex'));\n\n  return bytesFromWordss(hash); */\n}\n\nexport function aesEncryptSync(bytes: Uint8Array, keyBytes: Uint8Array, ivBytes: Uint8Array) {\n  //console.log(dT(), 'AES encrypt start', bytes, keyBytes, ivBytes);\n  // console.log('aes before padding bytes:', bytesToHex(bytes));\n  bytes = addPadding(bytes);\n  // console.log('aes after padding bytes:', bytesToHex(bytes));\n\n  const cipher = new IGE(bytesToWordss(keyBytes), bytesToWordss(ivBytes));\n  const encryptedBytes = cipher.encrypt(bytesToWordss(bytes));\n  //console.log(dT(), 'AES encrypt finish');\n\n  return bytesFromWordss(encryptedBytes);\n}\n\nexport function aesDecryptSync(bytes: Uint8Array, keyBytes: Uint8Array, ivBytes: Uint8Array) {\n  //console.log(dT(), 'AES decrypt start', bytes, keyBytes, ivBytes);\n\n  const cipher = new IGE(bytesToWordss(keyBytes), bytesToWordss(ivBytes));\n  const decryptedBytes = cipher.decrypt(bytesToWordss(bytes));\n\n  //console.log(dT(), 'AES decrypt finish');\n\n  return bytesFromWordss(decryptedBytes);\n}\n\nexport function rsaEncrypt(bytes: Uint8Array, publicKey: RSAPublicKeyHex) {\n  //console.log(dT(), 'RSA encrypt start', publicKey, bytes);\n\n  const N = str2bigInt(publicKey.modulus, 16);\n  const E = str2bigInt(publicKey.exponent, 16);\n  const X = str2bigInt(bytesToHex(bytes), 16);\n\n  const encryptedBigInt = powMod(X, E, N);\n  const encryptedBytes = bytesFromHex(bigInt2str(encryptedBigInt, 16));\n\n  //console.log(dT(), 'RSA encrypt finish');\n\n  return encryptedBytes;\n}\n\nexport async function hash_pbkdf2(buffer: Parameters<SubtleCrypto['importKey']>[1], salt: HkdfParams['salt'], iterations: number) {\n  const importKey = await subtle.importKey(\n    'raw',\n    buffer,\n    {name: 'PBKDF2'},\n    false,\n    [/* 'deriveKey',  */'deriveBits']\n  );\n  \n  /* await subtle.deriveKey(\n    {\n      name: 'PBKDF2',\n      salt,\n      iterations,\n      hash: {name: 'SHA-512'}\n    },\n    importKey,\n    {\n      name: 'AES-CTR',\n      length: 256\n    },\n    false,\n    ['encrypt', 'decrypt']\n  ); */\n\n  let bits = subtle.deriveBits({\n      name: 'PBKDF2',\n      salt,\n      iterations,\n      hash: {name: 'SHA-512'},\n    },\n    importKey,\n    512\n  );\n\n  return bits.then(buffer => new Uint8Array(buffer));\n}\n\nexport function pqPrimeFactorization(pqBytes: Uint8Array | number[]) {\n  let result: ReturnType<typeof pqPrimeLeemon>;\n\n  //console.log('PQ start', pqBytes, bytesToHex(pqBytes));\n\n  try {\n    //console.time('PQ leemon');\n    result = pqPrimeLeemon(str2bigInt(bytesToHex(pqBytes), 16, Math.ceil(64 / bpe) + 1));\n    //console.timeEnd('PQ leemon');\n  } catch(e) {\n    console.error('Pq leemon Exception', e);\n  }\n\n  //console.log('PQ finish', result);\n\n  return result;\n}\n\nexport function pqPrimeLeemon(what: number[]): [Uint8Array, Uint8Array, number] {\n  var minBits = 64;\n  var minLen = Math.ceil(minBits / bpe) + 1;\n  var it = 0;\n  var i, q;\n  var j, lim;\n  var P;\n  var Q;\n  var a = new Array(minLen);\n  var b = new Array(minLen);\n  var c = new Array(minLen);\n  var g = new Array(minLen);\n  var z = new Array(minLen);\n  var x = new Array(minLen);\n  var y = new Array(minLen);\n\n  for(i = 0; i < 3; ++i) {\n    q = (nextRandomUint(8) & 15) + 17;\n    copy_(x, mod(int2bigInt(nextRandomUint(32), 32, 0), what));\n    copy_(y, x);\n    lim = 1 << (i + 18);\n\n    for (j = 1; j < lim; ++j) {\n      ++it;\n      copy_(a, x);\n      copy_(b, x);\n      copyInt_(c, q);\n\n      while(!isZero(b)) {\n        if(b[0] & 1) {\n          add_(c, a);\n          if(greater(c, what)) {\n            sub_(c, what);\n          }\n        }\n        add_(a, a);\n        if(greater(a, what)) {\n          sub_(a, what);\n        }\n        rightShift_(b, 1);\n      }\n\n      copy_(x, c);\n      if(greater(x, y)) {\n        copy_(z, x);\n        sub_(z, y);\n      } else {\n        copy_(z, y);\n        sub_(z, x);\n      }\n      eGCD_(z, what, g, a, b);\n      if(!equalsInt(g, 1)) {\n        break;\n      }\n      if((j & (j - 1)) === 0) {\n        copy_(y, x);\n      }\n    }\n    if(greater(g, one)) {\n      break;\n    }\n  }\n\n  divide_(what, g, x, y);\n\n  if(greater(g, x)) {\n    P = x;\n    Q = g;\n  } else {\n    P = g;\n    Q = x;\n  }\n\n  // console.log(dT(), 'done', bigInt2str(what, 10), bigInt2str(P, 10), bigInt2str(Q, 10))\n\n  return [new Uint8Array(bigInt2bytes(P)), new Uint8Array(bigInt2bytes(Q)), it];\n}\n\nexport function bytesModPow(x: number[] | Uint8Array, y: number[] | Uint8Array, m: number[] | Uint8Array) {\n  try {\n    const xBigInt = str2bigInt(bytesToHex(x), 16);\n    const yBigInt = str2bigInt(bytesToHex(y), 16);\n    const mBigInt = str2bigInt(bytesToHex(m), 16);\n    const resBigInt = powMod(xBigInt, yBigInt, mBigInt);\n\n    return bytesFromHex(bigInt2str(resBigInt, 16));\n  } catch(e) {\n    console.error('mod pow error', e);\n  }\n\n  //return bytesFromBigInt(new BigInteger(x).modPow(new BigInteger(y), new BigInteger(m)), 256);\n}\n\n//export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n//export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  //console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  //console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { bytesFromHex, bytesToHex } from '../../helpers/bytes';\nimport { addPadding, isObject, longFromInts } from './bin_utils';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { str2bigInt, bigInt2str, int2bigInt, sub_ } from '../../vendor/leemon';\nimport Schema, { MTProtoConstructor } from './schema';\nimport { JSONValue } from '../../layer';\n\n                      \n// @ts-ignore\nimport { gzipUncompress } from '../crypto/crypto_utils';\n          \n\n// @ts-ignore\n/* import {BigInteger} from 'jsbn';\n\nexport function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n}\n\nfunction bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10)\n} */\n\nconst boolFalse = +Schema.API.constructors.find(c => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find(c => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find(c => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find(c => c.predicate === 'gzip_packed').id;\n\n//console.log('boolFalse', boolFalse === 0xbc799737);\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;//Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    //let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    //console.log('perf uint8', performance.now() - perf);\n\n    //perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    //console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n  \n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n  \n      resultArray.set(this.byteView.subarray(0, this.offset));\n  \n      return resultArray;\n    }\n  \n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n  \n    //console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    //const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n    \n    this.createBuffer();\n    \n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32), \n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n  \n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n  \n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n  \n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n  \n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n  \n    if(typeof sLong !== 'string') {\n      sLong = sLong ? sLong.toString() : '0';\n    }\n\n    /* let perf = performance.now();\n    const jsbnBytes: Uint8Array = new Uint8Array(8);\n    const jsbnBigInt = bigStringInt(sLong);\n    for(let i = 0; i < 8; i++) {\n      jsbnBytes[i] = +jsbnBigInt.shiftRight(8 * i).and(bigint(255)).toString(10);\n    }\n    console.log('perf1', performance.now() - perf); */\n\n    // perf = performance.now();\n    let bigInt: number[];\n    if(sLong[0] === '-') { // leemon library can't parse signed numbers\n      bigInt = int2bigInt(0, 64, 8);\n      sub_(bigInt, str2bigInt(sLong.slice(1), 10, 64));\n    } else {\n      bigInt = str2bigInt(sLong, 10, 64);\n    }\n\n    const hex = bigInt2str(bigInt, 16).slice(-16);\n    const bytes = addPadding(bytesFromHex(hex).reverse(), 8, true, true, false);\n\n    // console.log('perf2', performance.now() - perf);\n\n    this.storeRawBytes(bytes);\n\n    // if(jsbnBytes.hex !== bytes.hex) {\n    //   console.error(bigInt, sLong, bigInt2str(bigInt, 10), negative(bigInt), jsbnBytes.hex, bigInt2str(bigInt, 16), bytes.hex);\n    // }\n  }\n  \n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    doubleView[0] = f;\n  \n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n  \n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n  \n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n  \n    this.checkLength(sUTF8.length + 8);\n  \n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n  \n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n  \n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n  \n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n  \n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n  \n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n  \n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find(m => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n  \n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            //console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n        \n        //console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n      \n      //console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n  \n  public storeObject(obj: any, type: string, field?: string) {\n    //console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n  \n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if (type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if (type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n    \n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find(c => c.predicate === predicate);\n  \n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n  \n    if(predicate === type) {\n      isBare = true;\n    }\n  \n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      //console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        //console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            //console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      //console.log('storeObject', param, type);\n  \n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n  \n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug = \n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    //buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    //console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  private readInt(field: string) {\n    //if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n  \n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n  \n    this.debug/*  || field.includes('[dialog][read_outbox_max_id]') */ \n      && console.log('<<<', i.toString(16), i, field, \n      this.byteView.slice(this.offset - 16, this.offset + 16), \n      this.byteView.slice(this.offset - 16, this.offset + 16).hex);\n  \n    this.offset += 4;\n  \n    return i;\n  }\n  \n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n  \n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n  \n    return doubleView[0];\n  }\n  \n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n  \n    //const longDec = bigint(iHigh).shiftLeft(32).add(bigint(iLow)).toString();\n    const longDec = longFromInts(iHigh, iLow);\n\n    if(!this.mtproto) {\n      const num = +longDec;\n      if(Number.isSafeInteger(num)) {\n        // @ts-ignore\n        return num;\n      }\n    }\n  \n    // @ts-ignore\n    return longDec;\n  }\n  \n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n  \n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch (e) {\n      s = sUTF8;\n    }\n  \n    this.debug && console.log('<<<', s, (field || '') + ':string');\n  \n    return s;\n  }\n  \n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    const bytes = this.byteView.subarray(this.offset, this.offset + len);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n  \n    return bytes;\n  }\n  \n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n  \n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView.subarray(this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n  \n    return bytes;\n  }\n  \n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n  \n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView.subarray(this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n  \n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n  \n    return result;\n  }\n  \n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n  \n    field = field || type || 'Object';\n  \n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n  \n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find(c => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find(c => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n  \n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n  \n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n  \n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n  \n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n  \n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n        \n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n  \n    const predicate = constructorData.predicate;\n  \n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            //console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          //console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n  \n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n  \n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n            \n          result[param.name] = value;\n        }\n      }\n    }\n  \n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n  \n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n  \n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n  \n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport { TLDeserialization, TLSerialization };\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CryptoWorker from \"../crypto/cryptoworker\";\r\nimport {str2bigInt, isZero,\r\n  bigInt2str, powMod, int2bigInt, mult, mod, sub, bitSize, negative, add, greater} from '../../vendor/leemon';\r\n\r\nimport {logger, LogTypes} from '../logger';\r\nimport { AccountPassword, InputCheckPasswordSRP, PasswordKdfAlgo } from \"../../layer\";\r\nimport { bufferConcats, bytesToHex, bytesFromHex, bytesXor, convertToUint8Array } from \"../../helpers/bytes\";\r\nimport { addPadding } from \"../mtproto/bin_utils\";\r\n//import { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nconst log = logger('SRP', LogTypes.Error);\r\n\r\n//MOUNT_CLASS_TO && Object.assign(MOUNT_CLASS_TO, {str2bigInt, bigInt2str, int2bigInt});\r\n\r\nexport async function makePasswordHash(password: string, client_salt: Uint8Array, server_salt: Uint8Array) {\r\n  // ! look into crypto_methods.test.ts\r\n  let buffer = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(client_salt, new TextEncoder().encode(password), client_salt));\r\n  //log('encoded 1', bytesToHex(new Uint8Array(buffer)));\r\n\r\n  buffer = bufferConcats(server_salt, buffer, server_salt);\r\n\r\n  buffer = await CryptoWorker.invokeCrypto('sha256-hash', buffer);\r\n  //log('encoded 2', buffer, bytesToHex(new Uint8Array(buffer)));\r\n\r\n  let hash = await CryptoWorker.invokeCrypto('pbkdf2', new Uint8Array(buffer), client_salt, 100000);\r\n  //log('encoded 3', hash, bytesToHex(new Uint8Array(hash)));\r\n\r\n  hash = bufferConcats(server_salt, hash, server_salt);\r\n\r\n  buffer = await CryptoWorker.invokeCrypto('sha256-hash', hash);\r\n  //log('got password hash:', buffer, bytesToHex(new Uint8Array(buffer)));\r\n\r\n  return buffer;\r\n}\r\n\r\nexport async function computeSRP(password: string, state: AccountPassword, isNew: boolean) {\r\n  const algo = (isNew ? state.new_algo : state.current_algo) as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n  //console.log('computeSRP:', password, state, isNew, algo);\r\n\r\n  const p = str2bigInt(bytesToHex(algo.p), 16);\r\n  const g = int2bigInt(algo.g, 32, 256);\r\n  \r\n  //log('p', bigInt2str(p, 16));\r\n  \r\n  /* if(B.compareTo(BigInteger.ZERO) < 0) {\r\n    console.error('srp_B < 0')\r\n  }\r\n  \r\n  if(B.compareTo(p) <= 0) {\r\n    console.error('srp_B <= p');\r\n  } */\r\n  \r\n  /* let check_prime_and_good = (bytes: any, g: number) => {\r\n    let good_prime = 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b';\r\n    \r\n    if(bytesToHex(bytes) === good_prime && [3, 4, 5, 7].indexOf(g) !== -1) {\r\n      return true;\r\n    }\r\n    \r\n    // TO-DO check_prime_and_good_check\r\n  }; */\r\n  \r\n  //check_prime_and_good(algo.p, g);\r\n  \r\n  const pw_hash = await makePasswordHash(password, algo.salt1, algo.salt2);\r\n  const x = str2bigInt(bytesToHex(pw_hash), 16);\r\n  \r\n  //log('computed pw_hash:', pw_hash, x, bytesToHex(new Uint8Array(pw_hash)));\r\n  \r\n  const padArray = function(arr: number[] | Uint8Array, len: number) {\r\n    if(!(arr instanceof Uint8Array)) {\r\n      arr = convertToUint8Array(arr);\r\n    }\r\n    \r\n    return addPadding(arr, len, true, true, true);\r\n  };\r\n  \r\n  const v = powMod(g, x, p);\r\n  \r\n  const flipper = (arr: Uint8Array | number[]) => {\r\n    const out = new Uint8Array(arr.length);\r\n    for(let i = 0; i < arr.length; i += 4) {\r\n      out[i] = arr[i + 3];\r\n      out[i + 1] = arr[i + 2];\r\n      out[i + 2] = arr[i + 1];\r\n      out[i + 3] = arr[i];\r\n    }\r\n    \r\n    return out;\r\n  };\r\n  \r\n  // * https://core.telegram.org/api/srp#setting-a-new-2fa-password\r\n  if(isNew) {\r\n    const bytes = bytesFromHex(bigInt2str(v, 16));\r\n    return padArray(/* (isBigEndian ? bytes.reverse() : bytes) */bytes, 256);\r\n  }\r\n  \r\n  const B = str2bigInt(bytesToHex(state.srp_B), 16);\r\n  //log('B', bigInt2str(B, 16));\r\n  \r\n  const pForHash = padArray(bytesFromHex(bigInt2str(p, 16)), 256);\r\n  const gForHash = padArray(bytesFromHex(bigInt2str(g, 16)), 256); // like uint8array\r\n  const b_for_hash = padArray(bytesFromHex(bigInt2str(B, 16)), 256);\r\n  /* log(bytesToHex(pForHash));\r\n  log(bytesToHex(gForHash));\r\n  log(bytesToHex(b_for_hash)); */\r\n\r\n  //log('g_x', bigInt2str(g_x, 16));\r\n\r\n  const kHash = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(pForHash, gForHash));\r\n  const k = str2bigInt(bytesToHex(kHash), 16);\r\n\r\n  //log('k', bigInt2str(k, 16));\r\n\r\n  // kg_x = (k * g_x) % p\r\n  const k_v = mod(mult(k, v), p);\r\n\r\n  // good\r\n\r\n  //log('kg_x', bigInt2str(kg_x, 16));\r\n\r\n  const is_good_mod_exp_first = (modexp: any, prime: any) => {\r\n    const diff = sub(prime, modexp);\r\n    const min_diff_bits_count = 2048 - 64;\r\n    const max_mod_exp_size = 256;\r\n    if(negative(diff) ||\r\n      bitSize(diff) < min_diff_bits_count || \r\n      bitSize(modexp) < min_diff_bits_count || \r\n      Math.floor((bitSize(modexp) + 7) / 8) > max_mod_exp_size)\r\n        return false;\r\n    return true;\r\n  };\r\n\r\n  const generate_and_check_random = async() => {\r\n    while(true) {\r\n      const a = str2bigInt(bytesToHex(flipper(state.secure_random)), 16);\r\n      //const a = str2bigInt('9153faef8f2bb6da91f6e5bc96bc00860a530a572a0f45aac0842b4602d711f8bda8d59fb53705e4ae3e31a3c4f0681955425f224297b8e9efd898fec22046debb7ba8a0bcf2be1ada7b100424ea318fdcef6ccfe6d7ab7d978c0eb76a807d4ab200eb767a22de0d828bc53f42c5a35c2df6e6ceeef9a3487aae8e9ef2271f2f6742e83b8211161fb1a0e037491ab2c2c73ad63c8bd1d739de1b523fe8d461270cedcf240de8da75f31be4933576532955041dc5770c18d3e75d0b357df9da4a5c8726d4fced87d15752400883dc57fa1937ac17608c5446c4774dcd123676d683ce3a1ab9f7e020ca52faafc99969822717c8e07ea383d5fb1a007ba0d170cb', 16);\r\n\r\n      //console.log('ITERATION');\r\n\r\n      //log('g a p', bigInt2str(g, 16), bigInt2str(a, 16), bigInt2str(p, 16));\r\n\r\n      const A = powMod(g, a, p);\r\n      //log('A MODPOW', bigInt2str(A, 16));\r\n      if(is_good_mod_exp_first(A, p)) {\r\n        const a_for_hash = bytesFromHex(bigInt2str(A, 16));\r\n\r\n        const s = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(a_for_hash, b_for_hash));\r\n        const u = str2bigInt(s.hex, 16);\r\n        if(!isZero(u) && !negative(u))\r\n          return {a, a_for_hash, u};\r\n      } \r\n    }\r\n  }\r\n    \r\n\r\n  const {a, a_for_hash, u} = await generate_and_check_random();\r\n\r\n  /* log('a', bigInt2str(a, 16));\r\n  log('a_for_hash', bytesToHex(a_for_hash));\r\n  log('u', bigInt2str(u, 16)); */\r\n\r\n  // g_b = (B - kg_x) % p\r\n  /* log('B - kg_x', bigInt2str(sub(B, kg_x), 16));\r\n  log('subtract', bigInt2str(B, 16), bigInt2str(kg_x, 16));\r\n  log('B - kg_x', bigInt2str(sub(B, kg_x), 16)); */\r\n\r\n  let g_b: number[];\r\n  if(!greater(B, k_v)) {\r\n    //log('negative');\r\n    g_b = add(B, p);\r\n  } else g_b = B;\r\n  g_b = mod(sub(g_b, k_v), p);\r\n  /* let g_b = sub(B, kg_x);\r\n  if(negative(g_b)) g_b = add(g_b, p); */\r\n  \r\n  //log('g_b', bigInt2str(g_b, 16));\r\n\r\n  /* if(!is_good_mod_exp_first(g_b, p))\r\n    throw new Error('bad g_b'); */\r\n\r\n  const ux = mult(u, x);\r\n  //log('u and x multiply', bigInt2str(u, 16), bigInt2str(x, 16), bigInt2str(ux, 16));\r\n  const a_ux = add(a, ux);\r\n  const S = powMod(g_b, a_ux, p);\r\n\r\n  const K = await CryptoWorker.invokeCrypto('sha256-hash', padArray(bytesFromHex(bigInt2str(S, 16)), 256));\r\n\r\n  //log('K', bytesToHex(K), new Uint32Array(new Uint8Array(K).buffer));\r\n\r\n  let h1 = await CryptoWorker.invokeCrypto('sha256-hash', pForHash);\r\n  const h2 = await CryptoWorker.invokeCrypto('sha256-hash', gForHash);\r\n  h1 = bytesXor(h1, h2);\r\n\r\n  const buff = bufferConcats(h1, \r\n    await CryptoWorker.invokeCrypto('sha256-hash', algo.salt1),\r\n    await CryptoWorker.invokeCrypto('sha256-hash', algo.salt2),\r\n    a_for_hash,\r\n    b_for_hash,\r\n    K\r\n  );\r\n\r\n  const M1 = await CryptoWorker.invokeCrypto('sha256-hash', buff);\r\n\r\n  const out = {\r\n    _: 'inputCheckPasswordSRP', \r\n    srp_id: state.srp_id, \r\n    A: new Uint8Array(a_for_hash), \r\n    M1\r\n  } as InputCheckPasswordSRP.inputCheckPasswordSRP;\r\n\r\n\r\n  //log('out', bytesToHex(out.A), bytesToHex(out.M1));\r\n  return out;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// import { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport CryptoWorkerMethods, { CryptoMethods } from './crypto_methods';\r\n\r\n                      \r\nimport { aesDecryptSync, aesEncryptSync, bytesModPow, gzipUncompress, hash_pbkdf2, pqPrimeFactorization, rsaEncrypt, sha1HashSync, sha256HashSync } from './crypto_utils';\r\nimport { computeSRP } from './srp';\r\n          \r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\nclass CryptoWorker extends CryptoWorkerMethods {\r\n  private webWorker: Worker | boolean = false;\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n  private debug = false;\r\n\r\n  private utils: CryptoMethods;\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('CW constructor');\r\n\r\n                          \r\n    this.utils = {\r\n      'sha1-hash': sha1HashSync,\r\n      'sha256-hash': sha256HashSync,\r\n      'pbkdf2': hash_pbkdf2,\r\n      'aes-encrypt': aesEncryptSync,\r\n      'aes-decrypt': aesDecryptSync,\r\n      'rsa-encrypt': rsaEncrypt,\r\n      'factorize': pqPrimeFactorization,\r\n      'mod-pow': bytesModPow,\r\n      'gzipUncompress': gzipUncompress,\r\n      'computeSRP': computeSRP\r\n    };\r\n\r\n    // Promise.all([\r\n    //   import('./crypto_utils').then(utils => {\r\n    //     Object.assign(this.utils, {\r\n    //       'sha1-hash': utils.sha1HashSync,\r\n    //       'sha256-hash': utils.sha256HashSync,\r\n    //       'pbkdf2': utils.hash_pbkdf2,\r\n    //       'aes-encrypt': utils.aesEncryptSync,\r\n    //       'aes-decrypt': utils.aesDecryptSync,\r\n    //       'rsa-encrypt': utils.rsaEncrypt,\r\n    //       'factorize': utils.pqPrimeFactorization,\r\n    //       'mod-pow': utils.bytesModPow,\r\n    //       'gzipUncompress': utils.gzipUncompress,\r\n    //     });\r\n    //   }),\r\n\r\n    //   import('./srp').then(srp => {\r\n    //     this.utils.computeSRP = srp.computeSRP;\r\n    //   })/* ,\r\n\r\n    //   import('../bin_utils').then(utils => {\r\n    //     this.utils.unzip = utils.gzipUncompress;\r\n    //   }) */\r\n    // ]);\r\n\r\n    return;\r\n             \r\n                       \r\n                                                          \r\n                                             \r\n                                       \r\n                                           \r\n                               \r\n                                       \r\n                                             \r\n                                  \r\n                  \r\n                                                            \r\n           \r\n          \r\n\r\n                                             \r\n                                           \r\n                                 \r\n          \r\n         \r\n     \r\n              \r\n  }\r\n\r\n                         \r\n                                                     \r\n                                         \r\n                                \r\n                                                                      \r\n                               \r\n                                   \r\n     \r\n   \r\n            \r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && console.log('CW start', task, args);\r\n\r\n                          \r\n    // @ts-ignore\r\n    return Promise.resolve<T>(this.utils[task](...args));\r\n             \r\n                                                \r\n                                                                     \r\n  \r\n                    \r\n             \r\n                            \r\n            \r\n        \r\n\r\n                                                       \r\n                                \r\n                            \r\n  \r\n                    \r\n       \r\n              \r\n  }\r\n\r\n                         \r\n                            \r\n                        \r\n                                       \r\n                                                        \r\n         \r\n\r\n                              \r\n     \r\n   \r\n            \r\n}\r\n\r\nconst cryptoWorker = new CryptoWorker();\r\n// MOUNT_CLASS_TO.CryptoWorker = cryptoWorker;\r\nexport default cryptoWorker;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport { longFromInts } from './bin_utils';\nimport { nextRandomUint } from '../../helpers/random';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { WorkerTaskVoidTemplate } from '../../types';\nimport { notifySomeone } from '../../helpers/context';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager {\n  private lastMessageId: [number, number] = [0, 0];\n  private timeOffset: number = 0;\n\n  constructor() {\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = longFromInts(messageId[0], messageId[1]);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    sessionStorage.set({\n      server_time_offset: newTimeOffset\n    });\n\n    this.lastMessageId = [0, 0];\n    this.timeOffset = newTimeOffset;\n    \n    //console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n                          \n    const task: ApplyServerTimeOffsetTask = {\n      type: 'applyServerTimeOffset',\n      payload: newTimeOffset\n    };\n    notifySomeone(task);\n              \n\n    return changed;\n  }\n}\n\nconst timeManager = new TimeManager();\nMOUNT_CLASS_TO.timeManager = timeManager;\nexport default timeManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import aesjs from 'aes-js';\r\nimport AES from \"@cryptography/aes\";\r\nimport { bytesFromWordss } from \"../../../helpers/bytes\";\r\nimport { Codec } from \"./codec\";\r\n\r\nclass Counter {\r\n  _counter: Uint8Array;\r\n\r\n  constructor(initialValue: Uint8Array) {\r\n    this._counter = initialValue;\r\n  }\r\n\r\n  increment() {\r\n    for(let i = 15; i >= 0; i--) {\r\n      if(this._counter[i] === 255) {\r\n        this._counter[i] = 0;\r\n      } else {\r\n        this._counter[i]++;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass CTR {\r\n  _counter: Counter;\r\n  _remainingCounter: Uint8Array = null;\r\n  _remainingCounterIndex = 16;\r\n  _aes: AES;\r\n\r\n  constructor(key: Uint8Array, counter: Uint8Array) {\r\n    this._counter = new Counter(counter);\r\n    this._aes = new AES(key);\r\n  }\r\n\r\n  update(payload: Uint8Array) {\r\n    const encrypted = payload.slice();\r\n\r\n    for(let i = 0; i < encrypted.length; i++) {\r\n      if(this._remainingCounterIndex === 16) {\r\n        this._remainingCounter = new Uint8Array(bytesFromWordss(this._aes.encrypt(this._counter._counter)));\r\n        this._remainingCounterIndex = 0;\r\n        this._counter.increment();\r\n      }\r\n\r\n      encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\r\n    }\r\n\r\n    return encrypted;\r\n  }\r\n}\r\n\r\n/* \r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* public enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  public dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  public encNew: CTR;\r\n  public decNew: CTR;\r\n\r\n  public init(codec: Codec) {\r\n    const initPayload = new Uint8Array(64);\r\n    initPayload.randomize();\r\n    \r\n    while(true) {\r\n      let val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | (initPayload[0]);\r\n      let val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | (initPayload[4]);\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n          //initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n          break;\r\n      }\r\n      initPayload.randomize();\r\n    }\r\n\r\n    ////////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    this.encNew = new CTR(encKey, encIv);\r\n    this.decNew = new CTR(decKey, decIv);\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = this.encode(initPayload);\r\n\r\n    //console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  } */\r\n  public encode(payload: Uint8Array) {\r\n    return this.encNew.update(payload);\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.decNew.update(payload);\r\n  }\r\n  /* public encode(payload: Uint8Array) {\r\n    let res = this.encNew.encrypt(payload);\r\n    let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n    return bytes;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.decNew.decrypt(payload);\r\n    let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n    return bytes;\r\n  } */\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { Codec } from \"./codec\";\r\n\r\nexport class IntermediatePacketCodec implements Codec {\r\n  public tag = 0xee;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  //private lol = 0;\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    if((data.length % 4) !== 0) {\r\n      console.error('Encode error!', data.length, data);\r\n    }\r\n\r\n    const len = data.length;\r\n    const header = new Uint8Array(new Int32Array([/* ++this.lol >= 25 ? 0x80000001 :  */len]).buffer);\r\n\r\n    //console.log('got nobody cause im braindead', header, len, /* data,  */data.buffer.byteLength === data.length);\r\n    return header.concat(data);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    const length = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\r\n\r\n    return data.slice(4, 4 + length);\r\n  }\r\n}\r\n\r\nexport default new IntermediatePacketCodec();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from \"../../../config/modes\";\nimport { logger, LogTypes } from \"../../logger\";\nimport MTPNetworker from \"../networker\";\nimport Obfuscation from \"./obfuscation\";\nimport MTTransport, { MTConnection, MTConnectionConstructable } from \"./transport\";\nimport intermediatePacketCodec from './intermediate';\nimport { ConnectionStatus } from \"../connectionStatus\";\n\n                    \nimport transportController from \"./controller\";\n          \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = intermediatePacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any, \n    reject: any, \n    body: Uint8Array, \n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n\n  //private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(private Connection: MTConnectionConstructable, \n    private dcId: number, \n    private url: string, \n    private logSuffix: string, \n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    \n    this.connect();\n  }\n\n  private onOpen = () => {\n    this.connected = true;\n\n                        \n    transportController.setTransportOpened('websocket');\n              \n\n    const initPayload = this.obfuscation.init(this.codec);\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    } else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    }\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = (buffer: ArrayBuffer) => {\n    let data = this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      //this.pending = this.pending.filter(p => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then(response => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        //this.releasePending();\n      }).catch(err => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      //this.dd();\n      return;\n    }\n\n    //console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', data.hex);\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n    \n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n    \n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = self.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                        \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n              \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n    \n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    this.pending.forEach(pending => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    //this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    //this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = this.connected ? this.encodeBody(body) : undefined;\n\n    //return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private releasePending(/* tt = false */) {\n    if(!this.connected) {\n      //this.connect();\n      return;\n    }\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    //this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    //for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      const {body, bodySent} = pending;\n      let encoded = pending.encoded;\n      if(body && !bodySent) {\n\n        //this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        if(!encoded) {\n          encoded = pending.encoded = this.encodeBody(body);\n        }\n\n        this.connection.send(encoded);\n        \n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        //delete pending.body;\n      }\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { notifyAll } from \"../../../helpers/context\";\r\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\r\nimport { WorkerTaskVoidTemplate } from \"../../../types\";\r\nimport { MTConnection } from \"./transport\";\r\n\r\nlet socketId = 0;\r\nexport interface SocketProxyTask extends WorkerTaskVoidTemplate {\r\n  type: 'socketProxy',\r\n  payload: SocketProxySetupTask | SocketProxySendTask | SocketProxyCloseTask\r\n};\r\n\r\nexport interface SocketProxySetupTask extends WorkerTaskVoidTemplate {\r\n  type: 'setup',\r\n  payload: {\r\n    dcId: number,\r\n    url: string,\r\n    logSuffix: string\r\n  },\r\n  id: number\r\n};\r\n\r\nexport interface SocketProxySendTask extends WorkerTaskVoidTemplate {\r\n  type: 'send',\r\n  payload: Uint8Array,\r\n  id: number\r\n};\r\n\r\nexport interface SocketProxyCloseTask extends WorkerTaskVoidTemplate {\r\n  type: 'close',\r\n  id: number\r\n};\r\n\r\n                   \r\nexport default class SocketProxied extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private id: number;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n    this.id = ++socketId;\r\n    socketsProxied.set(this.id, this);\r\n\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy',\r\n      payload: {\r\n        type: 'setup', \r\n        payload: {\r\n          dcId, \r\n          url,\r\n          logSuffix\r\n        },\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n\r\n  public send(payload: Uint8Array) {\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy', \r\n      payload: {\r\n        type: 'send',\r\n        payload,\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n\r\n  public close() {\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy',\r\n      payload: {\r\n        type: 'close',\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n}\r\n          \r\n\r\nexport const socketsProxied: Map<number, SocketProxied> = new Map();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport MTTransport, { MTConnectionConstructable } from './transports/transport';\r\nimport Modes from '../../config/modes';\r\nimport { indexOfAndSplice } from '../../helpers/array';\r\nimport App from '../../config/app';\r\n\r\n                        \r\nimport HTTP from './transports/http';\r\n          \r\n\r\n                      \r\nimport Socket from './transports/websocket';\r\nimport TcpObfuscated from './transports/tcpObfuscated';\r\nimport { IS_SAFARI } from '../../environment/userAgent';\r\nimport { IS_WEB_WORKER } from '../../helpers/context';\r\nimport SocketProxied from './transports/socketProxied';\r\nimport { DcId } from '../../types';\r\n          \r\n\r\nexport type TransportType = 'websocket' | 'https' | 'http';\r\nexport type ConnectionType = 'client' | 'download' | 'upload';\r\ntype Servers = {\r\n  [transportType in TransportType]: {\r\n    [connectionType in ConnectionType]: {\r\n      [dcId: DcId]: MTTransport[]\r\n    }\r\n  }\r\n};\r\n\r\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\r\n\r\nexport class DcConfigurator {\r\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\r\n\r\n  private dcOptions = Modes.test\r\n    ? [\r\n      {id: 1, host: '149.154.175.10',  port: 80},\r\n      {id: 2, host: '149.154.167.40',  port: 80},\r\n      {id: 3, host: '149.154.175.117', port: 80}\r\n    ]\r\n    : [\r\n      {id: 1, host: '149.154.175.50',  port: 80},\r\n      {id: 2, host: '149.154.167.50',  port: 80},\r\n      {id: 3, host: '149.154.175.100', port: 80},\r\n      {id: 4, host: '149.154.167.91',  port: 80},\r\n      {id: 5, host: '149.154.171.5',   port: 80}\r\n    ];\r\n\r\n  public chosenServers: Servers = {} as any;\r\n\r\n                        \r\n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, suffix: string) => {\r\n    const path = 'apiws' + TEST_SUFFIX;\r\n    const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n\r\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\r\n\r\n    const oooohLetMeLive: MTConnectionConstructable = (IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\r\n\r\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\r\n  };\r\n            \r\n\r\n                          \r\n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, suffix: string) => {\r\n    let chosenServer: string;\r\n    if(Modes.ssl || !Modes.http) {\r\n      const subdomain = this.sslSubdomains[dcId - 1] + (connectionType !== 'client' ? '-1' : '');\r\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\r\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\r\n    } else {\r\n      for(let dcOption of this.dcOptions) {\r\n        if(dcOption.id === dcId) {\r\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n    return new HTTP(dcId, chosenServer, logSuffix);\r\n  };\r\n            \r\n\r\n  public chooseServer(\r\n    dcId: DcId, \r\n    connectionType: ConnectionType = 'client', \r\n    transportType: TransportType = Modes.transport, \r\n    reuse = true\r\n  ) {\r\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\r\n      connectionType = 'client';\r\n    } */\r\n\r\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\r\n      this.chosenServers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const servers = this.chosenServers[transportType][connectionType];\r\n\r\n    if(!(dcId in servers)) {\r\n      servers[dcId] = [];\r\n    }\r\n\r\n    const transports = servers[dcId];\r\n\r\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\r\n      let transport: MTTransport;\r\n\r\n      const suffix = connectionType === 'client' ? '' : '-1';\r\n\r\n                                                \r\n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, suffix);\r\n                             \r\n                                                                     \r\n               \r\n                                                                   \r\n                \r\n  \r\n      if(!transport) {\r\n        console.error('No chosenServer!', dcId);\r\n        return null;\r\n      }\r\n      \r\n      if(reuse) {\r\n        transports.push(transport);\r\n      }\r\n      \r\n      return transport;\r\n    }\r\n  \r\n    return transports[0];\r\n  }\r\n  \r\n  public static removeTransport<T>(obj: any, transport: T) {\r\n    for(const transportType in obj) {\r\n      // @ts-ignore\r\n      for(const connectionType in obj[transportType]) {\r\n        // @ts-ignore\r\n        for(const dcId in obj[transportType][connectionType]) {\r\n          // @ts-ignore\r\n          const transports: T[] = obj[transportType][connectionType][dcId];\r\n          indexOfAndSplice(transports, transport);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DcConfigurator();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../../config/app\";\nimport { deferredPromise } from \"../../../helpers/cancellablePromise\";\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\nimport { pause } from \"../../../helpers/schedulers/pause\";\nimport dcConfigurator, { TransportType } from \"../dcConfigurator\";\nimport type HTTP from \"./http\";\nimport type TcpObfuscated from \"./tcpObfuscated\";\nimport MTTransport from \"./transport\";\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    setTimeout(() => {\n      this.waitForWebSocket();\n    }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => websocketPromise.resolve(false), timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n    \n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { pause } from '../../../helpers/schedulers/pause';\r\nimport { DcId } from '../../../types';\r\nimport { logger, LogTypes } from '../../logger';\r\nimport type MTPNetworker from '../networker';\r\nimport MTTransport from './transport';\r\nimport Modes from '../../../config/modes';\r\n\r\n                    \r\nimport transportController from './controller';\r\n          \r\n\r\nexport default class HTTP implements MTTransport {\r\n  public networker: MTPNetworker;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private pending: Array<{\r\n    resolve: (body: Uint8Array) => void, \r\n    reject: any, \r\n    body: Uint8Array\r\n  }> = [];\r\n  private releasing: boolean;\r\n\r\n  public connected: boolean;\r\n  private destroyed: boolean;\r\n  private debug: boolean;\r\n  \r\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\r\n    this.debug = Modes.debug && false;\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    \r\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connected = false;\r\n  }\r\n\r\n  public _send(body: Uint8Array, mode?: RequestMode) {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    return fetch(this.url, {method: 'POST', body, mode}).then(response => {\r\n      if(response.status !== 200 && !mode) {\r\n        response.arrayBuffer().then(buffer => {\r\n          this.log.error('not 200', \r\n            new TextDecoder(\"utf-8\").decode(new Uint8Array(buffer)));\r\n        });\r\n\r\n        throw response;\r\n      }\r\n\r\n      this.setConnected(true);\r\n\r\n      // * test resending by dropping random request\r\n      // if(Math.random() > .5) {\r\n      //   throw 'asd';\r\n      // }\r\n\r\n      return response.arrayBuffer().then(buffer => {\r\n        return new Uint8Array(buffer);\r\n      }); \r\n    }, (err) => {\r\n      this.setConnected(false);\r\n      throw err;\r\n    });\r\n  }\r\n\r\n  private setConnected(connected: boolean) {\r\n    if(this.connected === connected || this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    this.connected = connected;\r\n\r\n                        \r\n    transportController.setTransportValue('https', connected);\r\n              \r\n  }\r\n\r\n  public destroy() {\r\n    this.setConnected(false);\r\n    this.destroyed = true;\r\n    this.pending.forEach(pending => pending.reject());\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    if(this.networker) {\r\n      return this._send(body);\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending() {\r\n    if(this.releasing) return;\r\n\r\n    this.releasing = true;\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    for(let i = 0; i < this.pending.length; ++i) {\r\n      const pending = this.pending[i];\r\n      const {body, resolve} = pending;\r\n\r\n      try {\r\n        const result = await this._send(body);\r\n        resolve(result);\r\n        this.pending.splice(i, 1);\r\n      } catch(err) {\r\n        this.log.error('Send plain request error:', err);\r\n        await pause(5000);\r\n      }\r\n\r\n      --i;\r\n    }\r\n\r\n    this.releasing = false;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {isObject, sortLongsArray} from './bin_utils';\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoworker';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport timeManager from './timeManager';\nimport networkerFactory from './networkerFactory';\nimport { logger, LogTypes } from '../logger';\nimport { InvokeApiOptions } from '../../types';\nimport { longToBytes } from '../crypto/crypto_utils';\nimport MTTransport from './transports/transport';\nimport { convertToUint8Array, bytesCmp, bytesToHex, bufferConcats } from '../../helpers/bytes';\nimport { nextRandomUint, randomLong } from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                        \nimport HTTP from './transports/http';\n          \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport { bigInt2str, rightShift_, str2bigInt } from '../../vendor/leemon';\nimport { forEachReverse } from '../../helpers/array';\nimport { ConnectionStatus } from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport dcConfigurator, { DcConfigurator } from './dcConfigurator';\n\n//console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n  \n  notContentRelated: true, // ACK\n  noSchedule: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: {\n    resolve: any,\n    reject: any\n  },\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst CONNECTION_TIMEOUT = 5000;\nconst DRAIN_TIMEOUT = 10000;\nlet invokeAfterMsgConstructor: number;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResends: Array<MTLong> = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n  \n                          \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n            \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    req_msg_id: MTLong,\n    resend_msg_ids: Array<MTLong>\n  } | null = null;\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n  \n  public isOnline = false;\n  public status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n  //private disconnectDelay: number;\n  //private pingPromise: CancellablePromise<any>;\n  //public onConnectionStatusChange: (online: boolean) => void;\n\n  //private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  constructor(\n    public dcId: number, \n    private authKey: Uint8Array, \n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array, \n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    //this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name, LogTypes.Log | LogTypes.Debug | LogTypes.Error | LogTypes.Warn, undefined);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n\n    // * handle outcoming dead socket, server will close the connection\n    // if((this.transport as TcpObfuscated).networker) {\n    //   this.disconnectDelay = /* (this.transport as TcpObfuscated).retryTimeout  */75;\n    //   //setInterval(this.sendPingDelayDisconnect, (this.disconnectDelay - 5) * 1000);\n    //   this.sendPingDelayDisconnect();\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = new Uint8Array(8).randomize();\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n  \n    sentMessage.msg_id = timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n  \n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n  \n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n  \n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n  \n    serializer.storeMethod(method, params);\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n  \n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n  \n    if(!this.connectionInited) { // this will call once for each new session\n      ///////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find(m => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n  \n      const initConnection = Schema.API.methods.find(m => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n  \n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(networkerFactory.userAgent || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(networkerFactory.language, 'lang_code');\n      //serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n  \n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find(m => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n      \n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n    \n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n  \n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n  \n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      DcConfigurator.removeTransport(dcConfigurator.chosenServers, this.transport);\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n                              \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n                \n    }\n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                            \n                          \n    if(transport instanceof HTTP) {\n              \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                          \n    }\n              \n              \n\n    if(transport.connected && (transport as TcpObfuscated).connection) {\n      this.setConnectionStatus(ConnectionStatus.Connected);\n    }\n\n    this.resend();\n  }\n\n  public destroy() {\n    this.changeTransport();\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  // private sendPingDelayDisconnect = () => {\n  //   if(this.pingPromise || true) return;\n\n  //   if(!this.isOnline) {\n  //     if((this.transport as TcpObfuscated).connected) {\n  //       (this.transport as TcpObfuscated).handleClose();\n  //     }\n\n  //     return;\n  //   }\n\n  //   this.log('sendPingDelayDisconnect', this.sentPingTimes);\n\n  //   /* if(this.tt) clearTimeout(this.tt);\n  //   this.tt = self.setTimeout(() => {  \n  //     (this.transport as any).ws.close(1000);\n  //     this.tt = 0;\n  //   }, this.disconnectDelay * 1000); */\n  //   /* this.wrapMtpCall('ping_delay_disconnect', {\n  //     ping_id: randomLong(),\n  //     disconnect_delay: this.disconnectDelay\n  //   }, {\n  //     noResponse: true,\n  //     notContentRelated: true\n  //   }); */\n  //   const deferred = this.pingPromise = deferredPromise<void>();\n\n  //   const timeoutTime = this.disconnectDelay * 1000;\n\n  //   /* if(!this.sentPingTimes || true) {\n  //     ++this.sentPingTimes; */\n  //     const startTime = Date.now();\n  //     this.wrapMtpCall('ping', {\n  //       ping_id: randomLong()\n  //     }, {}).then(pong => {\n  //       const elapsedTime = Date.now() - startTime;\n  //       this.log('sendPingDelayDisconnect: response', pong, elapsedTime > timeoutTime);\n\n  //       if(elapsedTime > timeoutTime) {\n  //         deferred.reject();\n  //       } else {\n  //         setTimeout(deferred.resolve, timeoutTime - elapsedTime);\n  //       }\n  //     }, deferred.reject).finally(() => {\n  //       clearTimeout(rejectTimeout);\n  //       //--this.sentPingTimes;\n  //     });\n  //   //}\n\n  //   const rejectTimeout = self.setTimeout(deferred.reject, timeoutTime);\n\n  //   deferred.catch(() => {\n  //     (this.transport as Socket).handleClose();\n  //   });\n\n  //   deferred.finally(() => {\n  //     this.pingPromise = null;\n  //     this.sendPingDelayDisconnect();\n  //   });\n  // };\n\n  // private sendPingDelayDisconnect = () => {\n  //   if(this.pingPromise || true) return;\n\n  //   /* if(!this.isOnline) {\n  //     if((this.transport as TcpObfuscated).connected) {\n  //       (this.transport as TcpObfuscated).connection.close();\n  //     }\n\n  //     return;\n  //   } */\n\n  //   const deferred = this.pingPromise = deferredPromise<void>();\n\n  //   const timeoutTime = this.disconnectDelay * 1000;\n\n  //   const startTime = Date.now();\n  //   this.wrapMtpCall('ping_delay_disconnect', {\n  //     ping_id: randomLong(),\n  //     disconnect_delay: this.disconnectDelay\n  //   }, {}).then(pong => {\n  //     const elapsedTime = Date.now() - startTime;\n  //     this.log('sendPingDelayDisconnect: response', pong, elapsedTime > timeoutTime);\n\n  //     if(elapsedTime > timeoutTime) {\n  //       deferred.reject();\n  //     } else {\n  //       setTimeout(deferred.resolve, timeoutTime - elapsedTime);\n  //     }\n  //   }, deferred.reject).finally(() => {\n  //     clearTimeout(rejectTimeout);\n  //     //--this.sentPingTimes;\n  //   });\n\n  //   const rejectTimeout = self.setTimeout(deferred.reject, timeoutTime);\n\n  //   deferred.catch(() => {\n  //     this.log.error('sendPingDelayDisconnect: catch, closing connection if exists');\n  //     (this.transport as TcpObfuscated).connection.close();\n  //   });\n\n  //   deferred.finally(() => {\n  //     this.pingPromise = null;\n  //     this.sendPingDelayDisconnect();\n  //   });\n  // };\n\n                          \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    //this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      //this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n          baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n        )) {\n        //console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n  \n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n  \n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n  \n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n  \n    const pingMessage = {\n      msg_id: timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n        \n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n        \n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n    \n                               \n                                                                              \n                                                                             \n                  \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n    \n                               \n                                                                          \n                                                                         \n                  \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n  \n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n  \n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      noResponseMsgs.forEach((msgId) => {\n        if(this.sentMessages[msgId]) {\n          const deferred = this.sentMessages[msgId].deferred;\n          delete this.sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n            \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    const promise = new Promise((resolve, reject) => {\n      this.sentMessages[message.msg_id] = Object.assign(message, options, options.notContentRelated \n        ? undefined \n        : {\n          deferred: {resolve, reject}\n        }\n      );\n\n      //this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n      this.pendingMessages[message.msg_id] = 0;\n    \n      if(!options.noSchedule) {\n        this.scheduleRequest();\n      }\n\n      if(isObject(options)) {\n        options.messageId = message.msg_id;\n      }\n    });\n\n    if(!options.notContentRelated && !options.noResponse) {\n      const timeout = setTimeout(() => {\n        if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < CONNECTION_TIMEOUT) {\n          return;\n        }\n\n        this.log.error('timeout', message);\n        if(this.isOnline) {\n          this.setConnectionStatus(ConnectionStatus.TimedOut);\n        }\n\n        /* this.getEncryptedOutput(message).then(bytes => {\n          this.log.error('timeout encrypted', bytes);\n        }); */\n      }, CONNECTION_TIMEOUT);\n  \n      promise.catch(noop).finally(() => {\n        clearTimeout(timeout);\n        this.setConnectionStatus(ConnectionStatus.Connected);\n\n        --this.activeRequests;\n        this.setDrainTimeout();\n      });\n      \n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n\n    return promise;\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(networkerFactory.onConnectionStatusChange) {\n        networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      // if((this.transport as TcpObfuscated).networker) {\n      //   this.sendPingDelayDisconnect();\n      // }\n      /* this.sentPingTimes = 0;\n      this.sendPingDelayDisconnect(); */\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n  \n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n  \n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256-hash', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n  \n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256-hash', sha2aText));\n  \n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256-hash', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n  \n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n  \n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n  \n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    // this.log('scheduled', this.dcId, this.iii)\n\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n  \n    if(this.pendingResends.length) {\n      const resendMsgIds = this.pendingResends.slice();\n      const resendOpts: MTMessageOptions = {\n        noSchedule: true,\n        notContentRelated: true,\n        messageId: '' // will set in wrapMtpMessage->pushMessage\n      };\n\n      //this.log('resendReq messages', resendMsgIds);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: resendMsgIds\n      }, resendOpts);\n\n      this.lastResendReq = {\n        req_msg_id: resendOpts.messageId,\n        resend_msg_ids: resendMsgIds\n      };\n    }\n  \n    let outMessage: MTPNetworker['sentMessages'][keyof MTPNetworker['sentMessages']];\n    const messages: typeof outMessage[] = [];\n      \n    //const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                            \n    let hasApiCall = false;\n    let hasHttpWait = false;\n              \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      //const value = this.pendingMessages[messageId];\n\n      //if(!value || value <= currentTime) {\n        const message = this.sentMessages[messageId];\n        if(message && message.body) {\n          /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n          const messageByteLength = message.body.length + 32;\n\n          if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n            this.log.warn('lengthOverflow', message, messages);\n            lengthOverflow = true;\n\n            if(outMessage) { // if it's not a first message\n              break;\n            }\n          }\n\n          messages.push(message);\n          messagesByteLen += messageByteLength;\n\n                                  \n          if(message.isAPI) {\n            hasApiCall = true;\n          } else if(message.longPoll) {\n            hasHttpWait = true;\n          }\n                    \n\n          outMessage = message;\n        } else {\n          // this.log(message, messageId)\n        }\n\n        delete this.pendingMessages[messageId];\n      //}\n    }\n  \n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    if(hasApiCall && !hasHttpWait) {\n      const serializer = new TLSerialization({mtproto: true});\n      serializer.storeMethod('http_wait', {\n        max_delay: 500,\n        wait_after: 150,\n        max_wait: 3000\n      });\n\n      messages.push({\n        msg_id: timeManager.generateId(),\n        seq_no: this.generateSeqNo(),\n        body: serializer.getBytes(true)\n      });\n    }\n              \n  \n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n  \n                            \n    const noResponseMsgs: Array<string> = messages.filter(message => message.noResponse).map(message => message.msg_id);\n              \n  \n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n  \n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n  \n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n              \n\n                          \n                            \n    if(!(this.transport instanceof HTTP))\n              \n    this.cleanupSent(); // ! WARNING\n              \n  \n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message),\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n  \n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n  \n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */new Uint8Array(paddingLength).randomize()/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    //(message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n  \n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private sendEncryptedRequest(message: MTMessage) {\n    return this.getEncryptedOutput(message).then(requestData => {\n      this.debug && this.log.debug('sendEncryptedRequest: launching message into space:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n      const promise: Promise<Uint8Array> = this.transport.send(requestData) as any;\n      // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n      \n                               \n                     \n               \n      \n                            \n      if(!(this.transport instanceof HTTP)) return promise;\n                \n      \n      const baseError = {\n        code: 406,\n        type: 'NETWORK_BAD_RESPONSE',\n        transport: this.transport\n      };\n      \n      return promise.then((result) => {\n        if(!result?.byteLength) {\n          throw baseError;\n        }\n        \n        // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n        return result;\n      }, (error) => {\n        if(!error.message && !error.type) {\n          error = Object.assign(baseError, {\n            type: 'NETWORK_BAD_REQUEST',\n            originalError: error\n          });\n        }\n\n        throw error;\n      });\n                \n    });\n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    //const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n  \n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + authKeyId.hex);\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n  \n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n  \n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n  \n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n  \n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          //this.updateSession();\n          //this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n  \n        const seqNo = deserializer.fetchInt('seq_no');\n  \n        const totalLength = dataWithPadding.byteLength;\n  \n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n  \n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n  \n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n  \n        //let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true, \n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n  \n              const offset = deserializer.getOffset();\n  \n              //self.log('mt_message!!!!!', result, field);\n  \n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n  \n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n  \n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n  \n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        //this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n  \n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n  \n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой) \n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                            \n                          \n    if(this.transport instanceof HTTP) {\n              \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                          \n    }\n              \n              \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      //this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n  \n    //this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n    \n    //const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      //this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                              \n                            \n      if(this.transport instanceof HTTP)\n                \n      if(this.offline) {\n        //this.log('Cancel scheduled');\n        return;\n      }\n                \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = self.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    delay = 30000;\n              \n\n    this.scheduleRequest(delay);\n  }\n  \n  private reqResendMessage(msgId: MTLong) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId);\n    }\n\n    this.pendingResends.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    // this.log('clean start', this.dcId/*, this.sentMessages*/)\n    Object.keys(this.sentMessages).forEach((msgId) => {\n      const message = this.sentMessages[msgId];\n    \n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete this.sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(this.sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], this.sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete this.sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n  \n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      //delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}) {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n  \n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    for(const id in this.sentMessages) {\n      const msg = this.sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then(res => {\n      this.log('status', res);\n    });\n  } */\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    /* if(this.debug) {\n      this.log('process message', message, messageId, sessionId);\n    } */\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n  \n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n        \n        this.ackMessage(messageId);\n        \n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n  \n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            //const changedOffset = timeManager.applyServerTime(bigStringInt(messageId).shiftRight(32).toString(10));\n            const bigInt = str2bigInt(messageId, 10);\n            rightShift_(bigInt, 32);\n            const changedOffset = timeManager.applyServerTime(+bigInt2str(bigInt, 10));\n            if(message.error_code === 17 || changedOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            //this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n  \n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n        \n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        //this.updateSession();\n  \n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n  \n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && networkerFactory.updatesProcessor) {\n            networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n        \n      case 'msgs_ack': {\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n  \n      case 'msg_detailed_info':\n        if(!this.sentMessages[message.msg_id]) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }\n      case 'msg_new_detailed_info':\n        if(this.pendingAcks.indexOf(message.answer_msg_id)) {\n          break;\n        }\n        this.reqResendMessage(message.answer_msg_id);\n        break;\n  \n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        if(this.lastResendReq && \n          this.lastResendReq.req_msg_id === message.req_msg_id && \n          this.pendingResends.length\n        ) {\n          for(const badMsgId of this.lastResendReq.resend_msg_ids) {\n            const pos = this.pendingResends.indexOf(badMsgId);\n            if(pos !== -1) {\n              this.pendingResends.splice(pos, 1);\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n  \n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              /* if(DEBUG) {\n                this.log.debug('Rpc response', message.result, sentMessage);\n              } */\n\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n              ////this.log('Rpc set connectionInited to:', this.connectionInited);\n            }\n          }\n  \n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId]; \n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        }\n\n        break;\n      }\n  \n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n        \n        if(networkerFactory.updatesProcessor !== null) {\n          networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ConnectionStatusChange } from \"./connectionStatus\";\r\nimport MTPNetworker from \"./networker\";\r\nimport { InvokeApiOptions } from \"../../types\";\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { indexOfAndSplice } from \"../../helpers/array\";\r\n\r\nexport class NetworkerFactory {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  public onConnectionStatusChange: (info: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n  public userAgent = navigator.userAgent;\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    //console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter(networker => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n      \r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst networkerFactory = new NetworkerFactory();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.networkerFactory = networkerFactory);\r\nexport default networkerFactory;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { TLSerialization } from \"./tl_utils\";\r\nimport CryptoWorker from '../crypto/cryptoworker';\r\nimport { bytesFromHex, bytesToHex } from \"../../helpers/bytes\";\r\nimport { bigInt2str, str2bigInt } from \"../../vendor/leemon\";\r\nimport Modes from \"../../config/modes\";\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   * \r\n   * \r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via \r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map(keyParsed => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return CryptoWorker.invokeCrypto('sha1-hash', buffer).then(bytes => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n  \r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      //console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      //fingerprintHex = bigStringInt(fingerprints[i]).toString(16);\r\n      let fingerprintHex = bigInt2str(str2bigInt(fingerprints[i], 10), 16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      //console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { TLSerialization, TLDeserialization } from \"./tl_utils\";\nimport dcConfigurator, { TransportType } from \"./dcConfigurator\";\nimport rsaKeysManager from \"./rsaKeysManager\";\nimport timeManager from \"./timeManager\";\n\nimport CryptoWorker from \"../crypto/cryptoworker\";\n\nimport { logger, LogTypes } from \"../logger\";\nimport { bytesCmp, bytesToHex, bytesFromHex, bytesXor } from \"../../helpers/bytes\";\nimport DEBUG from \"../../config/debug\";\nimport { cmp, int2bigInt, one, pow, str2bigInt, sub } from \"../../vendor/leemon\";\nimport { addPadding } from \"./bin_utils\";\nimport { Awaited, DcId } from \"../../types\";\nimport { ApiError } from \"./apiManager\";\n\n                    \nimport transportController from \"./transports/controller\";\n          \n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n  \n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n  \n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n  \n  newNonce?: Uint8Array,\n  \n  retry?: number,\n  \n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n  \n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n  \n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n  \n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                      \n  private getTransportTypePromise: Promise<void>;\n            \n  \n  constructor() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n  \n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n    \n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n    \n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n    \n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n    \n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then(result => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n      \n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n      \n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n        \n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n        \n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n        \n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n        \n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n      \n      throw error;\n    });\n  }\n  \n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n    \n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', auth.nonce.hex);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n    \n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n    \n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n    \n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n    \n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n    \n    auth.publicKey = publicKey;\n    \n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n    \n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n    \n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n    \n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n    \n    return this.sendReqDhParams(auth);\n  }\n  \n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = new Uint8Array(32).randomize();\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n    \n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = new Uint8Array(32).randomize();\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256-hash', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n    \n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256-hash', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = str2bigInt(bytesToHex(keyAesEncrypted), 16);\n        const publicKeyModulusBigInt = str2bigInt(auth.publicKey.modulus, 16);\n\n        if(cmp(keyAesEncryptedBigInt, publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n    \n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n    \n    const requestBytes = request.getBytes(true);\n    \n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n    \n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n    \n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n    \n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n    \n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n      \n      throw new Error('[MT] server_DH_params_fail');\n    }\n    \n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n    \n    //console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n    \n    return this.sendSetClientDhParams(auth);\n  }\n  \n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n    \n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1-hash', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n    \n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1-hash', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n    \n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n    \n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n    \n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n    \n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n    \n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n    \n    const offset = deserializer.getOffset();\n    \n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1-hash', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1-hash mismatch');\n    }\n    \n    timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n  \n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n    \n    const _gABigInt = str2bigInt(bytesToHex(gA), 16);\n    const _dhPrimeBigInt = str2bigInt(dhPrimeHex, 16);\n\n    if(cmp(_gABigInt, one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(cmp(_gABigInt, sub(_dhPrimeBigInt, one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n    \n    const _two = int2bigInt(2, 32, 0);\n    const _twoPow = pow(_two, 2048 - 64);\n\n    if(cmp(_gABigInt, _twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(cmp(_gABigInt, sub(_dhPrimeBigInt, _twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n    \n    return true;\n  }\n  \n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n    \n    auth.b = new Uint8Array(256).randomize();\n    //MTProto.secureRandom.nextBytes(auth.b);\n    \n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n    \n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n    \n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1-hash', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n    \n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n    \n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n    \n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n    \n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n    \n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1-hash', authKey),\n    authKeyAux = authKeyHash.slice(0, 8),\n    authKeyId = authKeyHash.slice(-8);\n    \n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n        \n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n        \n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n        \n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n        \n        return auth;\n      }\n      \n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n        \n        return this.sendSetClientDhParams(auth);\n      }\n      \n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n        \n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                      \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n            \n  \n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                          \n      await this.getTransportType();\n                \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId, \n            nonce: new Uint8Array(16).randomize()\n          };\n          \n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n\nexport default new Authorizer();\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { UserAuth } from './mtproto_config';\r\nimport sessionStorage from '../sessionStorage';\r\nimport MTPNetworker, { MTMessage } from './networker';\r\nimport { isObject } from './bin_utils';\r\nimport networkerFactory from './networkerFactory';\r\n//import { telegramMeWebService } from './mtproto';\r\nimport authorizer from './authorizer';\r\nimport dcConfigurator, { ConnectionType, DcConfigurator, TransportType } from './dcConfigurator';\r\nimport { logger } from '../logger';\r\nimport type { DcAuthKey, DcId, DcServerSalt, InvokeApiOptions } from '../../types';\r\nimport type { MethodDeclMap } from '../../layer';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport { bytesFromHex, bytesToHex } from '../../helpers/bytes';\r\n//import { clamp } from '../../helpers/number';\r\nimport { IS_SAFARI } from '../../environment/userAgent';\r\nimport App from '../../config/app';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport IDBStorage from '../idb';\r\nimport CryptoWorker from \"../crypto/cryptoworker\";\r\nimport ctx from '../../environment/ctx';\r\nimport noop from '../../helpers/noop';\r\nimport Modes from '../../config/modes';\r\n\r\n                       \r\n                                     \r\n          \r\n\r\n                    \r\nimport transportController from './transports/controller';\r\n          \r\n\r\n/* var networker = apiManager.cachedNetworkers.websocket.upload[2];\r\nnetworker.wrapMtpMessage({\r\n  _: 'msgs_state_req',\r\n  msg_ids: [\"6888292542796810828\"]\r\n}, {\r\n  notContentRelated: true\r\n}).then(res => {\r\n  console.log('status', res);\r\n}); */\r\n\r\n//console.error('apiManager included!');\r\n// TODO: если запрос словил флуд, нужно сохранять его параметры и возвращать тот же промис на новый такой же запрос, например - загрузка истории\r\n\r\nexport type ApiError = Partial<{\r\n  code: number,\r\n  type: string,\r\n  description: string,\r\n  originalError: any,\r\n  stack: string,\r\n  handled: boolean,\r\n  input: string,\r\n  message: ApiError\r\n}>;\r\n\r\n/* class RotatableArray<T> {\r\n  public array: Array<T> = [];\r\n  private lastIndex = -1;\r\n\r\n  public get() {\r\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\r\n    return this.array[this.lastIndex];\r\n  }\r\n} */\r\n\r\nexport class ApiManager {\r\n  private cachedNetworkers: {\r\n    [transportType in TransportType]: {\r\n      [connectionType in ConnectionType]: {\r\n        [dcId: DcId]: MTPNetworker[]\r\n      }\r\n    }\r\n  };\r\n  \r\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\r\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\r\n  private baseDcId: DcId;\r\n  \r\n  //public telegramMeNotified = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private afterMessageTempIds: {\r\n    [tempId: string]: {\r\n      messageId: string,\r\n      promise: Promise<any>\r\n    }\r\n  };\r\n\r\n  private transportType: TransportType;\r\n  \r\n  constructor() {\r\n    this.log = logger('API');\r\n\r\n    this.cachedNetworkers = {} as any;\r\n    this.cachedExportPromise = {};\r\n    this.gettingNetworkers = {};\r\n    this.baseDcId = 0;\r\n    this.afterMessageTempIds = {};\r\n\r\n    this.transportType = Modes.transport;\r\n\r\n                        \r\n    transportController.addEventListener('transport', (transportType) => {\r\n      this.changeTransportType(transportType);\r\n    });\r\n              \r\n  }\r\n\r\n  //private lol = false;\r\n  \r\n  // constructor() {\r\n    //MtpSingleInstanceService.start();\r\n    \r\n    /* AppStorage.get<number>('dc').then((dcId) => {\r\n      if(dcId) {\r\n        this.baseDcId = dcId;\r\n      }\r\n    }); */\r\n  // }\r\n  \r\n  /* public telegramMeNotify(newValue: boolean) {\r\n    if(this.telegramMeNotified !== newValue) {\r\n      this.telegramMeNotified = newValue;\r\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\r\n    }\r\n  } */\r\n\r\n  private getTransportType(connectionType: ConnectionType) {\r\n                               \r\n                 \r\n                                                                                                          \r\n                                                                                               \r\n             \r\n    // @ts-ignore\r\n    const transportType: TransportType = this.transportType;\r\n              \r\n\r\n    return transportType;\r\n  }\r\n\r\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\r\n    for(const transportType in this.cachedNetworkers) {\r\n      const connections = this.cachedNetworkers[transportType as TransportType];\r\n      for(const connectionType in connections) {\r\n        const dcs = connections[connectionType as ConnectionType];\r\n        for(const dcId in dcs) {\r\n          const networkers = dcs[dcId as any as DcId];\r\n          networkers.forEach((networker, idx, arr) => {\r\n            callback({\r\n              networker,\r\n              dcId: +dcId as DcId,\r\n              connectionType: connectionType as ConnectionType,\r\n              transportType: transportType as TransportType,\r\n              index: idx,\r\n              array: arr\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\r\n    return dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client');\r\n  }\r\n\r\n  public changeTransportType(transportType: TransportType) {\r\n    const oldTransportType = this.transportType;\r\n    if(oldTransportType === transportType) {\r\n      return;\r\n    }\r\n\r\n    this.log('changing transport from', oldTransportType, 'to', transportType);\r\n\r\n    const oldObject = this.cachedNetworkers[oldTransportType];\r\n    const newObject = this.cachedNetworkers[transportType];\r\n    this.cachedNetworkers[transportType] = oldObject;\r\n    this.cachedNetworkers[oldTransportType] = newObject;\r\n\r\n    this.transportType = transportType;\r\n\r\n    for(const oldGetKey in this.gettingNetworkers) {\r\n      const promise = this.gettingNetworkers[oldGetKey];\r\n      delete this.gettingNetworkers[oldGetKey];\r\n\r\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\r\n      this.gettingNetworkers[newGetKey] = promise;\r\n\r\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\r\n    }\r\n\r\n    this.iterateNetworkers((info) => {\r\n      const transportType = this.getTransportType(info.connectionType);\r\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\r\n      info.networker.changeTransport(transport);\r\n    });\r\n  }\r\n\r\n  public async getBaseDcId() {\r\n    if(this.baseDcId) {\r\n      return this.baseDcId;\r\n    }\r\n\r\n    const baseDcId = await sessionStorage.get('dc');\r\n    if(!this.baseDcId) {\r\n      if(!baseDcId) {\r\n        this.setBaseDcId(App.baseDcId);\r\n      } else {\r\n        this.baseDcId = baseDcId;\r\n      }\r\n    }\r\n\r\n    return this.baseDcId;\r\n  }\r\n  \r\n  public async setUserAuth(userAuth: UserAuth) {\r\n    if(!userAuth.dcID) {\r\n      const baseDcId = await this.getBaseDcId();\r\n      userAuth.dcID = baseDcId;\r\n    }\r\n\r\n    sessionStorage.set({\r\n      user_auth: userAuth\r\n    });\r\n    \r\n    //this.telegramMeNotify(true);\r\n\r\n                           \r\n                                                   \r\n              \r\n  }\r\n\r\n  public setBaseDcId(dcId: DcId) {\r\n    const wasDcId = this.baseDcId;\r\n    if(wasDcId) { // if migrated set ondrain\r\n      this.getNetworker(wasDcId).then(networker => {\r\n        this.setOnDrainIfNeeded(networker);\r\n      });\r\n    }\r\n\r\n    this.baseDcId = dcId;\r\n\r\n    sessionStorage.set({\r\n      dc: this.baseDcId\r\n    });\r\n  }\r\n  \r\n  public async logOut() {\r\n    const storageKeys: Array<DcAuthKey> = [];\r\n    \r\n    const prefix = 'dc';\r\n    for(let dcId = 1; dcId <= 5; dcId++) {\r\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\r\n    }\r\n    \r\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\r\n    const storageResult = await Promise.all(storageKeys.map(key => sessionStorage.get(key)));\r\n    \r\n    const logoutPromises: Promise<any>[] = [];\r\n    for(let i = 0; i < storageResult.length; i++) {\r\n      if(storageResult[i]) {\r\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\r\n      }\r\n    }\r\n\r\n    const clear = () => {\r\n      //console.error('apiManager: logOut clear');\r\n      \r\n      this.baseDcId = undefined;\r\n      //this.telegramMeNotify(false);\r\n      IDBStorage.closeDatabases();\r\n      self.postMessage({type: 'clear'});\r\n    };\r\n\r\n    setTimeout(clear, 1e3);\r\n\r\n    //return;\r\n    \r\n    return Promise.all(logoutPromises).catch((error) => {\r\n      error.handled = true;\r\n    }).finally(clear)/* .then(() => {\r\n      location.pathname = '/';\r\n    }) */;\r\n  }\r\n\r\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\r\n    return [dcId, transportType, connectionType].join('-');\r\n  }\r\n  \r\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\r\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\r\n    //const connectionType: ConnectionType = 'client';\r\n\r\n    const transportType = this.getTransportType(connectionType);\r\n    if(!this.cachedNetworkers[transportType]) {\r\n      this.cachedNetworkers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const cache = this.cachedNetworkers[transportType][connectionType];\r\n    if(!(dcId in cache)) {\r\n      cache[dcId] = [];\r\n    }\r\n    \r\n    const networkers = cache[dcId];\r\n    // @ts-ignore\r\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (connectionType === 'download' ? 3 : 3);\r\n    if(networkers.length >= maxNetworkers) {\r\n      let i = networkers.length - 1, found = false;\r\n      for(; i >= 0; --i) {\r\n        if(networkers[i].isOnline) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      const networker = found ? networkers.splice(i, 1)[0] : networkers.pop();\r\n      networkers.unshift(networker);\r\n      return Promise.resolve(networker);\r\n    }\r\n    \r\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\r\n    if(this.gettingNetworkers[getKey]) {\r\n      return this.gettingNetworkers[getKey];\r\n    }\r\n\r\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\r\n    \r\n    let transport = this.chooseServer(dcId, connectionType, transportType);\r\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map(key => sessionStorage.get(key)))\r\n    .then(async([authKeyHex, serverSaltHex]) => {\r\n      let networker: MTPNetworker, error: any;\r\n      if(authKeyHex && authKeyHex.length === 512) {\r\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\r\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\r\n        }\r\n        \r\n        const authKey = bytesFromHex(authKeyHex);\r\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1-hash', authKey)).slice(-8);\r\n        const serverSalt = bytesFromHex(serverSaltHex);\r\n        \r\n        networker = networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n      } else {\r\n        try { // if no saved state\r\n          const auth = await authorizer.auth(dcId);\r\n  \r\n          sessionStorage.set({\r\n            [ak]: bytesToHex(auth.authKey),\r\n            [ss]: bytesToHex(auth.serverSalt)\r\n          });\r\n          \r\n          networker = networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\r\n        } catch(_error) {\r\n          error = _error;\r\n        }\r\n      }\r\n\r\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\r\n      const newTransportType = this.getTransportType(connectionType);\r\n      if(newTransportType !== transportType) {\r\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\r\n        transport.destroy();\r\n        DcConfigurator.removeTransport(dcConfigurator.chosenServers, transport);\r\n\r\n        if(networker) {\r\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\r\n        }\r\n\r\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\r\n      }\r\n\r\n      /* networker.onConnectionStatusChange = (online) => {\r\n        console.log('status:', online);\r\n      }; */\r\n      \r\n      delete this.gettingNetworkers[getKey];\r\n\r\n      if(error) {\r\n        this.log('get networker error', error, (error as Error).stack);\r\n        throw error;\r\n      }\r\n\r\n      networker.changeTransport(transport);\r\n      networkers.unshift(networker);\r\n      this.setOnDrainIfNeeded(networker);\r\n      return networker;\r\n    });\r\n  }\r\n\r\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\r\n    if(networker.onDrain) {\r\n      return;\r\n    }\r\n    \r\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ? \r\n      Promise.resolve(true) : \r\n      this.getBaseDcId().then(baseDcId => networker.dcId !== baseDcId);\r\n    checkPromise.then(canRelease => {\r\n      if(networker.onDrain) {\r\n        return;\r\n      }\r\n      \r\n      if(canRelease) {\r\n        networker.onDrain = () => {\r\n          this.log('networker drain', networker.dcId);\r\n\r\n          networker.onDrain = undefined;\r\n          networker.destroy();\r\n          networkerFactory.removeNetworker(networker);\r\n          DcConfigurator.removeTransport(this.cachedNetworkers, networker);\r\n        };\r\n\r\n        networker.setDrainTimeout();\r\n      }\r\n    });\r\n  }\r\n  \r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T][\"res\"]> {\r\n    ///////this.log('Invoke api', method, params, options);\r\n\r\n    /* if(!this.lol) {\r\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\r\n      this.lol = true;\r\n    } */\r\n\r\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\r\n\r\n    let {afterMessageId, prepareTempMessageId} = options;\r\n    if(prepareTempMessageId) {\r\n      deferred.then(() => {\r\n        delete this.afterMessageTempIds[prepareTempMessageId];\r\n      });\r\n    }\r\n\r\n    if(MOUNT_CLASS_TO) {\r\n      const startTime = Date.now();\r\n      const interval = ctx.setInterval(() => {\r\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\r\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\r\n        }\r\n        //this.cachedUploadNetworkers[2].requestMessageStatus();\r\n      }, 5e3);\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n    }\r\n\r\n    const rejectPromise = (error: ApiError) => {\r\n      if(!error) {\r\n        error = {type: 'ERROR_EMPTY'};\r\n      } else if(!isObject(error)) {\r\n        error = {message: error};\r\n      }\r\n      \r\n      deferred.reject(error);\r\n\r\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') || \r\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\r\n        this.logOut();\r\n      }\r\n\r\n      if(options.ignoreErrors) {\r\n        return;\r\n      }\r\n      \r\n      if(error.code === 406) {\r\n        error.handled = true;\r\n      }\r\n      \r\n      if(!options.noErrorBox) {\r\n        error.input = method;\r\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\r\n        setTimeout(() => {\r\n          if(!error.handled) {\r\n            if(error.code === 401) {\r\n              this.logOut();\r\n            } else {\r\n              // ErrorService.show({error: error}); // WARNING\r\n            }\r\n            \r\n            error.handled = true;\r\n          }\r\n        }, 100);\r\n      }\r\n    };\r\n    \r\n    let dcId: DcId;\r\n    \r\n    let cachedNetworker: MTPNetworker;\r\n    let stack = (new Error()).stack || 'empty stack';\r\n    const performRequest = (networker: MTPNetworker) => {\r\n      if(afterMessageId) {\r\n        const after = this.afterMessageTempIds[afterMessageId];\r\n        if(after) {\r\n          options.afterMessageId = after.messageId;\r\n        }\r\n      }\r\n\r\n      const promise = (cachedNetworker = networker).wrapApiCall(method, params, options);\r\n\r\n      if(prepareTempMessageId) {\r\n        this.afterMessageTempIds[prepareTempMessageId] = {\r\n          messageId: (options as MTMessage).messageId,\r\n          promise: deferred\r\n        };\r\n      }\r\n\r\n      return promise.then(deferred.resolve, (error: ApiError) => {\r\n        //if(!options.ignoreErrors) {\r\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\r\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\r\n        }\r\n        \r\n        if(error.code === 401 && this.baseDcId === dcId) {\r\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\r\n            sessionStorage.delete('dc')\r\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\r\n            //this.telegramMeNotify(false);\r\n          }\r\n          \r\n          rejectPromise(error);\r\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\r\n          if(this.cachedExportPromise[dcId] === undefined) {\r\n            const promise = new Promise((exportResolve, exportReject) => {\r\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\r\n                this.invokeApi('auth.importAuthorization', {\r\n                  id: exportedAuth.id,\r\n                  bytes: exportedAuth.bytes\r\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\r\n              }, exportReject);\r\n            });\r\n            \r\n            this.cachedExportPromise[dcId] = promise;\r\n          }\r\n          \r\n          this.cachedExportPromise[dcId].then(() => {\r\n            //(cachedNetworker = networker).wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            this.invokeApi(method, params, options).then(deferred.resolve, rejectPromise);\r\n          }, rejectPromise);\r\n        } else if(error.code === 303) {\r\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            if(options.dcId) {\r\n              options.dcId = newDcId;\r\n            } else {\r\n              this.setBaseDcId(newDcId);\r\n            }\r\n            \r\n            this.getNetworker(newDcId, options).then((networker) => {\r\n              networker.wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            }, rejectPromise);\r\n          }\r\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\r\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            this.getNetworker(newDcId, options).then((networker) => {\r\n              networker.wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            }, rejectPromise);\r\n          } else {\r\n            rejectPromise(error);\r\n          }\r\n        } else if(!options.rawError && error.code === 420) {\r\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\r\n          \r\n          if(waitTime > (options.floodMaxTimeout !== undefined ? options.floodMaxTimeout : 60) && !options.prepareTempMessageId) {\r\n            return rejectPromise(error);\r\n          }\r\n          \r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, waitTime/* (waitTime + 5) */ * 1000); // 03.02.2020\r\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\r\n          const after = this.afterMessageTempIds[afterMessageId];\r\n\r\n          afterMessageId = undefined;\r\n          delete options.afterMessageId;\r\n\r\n          if(after) after.promise.then(() => performRequest(cachedNetworker));\r\n          else performRequest(cachedNetworker);\r\n        } else if(!options.rawError && error.code === 500) {\r\n          const now = Date.now();\r\n          if(options.stopTime) {\r\n            if(now >= options.stopTime) {\r\n              return rejectPromise(error);\r\n            }\r\n          }\r\n          \r\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, options.waitTime * 1000);\r\n        } else if(error.type === 'UNKNOWN') {\r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, 1000);\r\n        } else {\r\n          rejectPromise(error);\r\n        }\r\n      });\r\n    }\r\n    \r\n    if(dcId = (options.dcId || this.baseDcId)) {\r\n      this.getNetworker(dcId, options).then(performRequest, rejectPromise);\r\n    } else {\r\n      this.getBaseDcId().then(baseDcId => {\r\n        this.getNetworker(dcId = baseDcId, options).then(performRequest, rejectPromise);\r\n      });\r\n    }\r\n\r\n    return deferred;\r\n  }\r\n}\r\n\r\nconst apiManager = new ApiManager();\r\nMOUNT_CLASS_TO.apiManager = apiManager;\r\nexport default apiManager;\r\n","export default async function getScreenStream(constraints: DisplayMediaStreamConstraints) {\n  const screenStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n  return screenStream;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport getScreenStream from \"./getScreenStream\";\nimport getStream from \"./getStream\";\n\n/**\n * ! Use multiple constraints together only with first invoke\n */\nexport default function getStreamCached() {\n  const _cache: {\n    main: Partial<{\n      audio: Promise<MediaStream>,\n      video: Promise<MediaStream>\n    }>,\n    screen: Partial<{\n      audio: Promise<MediaStream>,\n      video: Promise<MediaStream>\n    }>\n  } = {\n    main: {},\n    screen: {}\n  };\n\n  return async(options: {\n    isScreen: true, \n    constraints: DisplayMediaStreamConstraints,\n  } | {\n    isScreen?: false,\n    constraints: MediaStreamConstraints, \n    muted: boolean\n  }) => {\n    const {isScreen, constraints} = options;\n    const cache = _cache[isScreen ? 'screen' : 'main'];\n    let promise: Promise<MediaStream> = cache[constraints.audio ? 'audio' : 'video'];\n\n    if(!promise) {\n      promise = (isScreen ? getScreenStream : getStream)(constraints, (options as any).muted);\n      if(constraints.audio && !cache.audio) cache.audio = promise.finally(() => cache.audio = undefined);\n      if(constraints.video && !cache.video) cache.video = promise.finally(() => cache.video = undefined);\n    }\n\n    try {\n      return await promise;\n      /* let out: Partial<{\n        audio: MediaStream,\n        video: MediaStream\n      }> = {};\n\n      await Promise.all([\n        constraints.audio && cache.audio.then(stream => out.audio = stream),\n        constraints.video && cache.video.then(stream => out.video = stream)\n      ].filter(Boolean));\n\n      return out; */\n    } catch(err) {\n      throw err;\n    }\n  };\n}\n\n(window as any).getStreamCached = getStreamCached;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport EventListenerBase, { EventListenerListeners } from \"../../helpers/eventListenerBase\";\nimport noop from \"../../helpers/noop\";\nimport { logger } from \"../logger\";\nimport getAudioConstraints from \"./helpers/getAudioConstraints\";\nimport getStreamCached from \"./helpers/getStreamCached\";\nimport getVideoConstraints from \"./helpers/getVideoConstraints\";\nimport LocalConferenceDescription from \"./localConferenceDescription\";\nimport StreamManager, { StreamItem } from \"./streamManager\";\n\nexport type TryAddTrackOptions = {\n  stream: MediaStream, \n  track: MediaStreamTrack, \n  type: StreamItem['type'], \n  source?: string\n};\n\nexport default abstract class CallInstanceBase<E extends EventListenerListeners> extends EventListenerBase<E> {\n  protected log: ReturnType<typeof logger>;\n  protected outputDeviceId: string;\n\n  protected player: HTMLElement;\n  protected elements: Map<string, HTMLMediaElement>;\n\n  protected audio: HTMLAudioElement;\n  // protected fixedSafariAudio: boolean;\n\n  protected getStream: ReturnType<typeof getStreamCached>;\n\n  constructor() {\n    super(false);\n\n    const player = this.player = document.createElement('div');\n    player.classList.add('call-player');\n    player.style.display = 'none';\n    document.body.append(player);\n\n    this.elements = new Map();\n\n    // possible Safari fix\n    const audio = this.audio = new Audio();\n    audio.autoplay = true;\n    audio.volume = 1.0;\n    this.player.append(audio);\n    this.elements.set('audio', audio);\n\n    this.fixSafariAudio();\n\n    this.getStream = getStreamCached();\n  }\n\n  public get isSharingAudio() {\n    return !!this.streamManager.hasInputTrackKind('audio');\n  }\n\n  public get isSharingVideo() {\n    return !!this.streamManager.hasInputTrackKind('video');\n  }\n\n  public abstract get isMuted(): boolean;\n  public abstract get isClosing(): boolean;\n\n  public fixSafariAudio() {\n    // if(this.fixedSafariAudio) return;\n    this.audio.play().catch(noop);\n    // this.fixedSafariAudio = true;\n  }\n\n  public requestAudioSource(muted: boolean) {\n    return this.requestInputSource(true, false, muted);\n  }\n\n  public requestInputSource(audio: boolean, video: boolean, muted: boolean) {\n    const {streamManager} = this;\n    if(streamManager) {\n      const isAudioGood = !audio || this.isSharingAudio;\n      const isVideoGood = !video || this.isSharingVideo;\n      if(isAudioGood && isVideoGood) {\n        return Promise.resolve();\n      }\n    }\n\n    const constraints: MediaStreamConstraints = {\n      audio: audio && getAudioConstraints(),\n      video: video && getVideoConstraints()\n    };\n    \n    return this.getStream({\n      constraints, \n      muted\n    }).then(stream => {\n      if(stream.getVideoTracks().length) {\n        this.saveInputVideoStream(stream, 'main');\n      }\n      \n      this.onInputStream(stream);\n    });\n  }\n\n  public getElement(endpoint: number | string) {\n    return this.elements.get('' + endpoint);\n  }\n\n  public abstract get streamManager(): StreamManager;\n  public abstract get description(): LocalConferenceDescription;\n  public abstract toggleMuted(): Promise<void>;\n\n  public cleanup() {\n    this.player.textContent = '';\n    this.player.remove();\n    this.elements.clear();\n\n    // can have no connectionInstance but streamManager with input stream\n    this.streamManager.stop();\n\n    super.cleanup();\n  }\n\n  public onTrack(event: RTCTrackEvent) {\n    this.tryAddTrack({\n      stream: event.streams[0], \n      track: event.track, \n      type: 'output'\n    });\n  }\n\n  public saveInputVideoStream(stream: MediaStream, type?: string) {\n    const track = stream.getVideoTracks()[0];\n    this.tryAddTrack({\n      stream, \n      track, \n      type: 'input', \n      source: type || 'main'\n    });\n  }\n  \n  public tryAddTrack({stream, track, type, source}: TryAddTrackOptions) {\n    if(!source) {\n      source = StreamManager.getSource(stream, type);\n    }\n\n    this.log('tryAddTrack', stream, track, type, source);\n\n    const isOutput = type === 'output';\n\n    const {player, elements, streamManager} = this;\n    \n    const tagName = track.kind as StreamItem['kind'];\n    const isVideo = tagName === 'video';\n\n    const elementEndpoint = isVideo ? source : tagName;\n    let element = elements.get(elementEndpoint);\n\n    if(isVideo) {\n      track.addEventListener('ended', () => {\n        this.log('[track] onended');\n        elements.delete(elementEndpoint);\n        // element.remove();\n      }, {once: true});\n    }\n    \n    if(isOutput) {\n      streamManager.addTrack(stream, track, type);\n    }\n\n    const useStream = isVideo ? stream : streamManager.outputStream;\n    if(!element) {\n      element = document.createElement(tagName);\n      element.autoplay = true;\n      element.srcObject = useStream;\n      element.volume = 1.0;\n\n      if((element as any).sinkId !== 'undefined') {\n        const {outputDeviceId} = this;\n        if(outputDeviceId) {\n          (element as any).setSinkId(outputDeviceId);\n        }\n      }\n      \n      if(!isVideo) {\n        player.appendChild(element);\n      }\n      // audio.play();\n\n      elements.set(elementEndpoint, element);\n    } else {\n      if(element.paused) {\n        element.play().catch(noop);\n      }\n\n      // ! EVEN IF MEDIASTREAM IS THE SAME NEW TRACK WON'T PLAY WITHOUT REPLACING IT WHEN NEW PARTICIPANT IS ENTERING !\n      // if(element.srcObject !== useStream) {\n        element.srcObject = useStream;\n      // }\n    }\n\n    return source;\n  }\n\n  public setMuted(muted?: boolean) {\n    this.streamManager.inputStream.getAudioTracks().forEach((track) => {\n      if(track?.kind === 'audio') {\n        track.enabled = muted === undefined ? !track.enabled : !muted;\n      }\n    });\n  }\n\n  protected onInputStream(stream: MediaStream): void {\n    if(!this.isClosing) {\n      const {streamManager, description} = this;\n      streamManager.addStream(stream, 'input');\n      \n      if(description) {\n        streamManager.appendToConference(description);\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPMediaSection from \"./mediaSection\";\nimport SDPSessionSection from \"./sessionSection\";\n\nexport type AttributeKey = 'group' | 'rtcp' | 'ice-ufrag' | \n  'ice-pwd' | 'ice-options' | 'fingerprint' | 'setup' | \n  'mid' | 'extmap' | 'sendonly' | 'msid' | 'rtcp-mux' | \n  'rtpmap' | 'rtcp-fb' | 'fmtp' | 'ssrc' | 'ssrc-group' |\n  'extmap-allow-mixed' | 'msid-semantic';\n\nexport type AttributeMap = {[k in AttributeKey]?: boolean};\n\nexport default class SDP {\n  #session: SDPSessionSection;\n  #media: SDPMediaSection[];\n\n  constructor(session: SDP['session'], mediaSections: SDP['media']) {\n    this.#session = session;\n    this.#media = mediaSections;\n  }\n\n  public get session() {\n    return this.#session;\n  }\n\n  public get media() {\n    return this.#media;\n  }\n\n  public get bundle() {\n    const bundleLine = this.session.lines.find(line => line.parsed?.key === 'group');\n    return bundleLine.value.split(' ').slice(1);\n  }\n\n  toString() {\n    return this.session.lines\n    .concat(...this.media.map(section => section.lines))\n    .map(line => line.toString()).join('\\r\\n') + '\\r\\n';\n  }\n\n  /* get buggedMedia() {\n    const bundle = this.bundle;\n    type A = {\n      mid: SDPMediaSection['mid'],\n      mediaType: SDPMediaSection['mediaType'],\n      direction: SDPMediaSection['direction']\n    };\n    const out: A[] = [];\n    for(let i = 0, length = this.media.length; i < length; ++i) {\n      const section = this.media[i];\n      const mid = section.mid;\n      if(!bundle.includes(mid)) {\n        out.push(section);\n      }\n    }\n\n    return out;\n  } */\n\n  /* get mediaTypes() {\n    return this.media.map((section) => {\n      return {mid: section.oa.get('mid').oa, type: section.mediaType, direction: section.direction};\n    });\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function splitStringByLimitWithRest(str: string, separator: string, limit: number) {\n  const splitted = str.split(separator);\n  const out: string[] = [];\n\n  while(limit > 0 && splitted.length) {\n    out.push(splitted.shift());\n    --limit;\n  }\n\n  if(splitted.length) {\n    out.push(splitted.join(separator));\n  }\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default class UniqueNumberGenerator {\n  #set: Set<number>;\n  #min: number;\n  #max: number;\n\n  constructor(min: number, max: number) {\n    this.#set = new Set();\n    this.#min = min;\n    this.#max = max;\n  }\n\n  public generate() {\n    const min = this.#min;\n    const max = this.#max;\n    const set = this.#set;\n\n    const maxTries = max - min + 1;\n    let value = Math.floor(min + maxTries * Math.random()), _try = 0;\n    while(set.has(value)) {\n      if(value < max) {\n        ++value;\n      } else {\n        value = min;\n      }\n\n      if(++_try >= maxTries) {\n        return null;\n      }\n    }\n\n    set.add(value);\n    return value;\n  }\n\n  public add(value: number) {\n    this.#set.add(value);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { AttributeKey } from \".\";\n\nexport default class SDPAttributeSplitted {\n  #key: AttributeKey;\n  #value: string;\n\n  // key = 'ssrc-group', value = 'SIM 1 2 3'\n  constructor(key: AttributeKey, value: string) {\n    this.#key = key;\n    this.#value = value;\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get value() {\n    return this.#value;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default class SDPMediaLineParts {\n  #type: 'audio' | 'video' | 'application';\n  #port: string;\n  #protocol: string;\n  #ids: string[];\n\n  constructor(\n    type: SDPMediaLineParts['type'], \n    port: SDPMediaLineParts['port'], \n    protocol: SDPMediaLineParts['protocol'], \n    ids: SDPMediaLineParts['ids']\n  ) {\n    this.#type = type;\n    this.#port = port;\n    this.#protocol = protocol;\n    this.#ids = ids;\n  }\n\n  public get type() {\n    return this.#type;\n  }\n  \n  public get port() {\n    return this.#port;\n  }\n\n  public get protocol() {\n    return this.#protocol;\n  }\n\n  public get ids() {\n    return this.#ids;\n  }\n\n  toString() {\n    return this.type + ' ' + this.port + ' ' + this.protocol + ' ' + this.ids.join(' ');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\nimport SDPAttributeSplitted from \"./attributeSplitted\";\nimport SDPMediaLineParts from \"./mediaLineParts\";\n\nexport default class SDPLine {\n  #key: 'm' | 'a' | 'o' | 'v' | 's' | 't' | 'c';\n  #value: string;\n  #mediaLineParts: SDPMediaLineParts;\n  #parsed?: SDPAttributeSplitted;\n\n  // key = 'a', value = 'ssrc-group:SIM 1 2 3'\n  constructor(key: SDPLine['key'], value: string | SDPMediaLineParts | SDPAttributeSplitted) {\n    this.#key = key;\n\n    if(typeof(value) === 'string') {\n      this.#value = value;\n\n      if(key === 'm') {\n        const splitted = value.split(' ');\n        this.#mediaLineParts = new SDPMediaLineParts(splitted[0] as any, splitted[1], splitted[2], splitted.slice(3));\n      } else {\n        if(key === 'a') {\n          const result = splitStringByLimitWithRest(value, ':', 1);\n          value = result[0];\n          this.#parsed = result.length === 1 ? new SDPAttributeSplitted(value as any, null) : new SDPAttributeSplitted(value as any, result[1]);\n        }\n      }\n    } else {\n      if(value instanceof SDPMediaLineParts) {\n        this.#mediaLineParts = value;\n        this.#value = value.toString();\n      } else if(value instanceof SDPAttributeSplitted) {\n        this.#parsed = value;\n        this.#value = value.value ? `${value.key}:${value.value}` : value.key;\n      }\n    }\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get value() {\n    return this.#value;\n  }\n\n  public get parsed() {\n    return this.#parsed;\n  }\n\n  public get mediaLineParts() {\n    return this.#mediaLineParts;\n  }\n\n  toString() {\n    return `${this.key}=${this.value}`;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\n\nexport default class SDPAttributeInner {\n  #key: string;\n  #lines: Array<string>;\n  #prefix: string;\n  #nestedMap: Map<string, SDPAttributeInner>;\n  #missed: boolean;\n  #keys: Array<string>;\n\n  constructor(key: SDPAttributeInner['key'], lines: SDPAttributeInner['lines'], prefix: string = ':', missed = false) {\n    this.#key = key;\n    this.#lines = lines;\n    this.#prefix = prefix;\n    this.#missed = missed;\n    this.#nestedMap = missed ? new Map() : null;\n    this.#keys = missed ? [] : null;\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get value() {\n    return this.#missed || !this.lines.length ? null : this.lines[0];\n  }\n\n  public get exists() {\n    return !this.#missed;\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get keys() {\n    SDPAttributeInner.fill(this);\n    return this.#keys;\n  }\n\n  public forEach(callback: Parameters<Map<string, SDPAttributeInner>['forEach']>[0]) {\n    SDPAttributeInner.fill(this);\n    this.#nestedMap.forEach(callback);\n  }\n\n  public get(key: string) {\n    SDPAttributeInner.fill(this);\n    return this.#nestedMap.get(key) || new SDPAttributeInner(key, [], ':', true);\n  }\n  \n  private static fill(attribute: SDPAttributeInner) {\n    if(attribute.#nestedMap !== null) {\n      return;\n    }\n\n    const map: Map<string, Array<string>> = new Map();\n    attribute.lines.forEach(str => {\n      const [key, rest] = splitStringByLimitWithRest(str, attribute.#prefix, 1);\n      const values = map.get(key) || [];\n      map.set(key, [...values, rest || '']);\n    });\n  \n    const nestedMap = attribute.#nestedMap = SDPAttributeInner.makeAttributes(map);\n    attribute.#keys = Array.from(nestedMap.keys());\n  }\n\n  private static makeAttributes(innerParts: Map<string, Array<string>>) {\n    const out: Map<string, SDPAttributeInner> = new Map();\n  \n    innerParts.forEach((lines, key) => {\n      out.set(key, new SDPAttributeInner(key, lines));\n    });\n  \n    return out;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPAttributeInner from \"./attributeInner\";\nimport SDPLine from \"./line\";\n\nexport default class SDPAttributes {\n  #lines: SDPLine[];\n  #attributes: Map<string, SDPAttributeInner>;\n\n  constructor(lines: SDPLine[]) {\n    this.#lines = lines;\n    this.#attributes = new Map();\n    SDPAttributes.fillAttributes(this);\n  }\n\n  public get(key: string) {\n    return this.#attributes.get(key) || new SDPAttributeInner(key, [], ' ', true);\n  }\n\n  private static fillAttributes(attributes: SDPAttributes) {\n    const attributesMap: Map<string, Array<string>> = new Map();\n    attributes.#lines.forEach((line) => {\n      if(line.key === 'a') {\n        const {key, value} = line.parsed;\n\n        let linesArray = attributesMap.get(key);\n        if(!linesArray) {\n          linesArray = [];\n          attributesMap.set(key, linesArray);\n        }\n        \n        linesArray.push(value || '');\n      }\n    });\n\n    attributesMap.forEach((linesArray, key) => {\n      attributes.#attributes.set(key, new SDPAttributeInner(key, linesArray, ' ', false));\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { AttributeMap } from \".\";\nimport { NoExtraProperties } from \"../../../types\";\nimport SDPAttributes from \"./attributes\";\nimport SDPLine from \"./line\";\n\nexport type SDPMediaDirection = 'sendonly' | 'recvonly' | 'inactive' | 'sendrecv';\nexport default class SDPMediaSection {\n  #lines: Array<SDPLine>;\n  #mediaLine: SDPLine;\n  #attributes: SDPAttributes;\n  #direction: SDPMediaDirection;\n\n  constructor(lines: Array<SDPLine>) {\n    this.#lines = lines;\n    this.#mediaLine = lines[0];\n    this.#attributes = this.#direction = null;\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get mediaLine() {\n    return this.#mediaLine;\n  }\n\n  public get mediaLineParts() {\n    return this.#mediaLine.mediaLineParts;\n  }\n\n  public get mediaType() {\n    return this.mediaLineParts.type;\n  }\n\n  public get direction() {\n    if(!this.#direction) {\n      const attributes = this.attributes;\n\n      let direction: SDPMediaDirection;\n      if(attributes.get('sendonly').exists) direction = 'sendonly';\n      else if(attributes.get('recvonly').exists) direction = 'recvonly';\n      else if(attributes.get('inactive').exists) direction = 'inactive';\n      else direction = 'sendrecv';\n\n      this.#direction = direction;\n    }\n\n    return this.#direction;\n  }\n\n  public get isSending() {\n    return this.direction === 'sendrecv' || this.direction === 'sendonly';\n  }\n\n  public get isReceiving() {\n    return this.direction === 'sendrecv' || this.direction === 'recvonly';\n  }\n\n  public get attributes() {\n    this.#attributes || (this.#attributes = new SDPAttributes(this.lines));\n    return this.#attributes;\n  }\n\n  public get mid() {\n    return this.attributes.get('mid').value;\n  }\n\n  public lookupAttributeKeys<T extends AttributeMap>(keys: NoExtraProperties<AttributeMap, T>): {[k in keyof T]: T[k] extends true ? string : string[]} {\n    const out: any = {};\n\n    for(const key in keys) {\n      const result = this.attributes.get(key);\n      // @ts-ignore\n      const resultShouldBeArray = !keys[key];\n      if(!result) {\n        out[key] = resultShouldBeArray ? [] : undefined;\n      } else {\n        out[key] = resultShouldBeArray ? result.lines : result.value;\n      }\n    }\n\n    return out;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPLine from \"./line\";\n\nexport default class SDPSessionSection {\n  #lines: SDPLine[];\n  #sessionId: string;\n\n  constructor(lines: SDPLine[]) {\n    this.#lines = lines;\n    this.#sessionId = lines.filter(line => line.key === 'o').map(line => line.value.split(' ')[1])[0];\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get sessionId() {\n    return this.#sessionId;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDP from \".\";\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\nimport UniqueNumberGenerator from \"../../../helpers/uniqueNumberGenerator\";\nimport SDPLine from \"./line\";\nimport SDPMediaSection from \"./mediaSection\";\nimport SDPSessionSection from \"./sessionSection\";\n\nexport function parseSdp(str: string) {\n  function createSection() {\n    if(sessionSection) {\n      mediaSections.push(new SDPMediaSection(lines));\n    } else {\n      sessionSection = new SDPSessionSection(lines);\n    }\n  }\n\n  let sessionSection: SDPSessionSection = null, mediaSections: SDPMediaSection[] = [], lines: SDPLine[] = [];\n  str.split(/\\r?\\n/).forEach(lineStr => {\n    if(!isIncorrectSdpLine(lineStr)) {\n      const line = parseSdpLine(lineStr);\n      if(line.key === 'm') {\n        createSection();\n        lines = [];\n      }\n\n      lines.push(line);\n    }\n  });\n\n  createSection();\n  return new SDP(sessionSection, mediaSections);\n}\n\nexport function isIncorrectSdpLine(str: string) {\n  return /^[\\s\\xa0]*$/.test(str);\n}\n\nexport function parseSdpLine(str: string) {\n  const splitted = splitStringByLimitWithRest(str, '=', 1);\n  return new SDPLine(splitted[0] as any, splitted[1]);\n}\n\nexport function addSimulcast(sdp: SDP) {\n  let generator: UniqueNumberGenerator;\n  sdp.media.forEach((section, idx) => {\n    if(section.mediaType === 'video' && section.isSending && !section.attributes.get('ssrc-group').get('SIM').exists) {\n      if(!generator) {\n        generator = new UniqueNumberGenerator(2, 4294967295);\n      }\n\n      const originalSsrcs = section.attributes.get('ssrc-group').get('FID').value.split(' ');\n      const lines = section.lines;\n      originalSsrcs.forEach(ssrc => generator.add(+ssrc)); // fix possible duplicates\n      const ssrcs = [originalSsrcs[0], generator.generate(), generator.generate()];\n      const ssrcs2 = [originalSsrcs[1], generator.generate(), generator.generate()];\n\n      lines.push(parseSdpLine('a=ssrc-group:SIM ' + ssrcs.join(' ')));\n\n      const ssrcsStrLines = section.attributes.get('ssrc').get(originalSsrcs[0]).lines;\n\n      ssrcs.forEach((ssrc, idx) => {\n        const ssrc2 = ssrcs2[idx];\n        if(idx > 0) {\n          lines.push(parseSdpLine('a=ssrc-group:FID ' + ssrc + ' ' + ssrc2));\n\n          ssrcsStrLines.forEach(v => {\n            lines.push(parseSdpLine('a=ssrc:' + ssrc + ' ' + v));\n          });\n\n          ssrcsStrLines.forEach(v => {\n            lines.push(parseSdpLine('a=ssrc:' + ssrc2 + ' ' + v));\n          });\n        }\n      });\n\n      sdp.media[idx] = new SDPMediaSection(lines);\n    }\n  });\n\n  return !!generator;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDP from \"../sdp\";\nimport SDPMediaSection from \"../sdp/mediaSection\";\nimport { toTelegramSource } from \"../utils\";\nimport { parseSourceGroups } from \"./parseSourceGroups\";\n\nexport default function parseMediaSectionInfo(sdp: SDP, channel: SDPMediaSection) {\n  const clientInfo = channel.lookupAttributeKeys({\n    'ice-ufrag': true,\n    'ice-pwd': true,\n    fingerprint: true,\n    setup: true,\n    ssrc: true,\n    mid: true,\n    'ssrc-group': false\n  });\n\n  if(!clientInfo.fingerprint) { // support Firefox\n    const line = sdp.session.lines.find(line => line.parsed?.key === 'fingerprint');\n    clientInfo.fingerprint = line.parsed.value;\n  }\n\n  const telegramSourceGroups = parseSourceGroups(clientInfo['ssrc-group']);\n  const [hash, fingerprint] = clientInfo.fingerprint.split(' ', 2);\n  const ssrc = clientInfo.ssrc && toTelegramSource(+clientInfo.ssrc.split(' ', 1)[0]);\n  // ssrc = telegramSourceGroups ? telegramSourceGroups[0].sources[0] : ssrc;\n\n  return {\n    raw: clientInfo,\n    ufrag: clientInfo['ice-ufrag'],\n    pwd: clientInfo['ice-pwd'],\n    fingerprint: {\n      fingerprint,\n      setup: clientInfo.setup,\n      hash\n    },\n    source: ssrc,\n    sourceGroups: telegramSourceGroups,\n    mid: clientInfo.mid\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GroupCallParticipantVideoSourceGroup } from \"../../../layer\";\nimport { toTelegramSource } from \"../utils\";\n\nexport function parseSourceGroups(sdpLines: string[]) {\n  const telegramSourceGroups = sdpLines.map(str => {\n    const [semantics, ...rest] = str.split(' ');\n\n    const sourceGroup: GroupCallParticipantVideoSourceGroup = {\n      _: 'groupCallParticipantVideoSourceGroup',\n      semantics,\n      // sources: rest.map(ssrc => +ssrc)\n      sources: rest.map(ssrc => toTelegramSource(+ssrc))\n    };\n\n    return sourceGroup;\n  });\n\n  /* const simIndex = telegramSourceGroups.findIndex(g => g.semantics === 'SIM');\n  if(simIndex !== -1) {\n    const sourceGroup = telegramSourceGroups.splice(simIndex, 1)[0];\n    telegramSourceGroups.unshift(sourceGroup);\n  } */\n\n  return telegramSourceGroups.length ? telegramSourceGroups : undefined;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../../helpers/array\";\nimport { copy } from \"../../../helpers/object\";\nimport { ConferenceEntry } from \"../localConferenceDescription\";\nimport { parseSdp, addSimulcast } from \"../sdp/utils\";\nimport { generateMediaFirstLine, SDPBuilder } from \"../sdpBuilder\";\nimport { UpdateGroupCallConnectionData } from \"../types\";\nimport parseMediaSectionInfo from \"./parseMediaSectionInfo\";\n\nexport default function fixLocalOffer(options: {\n  offer: RTCSessionDescriptionInit, \n  data: UpdateGroupCallConnectionData,\n  skipAddingMulticast?: boolean\n  // mids?: string[]\n}) {\n  const {offer, data} = options;\n  const sdp = parseSdp(offer.sdp);\n  let hasMunged = false;\n\n  if(!options.skipAddingMulticast) {\n    hasMunged = addSimulcast(sdp) || hasMunged;\n  }\n\n  // const bundleLine = parsedSdp.session.lines.find(line => line.Ha?.key === 'group');\n  // const bundleMids = bundleLine.value.split(' ').slice(1);\n\n  forEachReverse(sdp.media, (section, idx, arr) => {\n    // const mid = section.oa.get('mid').oa;\n\n    // это может случиться при выключении и включении видео. почему-то появится секция уже удалённая\n    // ! нельзя тут модифицировать локальное описание, будет критовать\n    /* if(mids && !mids.includes(mid) && !bundleMids.includes(mid)) {\n      console.error('wtf');\n      hasMunged = true;\n      arr.splice(idx, 1);\n      return;\n    } */\n\n    if(/* section.mediaType !== 'video' ||  */section.isSending) {\n      return;\n    }\n\n    if(section.mediaType === 'application') {\n      return;\n    }\n\n    const mediaLine = section.mediaLine;\n    const mediaLineParts = mediaLine.mediaLineParts;\n    const mediaCodecIds = mediaLineParts.ids;\n    const localMLine = mediaLine.toString();\n\n    const codec = data[section.mediaType];\n    const payloadTypes = codec['payload-types'];\n\n    /* forEachReverse(payloadTypes, (payloadType, idx, arr) => {\n      if(!mediaCodecIds.includes('' + payloadType.id) && section.mediaType === 'video') {\n      // if(payloadType.name === 'H265') {\n        console.warn('[sdp] filtered unsupported codec', payloadType, mediaCodecIds, section.mediaType);\n        arr.splice(idx, 1);\n      }\n    }); */\n\n    const codecIds = payloadTypes.map(payload => '' + payload.id);\n    const correctMLine = generateMediaFirstLine(section.mediaType, undefined, codecIds);\n    \n    if(localMLine !== correctMLine) {\n      const sectionInfo = parseMediaSectionInfo(sdp, section);\n\n      let newData = {...data};\n      newData.transport = copy(newData.transport);\n      newData.transport.ufrag = sectionInfo.ufrag;\n      newData.transport.pwd = sectionInfo.pwd;\n      newData.transport.fingerprints = [sectionInfo.fingerprint];\n      newData.transport.candidates = [];\n\n      const entry = new ConferenceEntry(sectionInfo.mid, mediaLineParts.type);\n      entry.setPort(mediaLineParts.port);\n      sectionInfo.source && entry.setSource(sectionInfo.sourceGroups || sectionInfo.source);\n      entry.setDirection(section.direction);\n\n      const newSdp = new SDPBuilder().addSsrcEntry(entry, newData).finalize();\n\n      const newChannel = parseSdp(newSdp).media[0];\n      arr[idx] = newChannel;\n\n      hasMunged = true;\n    }\n  });\n\n  if(hasMunged) {\n    const mungedSdp = sdp.toString();\n    offer.sdp = mungedSdp;\n  }\n\n  return {offer, sdp/* , bundleMids */};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../helpers/array\";\nimport throttle from \"../../helpers/schedulers/throttle\";\nimport { Updates, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update } from \"../../layer\";\nimport apiUpdatesManager from \"../appManagers/apiUpdatesManager\";\nimport appGroupCallsManager, { GroupCallConnectionType, JoinGroupCallJsonPayload } from \"../appManagers/appGroupCallsManager\";\nimport apiManager from \"../mtproto/apiManager\";\nimport rootScope from \"../rootScope\";\nimport CallConnectionInstanceBase, { CallConnectionInstanceOptions } from \"./callConnectionInstanceBase\";\nimport GroupCallInstance from \"./groupCallInstance\";\nimport filterServerCodecs from \"./helpers/filterServerCodecs\";\nimport fixLocalOffer from \"./helpers/fixLocalOffer\";\nimport processMediaSection from \"./helpers/processMediaSection\";\nimport { ConferenceEntry } from \"./localConferenceDescription\";\nimport SDP from \"./sdp\";\nimport SDPMediaSection from \"./sdp/mediaSection\";\nimport { WebRTCLineType } from \"./sdpBuilder\";\nimport { UpdateGroupCallConnectionData } from \"./types\";\n\nexport default class GroupCallConnectionInstance extends CallConnectionInstanceBase {\n  private groupCall: GroupCallInstance;\n  public updateConstraints?: boolean;\n  private type: GroupCallConnectionType;\n  private options: {\n    type: Extract<GroupCallConnectionType, 'main'>, \n    isMuted?: boolean, \n    joinVideo?: boolean, \n    rejoin?: boolean\n  } | {\n    type: Extract<GroupCallConnectionType, 'presentation'>,\n  };\n\n  private updateConstraintsInterval: number;\n  public negotiateThrottled: () => void;\n\n  constructor(options: CallConnectionInstanceOptions & {\n    groupCall: GroupCallConnectionInstance['groupCall'],\n    type: GroupCallConnectionInstance['type'],\n    options: GroupCallConnectionInstance['options'],\n  }) {\n    super(options);\n\n    this.negotiateThrottled = throttle(this.negotiate.bind(this), 0, false);\n  }\n\n  public createPeerConnection() {\n    return this.connection || super.createPeerConnection({ \n      iceServers: [], \n      iceTransportPolicy: 'all', \n      bundlePolicy: 'max-bundle', \n      rtcpMuxPolicy: 'require', \n      iceCandidatePoolSize: 0, \n      // sdpSemantics: \"unified-plan\", \n      // extmapAllowMixed: true,\n    });\n  }\n\n  public createDataChannel() {\n    if(this.dataChannel) {\n      return this.dataChannel;\n    }\n\n    const dataChannel = super.createDataChannel();\n\n    dataChannel.addEventListener('open', () => {\n      this.maybeUpdateRemoteVideoConstraints();\n    });\n\n    dataChannel.addEventListener('close', () => {\n      if(this.updateConstraintsInterval) {\n        clearInterval(this.updateConstraintsInterval);\n        this.updateConstraintsInterval = undefined;\n      }\n    });\n\n    return dataChannel;\n  }\n\n  public createDescription() {\n    if(this.description) {\n      return this.description;\n    }\n\n    const description = super.createDescription();\n\n    /* const perType = 0;\n    const types = ['audio' as const, 'video' as const];\n    const count = types.length * perType;\n    const init: RTCRtpTransceiverInit = {direction: 'recvonly'};\n    types.forEach(type => {\n      for(let i = 0; i < perType; ++i) {\n        description.createEntry(type).createTransceiver(connection, init);\n      }\n    }); */\n\n    return description;\n  }\n\n  public appendStreamToConference() {\n    super.appendStreamToConference();/* .then(() => {\n      currentGroupCall.connections.main.negotiating = false;\n      this.startNegotiation({\n        type: type,\n        isMuted: muted,\n        rejoin\n      });\n    }); */\n  }\n\n  private async invokeJoinGroupCall(localSdp: SDP, mainChannels: SDPMediaSection[], options: GroupCallConnectionInstance['options']) {\n    const {groupCall, description} = this;\n    const groupCallId = groupCall.id;\n\n    const processedChannels = mainChannels.map(section => {\n      const processed = processMediaSection(localSdp, section);\n\n      this.sources[processed.entry.type as 'video' | 'audio'] = processed.entry;\n      \n      return processed;\n    });\n\n    let promise: Promise<Updates>;\n    const audioChannel = processedChannels.find(channel => channel.media.mediaType === 'audio');\n    const videoChannel = processedChannels.find(channel => channel.media.mediaType === 'video');\n    let {source, params} = audioChannel || {};\n    const useChannel = videoChannel || audioChannel;\n\n    const channels: {[type in WebRTCLineType]?: typeof audioChannel} = {\n      audio: audioChannel,\n      video: videoChannel\n    };\n\n    description.entries.forEach(entry => {\n      if(entry.direction === 'sendonly') {\n        const channel = channels[entry.type];\n        if(!channel) return;\n\n        description.setEntrySource(entry, channel.sourceGroups || channel.source);\n        description.setEntryPeerId(entry, rootScope.myId);\n      }\n    });\n\n    // overwrite ssrc with audio in video params\n    if(params !== useChannel.params) {\n      const data: JoinGroupCallJsonPayload = JSON.parse(useChannel.params.data);\n      // data.ssrc = source || data.ssrc - 1; // audio channel can be missed in screensharing\n      if(source) data.ssrc = source;\n      else delete data.ssrc;\n      params = {\n        _: 'dataJSON',\n        data: JSON.stringify(data)\n      };\n    }\n    \n    const groupCallInput = appGroupCallsManager.getGroupCallInput(groupCallId);\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params,\n      };\n\n      promise = apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    apiUpdatesManager.processUpdateMessage(updates);\n    const update = (updates as Updates.updates).updates.find(update => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n\n    const data: UpdateGroupCallConnectionData = JSON.parse(update.params.data);\n\n    data.audio = data.audio || groupCall.connections.main.description.audio;\n    description.setData(data);\n    filterServerCodecs(mainChannels, data);\n\n    return data;\n  }\n\n  protected async negotiateInternal() {\n    const {connection, description} = this;\n    const isNewConnection = connection.iceConnectionState === 'new' && !description.getEntryByMid('0').source;\n    const log = this.log.bindPrefix('startNegotiation');\n    log('start');\n    \n    const originalOffer = await connection.createOffer({iceRestart: false});\n\n    if(isNewConnection && this.dataChannel) {\n      const dataChannelEntry = description.createEntry('application');\n      dataChannelEntry.setDirection('sendrecv');\n    }\n\n    const {sdp: localSdp, offer} = fixLocalOffer({\n      offer: originalOffer, \n      data: description\n    });\n\n    log('[sdp] setLocalDescription', offer.sdp);\n    await connection.setLocalDescription(offer);\n\n    const mainChannels = localSdp.media.filter(media => {\n      return media.mediaType !== 'application' && media.isSending;\n    });\n\n    if(isNewConnection) {\n      try {\n        await this.invokeJoinGroupCall(localSdp, mainChannels, this.options);\n      } catch(e) {\n        this.log.error('[tdweb] joinGroupCall error', e);\n      }\n    }\n    \n    /* if(!data) {\n      log('abort 0');\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n\n    /* if(connection.iceConnectionState !== 'new') {\n      log(`abort 1 connectionState=${connection.iceConnectionState}`);\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n    /* if(this.currentGroupCall !== currentGroupCall || connectionHandler.connection !== connection) {\n      log('abort', this.currentGroupCall, currentGroupCall);\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n    \n    const isAnswer = true;\n    // const _bundleMids = bundleMids.slice();\n    const entriesToDelete: ConferenceEntry[] = [];\n    const bundle = localSdp.bundle;\n    forEachReverse(bundle, (mid, idx, arr) => {\n      const entry = description.getEntryByMid(mid);\n      if(entry.shouldBeSkipped(isAnswer)) {\n        arr.splice(idx, 1);\n        entriesToDelete.push(entry);\n      }\n    });\n\n    /* forEachReverse(description.entries, (entry, idx, arr) => {\n      const mediaSection = _parsedSdp.media.find(section => section.oa.get('mid').oa === entry.mid);\n      const deleted = !mediaSection;\n      // const deleted = !_bundleMids.includes(entry.mid); // ! can't use it because certain mid can be missed in bundle\n      if(deleted) {\n        arr.splice(idx, 1);\n      }\n    }); */\n\n    const entries = localSdp.media.map((section) => {\n      const mid = section.mid;\n      let entry = description.getEntryByMid(mid);\n      if(!entry) {\n        entry = new ConferenceEntry(mid, section.mediaType);\n        entry.setDirection('inactive');\n      }\n\n      return entry;\n    });\n\n    const answerDescription: RTCSessionDescriptionInit = {\n      type: 'answer',\n      sdp: description.generateSdp({\n        bundle, \n        entries, \n        isAnswer\n      })\n    };\n\n    entriesToDelete.forEach(entry => {\n      description.deleteEntry(entry);\n    });\n\n    log(`[sdp] setRemoteDescription signaling=${connection.signalingState} ice=${connection.iceConnectionState} gathering=${connection.iceGatheringState} connection=${connection.connectionState}`, answerDescription.sdp);\n    await connection.setRemoteDescription(answerDescription);\n\n    log('end');\n  }\n\n  public negotiate() {\n    let promise = this.negotiating;\n    if(promise) {\n      return promise;\n    }\n\n    promise = super.negotiate();\n\n    if(this.updateConstraints) {\n      promise.then(() => {\n        this.maybeUpdateRemoteVideoConstraints();\n        this.updateConstraints = false;\n      });\n    }\n\n    return promise;\n  }\n\n  public maybeUpdateRemoteVideoConstraints() {\n    if(this.dataChannel.readyState !== 'open') {\n      return;\n    }\n\n    this.log('maybeUpdateRemoteVideoConstraints');\n    \n    // * https://github.com/TelegramMessenger/tgcalls/blob/6f2746e04c9b040f8c8dfc64d916a1853d09c4ce/tgcalls/group/GroupInstanceCustomImpl.cpp#L2549\n    type VideoConstraints = {minHeight?: number, maxHeight: number};\n    const obj: {\n      colibriClass: 'ReceiverVideoConstraints',\n      constraints: {[endpoint: string]: VideoConstraints},\n      defaultConstraints: VideoConstraints,\n      onStageEndpoints: string[]\n    } = {\n      colibriClass: 'ReceiverVideoConstraints',\n      constraints: {},\n      defaultConstraints: {maxHeight: 0},\n      onStageEndpoints: []\n    };\n\n    for(const entry of this.description.entries) {\n      if(entry.direction !== 'recvonly' || entry.type !== 'video') {\n        continue;\n      }\n\n      const {endpoint} = entry;\n      obj.onStageEndpoints.push(endpoint);\n      obj.constraints[endpoint] = {\n        minHeight: 180,\n        maxHeight: 720\n      };\n    }\n\n    this.sendDataChannelData(obj);\n\n    if(!obj.onStageEndpoints.length) {\n      if(this.updateConstraintsInterval) {\n        clearInterval(this.updateConstraintsInterval);\n        this.updateConstraintsInterval = undefined;\n      }\n    } else if(!this.updateConstraintsInterval) {\n      this.updateConstraintsInterval = window.setInterval(this.maybeUpdateRemoteVideoConstraints.bind(this), 5000);\n    }\n  }\n  \n  public addInputVideoStream(stream: MediaStream) {\n    // const {sources} = this;\n    // if(sources?.video) {\n      // const source = this.sources.video.source;\n      // stream.source = '' + source;\n      this.groupCall.saveInputVideoStream(stream, this.type);\n    // }\n\n    this.streamManager.addStream(stream, 'input');\n    this.appendStreamToConference(); // replace sender track\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { safeAssign } from \"../../helpers/object\";\nimport { logger } from \"../logger\";\nimport createDataChannel from \"./helpers/createDataChannel\";\nimport createPeerConnection from \"./helpers/createPeerConnection\";\nimport LocalConferenceDescription from \"./localConferenceDescription\";\nimport StreamManager from \"./streamManager\";\nimport { Ssrc } from \"./types\";\n\nexport type CallConnectionInstanceOptions = {\n  streamManager: StreamManager,\n  connection?: RTCPeerConnection,\n  log?: ReturnType<typeof logger>\n};\n\nexport default abstract class CallConnectionInstanceBase {\n  public connection: RTCPeerConnection;\n  public streamManager: StreamManager;\n  public dataChannel: RTCDataChannel;\n  public description: LocalConferenceDescription;\n  public sources: {\n    audio: Ssrc,\n    video?: Ssrc,\n  };\n  protected negotiating: Promise<void>;\n  protected log: ReturnType<typeof logger>;\n\n  constructor(options: CallConnectionInstanceOptions) {\n    safeAssign(this, options);\n\n    if(!this.log) {\n      this.log = this.connection?.log || logger('CALL-CONNECTION-BASE');\n    }\n\n    this.sources = {} as any;\n  }\n\n  public createPeerConnection(config?: RTCConfiguration) {\n    return this.connection || (this.connection = createPeerConnection(config, this.log.bindPrefix('connection')).connection);\n  }\n\n  public createDataChannel(dict?: RTCDataChannelInit) {\n    return this.dataChannel || (this.dataChannel = createDataChannel(this.connection, dict, this.log.bindPrefix('data')));\n  }\n\n  public createDescription() {\n    return this.description || (this.description = new LocalConferenceDescription(this.connection));\n  }\n\n  public appendStreamToConference() {\n    return this.streamManager.appendToConference(this.description);\n  }\n\n  public closeConnection() {\n    const {connection} = this;\n    if(!connection) {\n      return;\n    }\n\n    try {\n      connection.log('close');\n      connection.close();\n    } catch(e) {\n      this.log.error(e);\n    }\n  }\n\n  public closeConnectionAndStream(stopStream: boolean) {\n    this.closeConnection();\n    stopStream && this.streamManager.stop();\n  }\n\n  protected abstract negotiateInternal(): CallConnectionInstanceBase['negotiating'];\n\n  public negotiate() {\n    let promise = this.negotiating;\n    if(promise) {\n      return promise;\n    }\n\n    return this.negotiating = this.negotiateInternal().finally(() => {\n      this.negotiating = undefined;\n    });\n  }\n\n  public sendDataChannelData(data: any) {\n    if(this.dataChannel.readyState !== 'open') {\n      return;\n    }\n\n    this.dataChannel.send(JSON.stringify(data));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Logger, logger } from \"../../logger\";\n\nexport default function createPeerConnection(config: RTCConfiguration, log?: Logger) {\n  if(!log) {\n    log = logger('RTCPeerConnection');\n  }\n\n  log('constructor');\n\n  // @ts-ignore\n  const connection = new RTCPeerConnection(config);\n  connection.addEventListener('track', (event) => {\n    log('ontrack', event);\n  });\n  connection.addEventListener('signalingstatechange', () => {\n    log('onsignalingstatechange', connection.signalingState);\n  });\n  connection.addEventListener('connectionstatechange', () => {\n    log('onconnectionstatechange', connection.connectionState);\n  });\n  connection.addEventListener('negotiationneeded', () => { // * will be fired every time input device changes\n    log('onnegotiationneeded', connection.signalingState);\n  });\n  connection.addEventListener('icecandidate', (event) => {\n    log('onicecandidate', event);\n  });\n  connection.addEventListener('iceconnectionstatechange', () => {\n    log('oniceconnectionstatechange', connection.iceConnectionState);\n  });\n  connection.addEventListener('datachannel', () => {\n    log('ondatachannel');\n  });\n\n  connection.log = log;\n\n  return {connection};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Logger, logger } from \"../../logger\";\n\nexport default function createDataChannel(connection: RTCPeerConnection, dict?: RTCDataChannelInit, log?: Logger) {\n  // return;\n\n  if(!log) {\n    log = logger('RTCDataChannel');\n  }\n\n  const channel = connection.createDataChannel('data', dict);\n\n  channel.addEventListener('message', (e) => {\n    log('onmessage', e);\n  });\n  channel.addEventListener('open', () => {\n    log('onopen');\n  });\n  channel.addEventListener('close', () => {\n    log('onclose');\n  });\n\n  channel.log = log;\n\n  return channel;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { DataJSON } from \"../../../layer\";\nimport { JoinGroupCallJsonPayload } from \"../../appManagers/appGroupCallsManager\";\nimport SDP from \"../sdp\";\nimport { Ssrc } from \"../types\";\nimport parseMediaSectionInfo from \"./parseMediaSectionInfo\";\n\nexport default function processMediaSection(sdp: SDP, media: SDP['media'][0]) {\n  const sectionInfo = parseMediaSectionInfo(sdp, media);\n\n  const mediaType: Exclude<typeof media['mediaType'], 'application'> = media.mediaType as any;\n  const entry: Ssrc = {\n    source: sectionInfo.source,\n    sourceGroups: sectionInfo.sourceGroups,\n    type: mediaType\n  };\n\n  // do not change this value, otherwise onconnectionstatechange won't fire\n  sectionInfo.fingerprint.setup = 'active';\n  const payload: JoinGroupCallJsonPayload = {\n    fingerprints: [sectionInfo.fingerprint],\n    pwd: sectionInfo.pwd,\n    ssrc: sectionInfo.source,\n    'ssrc-groups': sectionInfo.sourceGroups || [],\n    ufrag: sectionInfo.ufrag\n  };\n  const paramsDataJson = JSON.stringify(payload);\n\n  const params: DataJSON = {\n    _: 'dataJSON',\n    data: paramsDataJson\n  };\n\n  return {\n    params, \n    source: sectionInfo.source, \n    media, \n    sourceGroups: sectionInfo.sourceGroups, \n    entry\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../../helpers/array\";\nimport SDPMediaSection from \"../sdp/mediaSection\";\nimport { UpdateGroupCallConnectionData, Codec } from \"../types\";\n\nexport default function filterServerCodecs(mainChannels: SDPMediaSection[], data: UpdateGroupCallConnectionData) {\n  // ! Need to filter server's extmap for Firefox\n  const performExtmap = (channel: typeof mainChannels[0]) => {\n    const out: {[id: string]: string} = {};\n    const extmap = channel.attributes.get('extmap');\n    extmap.forEach((extmap) => {\n      const id = extmap.key.split('/', 1)[0];\n      out[id] = extmap.value;\n    });\n\n    return out;\n  };\n\n  const codecsToPerform: [Codec, 'audio' | 'video'][] = /* flatten([data, dataPresentation].filter(Boolean).map(data => {\n    return  */['audio' as const, 'video' as const].filter(type => data[type]).map(type => ([data[type], type]));\n  // }));\n\n  codecsToPerform.forEach(([codec, type]) => {\n    const channel = mainChannels.find(line => line.mediaType === type);\n    if(!channel) {\n      return;\n    }\n\n    const extmap = performExtmap(channel);\n    forEachReverse(codec[\"rtp-hdrexts\"], (value, index, arr) => {\n      if(extmap[value.id] !== value.uri) {\n        arr.splice(index, 1);\n        console.log(`[sdp] filtered extmap:`, value, index, type);\n      }\n    });\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport { indexOfAndSplice } from \"../../helpers/array\";\nimport { safeAssign } from \"../../helpers/object\";\nimport throttle from \"../../helpers/schedulers/throttle\";\nimport { GroupCall, GroupCallParticipant, Updates } from \"../../layer\";\nimport apiUpdatesManager from \"../appManagers/apiUpdatesManager\";\nimport appGroupCallsManager, { GroupCallConnectionType, GroupCallId, GroupCallOutputSource } from \"../appManagers/appGroupCallsManager\";\nimport appPeersManager from \"../appManagers/appPeersManager\";\nimport { logger } from \"../logger\";\nimport apiManager from \"../mtproto/apiManager\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport rootScope from \"../rootScope\";\nimport CallInstanceBase, { TryAddTrackOptions } from \"./callInstanceBase\";\nimport GroupCallConnectionInstance from \"./groupCallConnectionInstance\";\nimport GROUP_CALL_STATE from \"./groupCallState\";\nimport getScreenConstraints from \"./helpers/getScreenConstraints\";\nimport getScreenStream from \"./helpers/getScreenStream\";\nimport getStream from \"./helpers/getStream\";\nimport getVideoConstraints from \"./helpers/getVideoConstraints\";\nimport stopTrack from \"./helpers/stopTrack\";\nimport localConferenceDescription from \"./localConferenceDescription\";\nimport { WebRTCLineType } from \"./sdpBuilder\";\nimport StreamManager from \"./streamManager\";\nimport { Ssrc } from \"./types\";\n\nexport default class GroupCallInstance extends CallInstanceBase<{\n  state: (state: GROUP_CALL_STATE) => void,\n  pinned: (source?: GroupCallOutputSource) => void,\n}> {\n  public id: GroupCallId;\n  public chatId: ChatId;\n  public handleUpdateGroupCallParticipants: boolean;\n  public updatingSdp: boolean;\n  public isSpeakingMap: Map<any, any>;\n  public connections: {[k in GroupCallConnectionType]?: GroupCallConnectionInstance};\n  public groupCall: GroupCall;\n  public participant: GroupCallParticipant;\n  \n  // will be set with negotiation\n  public joined: boolean;\n  \n  private pinnedSources: Array<GroupCallOutputSource>;\n  private participantsSsrcs: Map<PeerId, Ssrc[]>;\n  private hadAutoPinnedSources: Set<GroupCallOutputSource>;\n  private dispatchPinnedThrottled: () => void;\n  private startVideoSharingPromise: Promise<void>;\n  private startScreenSharingPromise: Promise<void>;\n\n  constructor(options: {\n    id: GroupCallInstance['id'],\n    chatId: GroupCallInstance['chatId'],\n    isSpeakingMap?: GroupCallInstance['isSpeakingMap'],\n    connections?: GroupCallInstance['connections']\n  }) {\n    super();\n\n    safeAssign(this, options);\n\n    if(!this.log) {\n      this.log = logger('GROUP-CALL');\n    }\n\n    if(!this.connections) {\n      this.connections = {};\n    }\n\n    if(!this.isSpeakingMap) {\n      this.isSpeakingMap = new Map();\n    }\n\n    this.pinnedSources = [];\n    this.participantsSsrcs = new Map();\n    this.hadAutoPinnedSources = new Set();\n    this.dispatchPinnedThrottled = throttle(() => {\n      this.dispatchEvent('pinned', this.pinnedSource);\n    }, 0, false);\n\n    this.addEventListener('state', (state) => {\n      if(state === GROUP_CALL_STATE.CLOSED) {\n        this.cleanup();\n      }\n    });\n  }\n\n  get connectionState() {\n    return this.connections.main.connection.iceConnectionState;\n  }\n\n  get state() {\n    const {connectionState} = this;\n    if(connectionState === 'closed') {\n      return GROUP_CALL_STATE.CLOSED;\n    } else if(connectionState !== 'connected' && (!IS_SAFARI || connectionState !== 'completed')) {\n      return GROUP_CALL_STATE.CONNECTING;\n    } else {\n      const {participant} = this;\n      if(!participant.pFlags.can_self_unmute) {\n        return GROUP_CALL_STATE.MUTED_BY_ADMIN;\n      } else if(participant.pFlags.muted) {\n        return GROUP_CALL_STATE.MUTED;\n      } else {\n        return GROUP_CALL_STATE.UNMUTED;\n      }\n    }\n  }\n\n  get participants() {\n    return appGroupCallsManager.getCachedParticipants(this.id);\n  }\n\n  get isSharingScreen() {\n    return !!this.connections.presentation;\n  }\n\n  get pinnedSource() {\n    return this.pinnedSources[this.pinnedSources.length - 1];\n  }\n\n  public get isMuted() {\n    return this.state !== GROUP_CALL_STATE.UNMUTED;\n  }\n\n  public get isClosing() {\n    const {state} = this;\n    return state === GROUP_CALL_STATE.CLOSED;\n  }\n\n  public get streamManager(): StreamManager {\n    return this.connections.main.streamManager;\n  }\n\n  public get description(): localConferenceDescription {\n    return this.connections.main.description;\n  }\n\n  public pinSource(source: GroupCallOutputSource) {\n    indexOfAndSplice(this.pinnedSources, source);\n    this.pinnedSources.push(source);\n    this.dispatchPinnedThrottled();\n  }\n\n  public unpinSource(source: GroupCallOutputSource) {\n    this.hadAutoPinnedSources.delete(source);\n    indexOfAndSplice(this.pinnedSources, source);\n    this.dispatchPinnedThrottled();\n  }\n\n  public unpinAll() {\n    this.pinnedSources.length = 0;\n    this.dispatchPinnedThrottled();\n  }\n\n  public getParticipantByPeerId(peerId: PeerId) {\n    return NULL_PEER_ID === peerId ? this.participant : this.participants.get(peerId);\n  }\n\n  public toggleMuted() {\n    return this.requestAudioSource(true).then(() => appGroupCallsManager.toggleMuted());\n  }\n\n  public getElement(endpoint: GroupCallOutputSource) {\n    return super.getElement(endpoint);\n  }\n\n  public getVideoElementFromParticipantByType(participant: GroupCallParticipant, type: 'video' | 'presentation') {\n    let source: GroupCallOutputSource;\n    if(participant.pFlags.self) {\n      const connectionType: GroupCallConnectionType = type === 'video' ? 'main' : 'presentation';\n      source = connectionType;\n    } else {\n      const codec = participant[type];\n      source = codec.source_groups[0].sources[0];\n    }\n\n    const element = this.getElement(source) as HTMLVideoElement;\n    if(!element) return;\n\n    const clone = element.cloneNode() as typeof element;\n    clone.srcObject = element.srcObject;\n    clone.setAttribute('playsinline', 'true');\n    clone.muted = true;\n    return {video: clone, source};\n  }\n\n  public createConnectionInstance(options: {\n    streamManager: StreamManager,\n    type: GroupCallConnectionType,\n    options: GroupCallConnectionInstance['options'],\n  }) {\n    return this.connections[options.type] = new GroupCallConnectionInstance({\n      groupCall: this,\n      log: this.log.bindPrefix(options.type),\n      ...options\n    });\n  }\n\n  public changeRaiseHand(raise: boolean) {\n    return appGroupCallsManager.editParticipant(this.id, this.participant, {raiseHand: raise});\n  }\n\n  public async startScreenSharingInternal() {\n    try {\n      const type: GroupCallConnectionType = 'presentation';\n\n      const stream = await getScreenStream(getScreenConstraints());\n      const streamManager = new StreamManager();\n      \n      const connectionInstance = this.createConnectionInstance({\n        streamManager,\n        type,\n        options: {\n          type\n        }\n      });\n      \n      const connection = connectionInstance.createPeerConnection();\n      connection.addEventListener('negotiationneeded', () => {\n        connectionInstance.negotiate();\n      });\n\n      stream.getVideoTracks()[0].addEventListener('ended', () => {\n        if(this.connections.presentation) { // maybe user has stopped screensharing through browser's ui\n          this.stopScreenSharing();\n        }\n      }, {once: true});\n      \n      connectionInstance.createDescription();\n      connectionInstance.addInputVideoStream(stream);\n    } catch(err) {\n      this.log.error('start screen sharing error', err);\n    }\n  }\n\n  public startScreenSharing() {\n    return this.startScreenSharingPromise || (this.startScreenSharingPromise = this.startScreenSharingInternal().finally(() => {\n      this.startScreenSharingPromise = undefined;\n    }));\n  }\n\n  public stopScreenSharing() {\n    const connectionInstance = this.connections.presentation;\n    if(!connectionInstance) {\n      return Promise.resolve();\n    }\n\n    delete this.connections.presentation;\n    this.unpinSource('presentation');\n    connectionInstance.closeConnectionAndStream(true);\n\n    delete this.participant.presentation;\n    appGroupCallsManager.saveApiParticipant(this.id, this.participant);\n\n    return apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: appGroupCallsManager.getGroupCallInput(this.id)\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleScreenSharing() {\n    if(this.isSharingScreen) {\n      return this.stopScreenSharing();\n    } else {\n      return this.startScreenSharing();\n    }\n  }\n\n  public async startVideoSharingInternal() {\n    const constraints: MediaStreamConstraints = {\n      video: getVideoConstraints()\n    };\n\n    try {\n      const stream = await getStream(constraints, false);\n      const connectionInstance = this.connections.main;\n      connectionInstance.addInputVideoStream(stream);\n\n      await appGroupCallsManager.editParticipant(this.id, this.participant, {\n        videoPaused: false,\n        videoStopped: false\n      });\n    } catch(err) {\n      this.log.error('startVideoSharing error', err, constraints);\n    }\n  }\n\n  public startVideoSharing() {\n    return this.startVideoSharingPromise || (this.startVideoSharingPromise = this.startVideoSharingInternal().finally(() => {\n      this.startVideoSharingPromise = undefined;\n    }));\n  }\n\n  public async stopVideoSharing() {\n    const connectionInstance = this.connections.main;\n    const track = connectionInstance.streamManager.inputStream.getVideoTracks()[0];\n    if(!track) {\n      return;\n    }\n\n    stopTrack(track);\n    connectionInstance.streamManager.appendToConference(connectionInstance.description); // clear sender track\n\n    await appGroupCallsManager.editParticipant(this.id, this.participant, {\n      videoStopped: true\n    });\n  }\n\n  public toggleVideoSharing() {\n    if(this.isSharingVideo) {\n      return this.stopVideoSharing();\n    } else {\n      return this.startVideoSharing();\n    }\n  }\n\n  public async hangUp(discard = false, rejoin = false, isDiscarded = false) {\n    for(const type in this.connections) {\n      const connection = this.connections[type as GroupCallConnectionType];\n      connection.closeConnectionAndStream(!rejoin);\n    }\n\n    this.dispatchEvent('state', this.state);\n\n    if(isDiscarded) {\n      return;\n    }\n    \n    if(!rejoin) {\n      let promise: Promise<Updates>;\n      const groupCallInput = appGroupCallsManager.getGroupCallInput(this.id);\n\n      if(discard) {\n        this.log(`[api] discardGroupCall id=${this.id}`);\n        promise = apiManager.invokeApi('phone.discardGroupCall', {\n          call: groupCallInput\n        });\n      } else if(this.joined) {\n        this.log(`[api] leaveGroupCall id=${this.id}`);\n        const connectionInstance = this.connections.main;\n        promise = apiManager.invokeApi('phone.leaveGroupCall', {\n          call: groupCallInput,\n          source: connectionInstance.sources.audio.source\n        });\n      } else {\n        this.log(`[api] id=${this.id} payload=null`);\n        promise = apiManager.invokeApi('phone.joinGroupCall', {\n          call: groupCallInput,\n          join_as: {_: 'inputPeerSelf'},\n          muted: true,\n          video_stopped: true,\n          params: {\n            _: 'dataJSON',\n            data: ''\n          }\n        });\n      }\n\n      const updates = await promise;\n      apiUpdatesManager.processUpdateMessage(updates);\n    }\n  }\n\n  public tryAddTrack(options: Omit<TryAddTrackOptions, 'streamManager'>) {\n    const {description} = this;\n    const source = super.tryAddTrack(options);\n    \n    if(options.type === 'output') {\n      const entry = description.getEntryBySource(+source);\n      const participant = this.participants.get(entry.peerId);\n      if(participant) {\n        rootScope.dispatchEvent('group_call_participant', {groupCallId: this.id, participant});\n      }\n    }\n\n    return source;\n  }\n\n  public onParticipantUpdate(participant: GroupCallParticipant, doNotDispatchParticipantUpdate?: PeerId) {\n    const connectionInstance = this.connections.main;\n    const {connection, description} = connectionInstance;\n\n    const peerId = appPeersManager.getPeerId(participant.peer);\n    const hasLeft = !!participant.pFlags.left;\n    const oldSsrcs = this.participantsSsrcs.get(peerId) || [];\n\n    if(participant.presentation && !hasLeft) {\n      const {source} = appGroupCallsManager.makeSsrcFromParticipant(participant, 'video', participant.presentation.source_groups, participant.presentation.endpoint);\n      if(!this.hadAutoPinnedSources.has(source)) {\n        this.hadAutoPinnedSources.add(source);\n        this.pinSource(participant.pFlags.self ? 'presentation' : source);\n      }\n    }\n\n    if(participant.pFlags.self) {\n      this.participant = participant;\n\n      if(connectionInstance.sources.audio.source !== participant.source) {\n        this.hangUp();\n      }\n\n      let mute = false;\n      if(!participant.pFlags.can_self_unmute) {\n        this.stopScreenSharing();\n        this.stopVideoSharing();\n        mute = true;\n      } else if(participant.pFlags.muted) {\n        mute = true;\n      }\n\n      if(mute) {\n        this.setMuted(true);\n      }\n\n      if(doNotDispatchParticipantUpdate !== peerId) {\n        this.dispatchEvent('state', this.state);\n      }\n\n      return;\n    }\n\n    const ssrcs = hasLeft ? [] : appGroupCallsManager.makeSsrcsFromParticipant(participant);\n\n    if(!hasLeft) {\n      this.participantsSsrcs.set(peerId, ssrcs);\n    } else {\n      this.participantsSsrcs.delete(peerId);\n    }\n\n    // const TEST_OLD = false;\n\n    const modifiedTypes: Set<WebRTCLineType> = new Set();\n    oldSsrcs.forEach(oldSsrc => {\n      const oldSource = oldSsrc.source;\n      const newSsrc = ssrcs.find(ssrc => ssrc.source === oldSource);\n      if(!newSsrc) {\n        this.unpinSource(oldSource);\n\n        const oldEntry = description.getEntryBySource(oldSource);\n        if(oldEntry && oldEntry.direction !== 'inactive') {\n          oldEntry.setDirection('inactive');\n          modifiedTypes.add(oldEntry.type);\n        }\n      }\n    });\n\n    ssrcs.forEach(ssrc => {\n      let entry = description.getEntryBySource(ssrc.source);\n      if(entry) {\n        if(entry.direction === 'inactive') {\n          entry.setDirection(entry.originalDirection);\n          modifiedTypes.add(entry.type);\n        }\n\n        return;\n      }\n\n      entry = description.createEntry(ssrc.type);\n      description.setEntrySource(entry, ssrc.sourceGroups || ssrc.source);\n      description.setEntryPeerId(entry, peerId);\n\n      // if(TEST_OLD) {\n      //   description.bundleMids.push(entry.mid);\n      //   entry.setDirection('recvonly');\n      // } else {\n        ssrc.type === 'video' && entry.setEndpoint(ssrc.endpoint);\n        entry.createTransceiver(connection, {direction: 'recvonly'});\n      // }\n\n      modifiedTypes.add(entry.type);\n    });\n\n    /* if(TEST_OLD) {\n      this.setRemoteOffer({\n        connection,\n        description,\n        ssrcs\n      });\n    } else  */if(modifiedTypes.size) {\n      if(modifiedTypes.has('video')) {\n        connectionInstance.updateConstraints = true;\n      }\n\n      connectionInstance.negotiateThrottled();\n    }\n  }\n}\n","export default function getScreenConstraints(): DisplayMediaStreamConstraints {\n  return {\n   video: {\n      // @ts-ignore\n      // cursor: 'always',\n      width: {max: 1920},\n      height: {max: 1080},\n      frameRate: {max: 30}\n    },\n    audio: true\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport I18n, { i18n, join, LangPackKey } from \"../lib/langPack\";\r\nimport formatDuration, { DurationType } from \"./formatDuration\";\r\n\r\nconst CALL_DURATION_LANG_KEYS: {[type in DurationType]: LangPackKey} = {\r\n  s: 'Seconds',\r\n  m: 'Minutes',\r\n  h: 'Hours',\r\n  d: 'Days',\r\n  w: 'Weeks'\r\n};\r\nexport default function formatCallDuration(duration: number, plain?: boolean) {\r\n  const a = formatDuration(duration, 2);\r\n  if(plain) {\r\n    const strings = a.map(d => I18n.format(CALL_DURATION_LANG_KEYS[d.type], true, [d.duration]));\r\n    return join(strings, false, plain);\r\n  }\r\n\r\n  const elements = a.map(d => i18n(CALL_DURATION_LANG_KEYS[d.type], [d.duration]));\r\n\r\n  const fragment = document.createElement('span');\r\n  fragment.append(...join(elements, false));\r\n\r\n  return fragment;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type DurationType = 's' | 'm' | 'h' | 'd' | 'w';\r\nexport default function formatDuration(duration: number, showLast = 2) {\r\n  if(!duration) {\r\n    duration = 1;\r\n  }\r\n\r\n  let d: {duration: number, type: DurationType}[] = [];\r\n  const p = [\r\n    {m: 1, t: 's'},\r\n    {m: 60, t: 'm'}, \r\n    {m: 60, t: 'h'}, \r\n    {m: 24, t: 'd'}, \r\n    {m: 7, t: 'w'}\r\n  ] as Array<{m?: number, t: DurationType}>\r\n  const s = 1;\r\n  let t = s;\r\n  p.forEach((o, idx) => {\r\n    t *= o.m;\r\n\r\n    if(duration < t) {\r\n      return;\r\n    }\r\n\r\n    const modulus = p[idx === (p.length - 1) ? idx : idx + 1].m;\r\n    d.push({\r\n      duration: (duration / t % modulus | 0),\r\n      type: o.t\r\n    });\r\n  });\r\n\r\n  const out = d.slice(-showLast).reverse();\r\n  for(let i = out.length - 1; i >= 0; --i) {\r\n    if(out[i].duration === 0) {\r\n      out.splice(i, 1);\r\n    }\r\n  }\r\n  \r\n  return out;\r\n}\r\n","import { IS_APPLE_MOBILE, IS_SAFARI } from \"./userAgent\";\n\n// mov is not supported in Chrome on macOS\nconst IS_MOV_SUPPORTED = !!document.createElement('video').canPlayType('video/quicktime') || IS_SAFARI || IS_APPLE_MOBILE;\n\nexport default IS_MOV_SUPPORTED;\n","import IS_MOV_SUPPORTED from \"./movSupport\";\n\nconst VIDEO_MIME_TYPES_SUPPORTED = new Set([\n  'image/gif', // have to display it as video\n  'video/mp4',\n  'video/webm'\n]);\n\nif(IS_MOV_SUPPORTED) {\n  VIDEO_MIME_TYPES_SUPPORTED.add('video/quicktime');\n}\n\nexport default VIDEO_MIME_TYPES_SUPPORTED;\n","import constraintSupported, { MyMediaTrackSupportedConstraints } from \"../../../environment/constraintSupport\";\n\nexport default function getAudioConstraints(): MediaTrackConstraints {\n  const constraints: MediaTrackConstraints = {\n    channelCount: 2\n  };\n\n  const desirable: (keyof MyMediaTrackSupportedConstraints)[] = [\n    'noiseSuppression',\n    'echoCancellation',\n    'autoGainControl'\n  ];\n\n  desirable.forEach(constraint => {\n    if(constraintSupported(constraint)) {\n      // @ts-ignore\n      constraints[constraint] = true;\n    }\n  });\n\n  return constraints;\n}\n","export type MyMediaTrackSupportedConstraints = MediaTrackSupportedConstraints & {\n  noiseSuppression?: boolean, \n  autoGainControl?: boolean\n};\n\nexport default function constraintSupported(constraint: keyof MyMediaTrackSupportedConstraints) {\n  return (!!navigator?.mediaDevices?.getSupportedConstraints() as any as MyMediaTrackSupportedConstraints)[constraint];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { IS_FIREFOX } from '../../environment/userAgent';\nimport LocalConferenceDescription, { ConferenceEntry } from './localConferenceDescription';\nimport StringFromLineBuilder from './stringFromLineBuilder';\nimport { GroupCallConnectionTransport, PayloadType, UpdateGroupCallConnectionData } from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type WebRTCLineType = 'video' | 'audio' | 'application';\n\nexport const WEBRTC_MEDIA_PORT = '9';\n\nexport function performCandidate(c: GroupCallConnectionTransport['candidates'][0]) {\n  const arr: string[] = [];\n  arr.push('a=candidate:');\n  arr.push(`${c.foundation} ${c.component} ${c.protocol.toUpperCase()} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`);\n  if(c['rel-addr'] !== undefined) {\n    arr.push(` raddr ${c['rel-addr']} rport ${c['rel-port']}`);\n  }\n  arr.push(` generation ${c.generation}`);\n  return arr.join('');\n}\n\nexport function getConnectionTypeForMediaType(mediaType: WebRTCLineType) {\n  return mediaType === 'application' ? 'DTLS/SCTP' : 'RTP/SAVPF';\n}\n\nexport function generateMediaFirstLine(mediaType: WebRTCLineType, port = WEBRTC_MEDIA_PORT, payloadIds: (string | number)[]) {\n  const connectionType = getConnectionTypeForMediaType(mediaType);\n  return `m=${mediaType} ${port} ${connectionType} ${payloadIds.join(' ')}`;\n}\n\ntype ConferenceData = UpdateGroupCallConnectionData;\n\n// https://tools.ietf.org/id/draft-ietf-rtcweb-sdp-08.html\n// https://datatracker.ietf.org/doc/html/draft-roach-mmusic-unified-plan-00\nexport class SDPBuilder extends StringFromLineBuilder {\n  public addCandidate(c: GroupCallConnectionTransport['candidates'][0]) {\n    return this.add(performCandidate(c));\n  }\n\n  /* public addDataChannel(mid: string, transport: GroupCallConnectionTransport, isAnswer?: boolean) {\n    this.add(\n      'm=application 9 UDP/DTLS/SCTP webrtc-datachannel',\n      'c=IN IP4 0.0.0.0',\n      'a=ice-options:trickle',\n      `a=mid:${mid}`\n    );\n\n    // if(!isAnswer) {\n      this.add('a=sendrecv');\n    // }\n\n    this.addTransport(transport, isAnswer);\n\n    return this.add(\n      'a=sctp-port:5000',\n      'a=max-message-size:262144'\n    );\n  } */\n  \n  public addHeader(sId: string, bundleMids: string[]) {\n    const bundle = bundleMids.join(' ');\n    return this.add(\n      'v=0',                          // version\n      `o=- ${sId} 2 IN IP4 0.0.0.0`,  // sessionId, 2=sessionVersion\n      's=-',                          // name of the session\n      't=0 0',                        // time when session is valid\n      'a=extmap-allow-mixed',\n      `a=group:BUNDLE ${bundle}`,\n      'a=ice-options:trickle',\n      'a=ice-lite',                   // ice-lite: is a minimal version of the ICE specification, intended for servers running on a public IP address.\n      'a=msid-semantic:WMS *'\n    );\n  }\n  \n  public addTransport(transport: GroupCallConnectionTransport, skipCandidates?: boolean) {\n    this.add(\n      `a=ice-ufrag:${transport.ufrag}`,\n      `a=ice-pwd:${transport.pwd}`,\n      'a=ice-options:trickle'           // ! test\n    );\n\n    for(const fingerprint of transport.fingerprints) {\n      this.add(\n        `a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`,\n        `a=setup:${fingerprint.setup}`\n      );\n    }\n\n    if(!skipCandidates && transport.candidates) {\n      for(const candidate of transport.candidates) {\n        this.addCandidate(candidate);\n      }\n    }\n\n    return this;\n  }\n\n  public addSsrc(entry: ConferenceEntry) {\n    let streamName = 'stream';\n    let {type, sourceGroups} = entry;\n\n    // let source = ssrc.source ?? ssrc.sourceGroups[0].sources[0];\n    // source = fromTelegramSource(source);\n    const source = fromTelegramSource(entry.source);\n\n    streamName += source;\n    type += source as any;\n\n    // streamName += mid;\n    // type += mid as any;\n\n    // streamName = type = entry.transceiver.receiver.track.id as any;\n\n    const addMsid = () => {\n      this.add(`a=msid:${streamName} ${type}`);\n    };\n\n    const addSource = (ssrc: number) => {\n      this.add(\n        `a=ssrc:${ssrc} cname:${streamName}`,\n        `a=ssrc:${ssrc} msid:${streamName} ${type}`,\n        `a=ssrc:${ssrc} mslabel:${streamName}`,\n        `a=ssrc:${ssrc} label:${type}`\n      );\n    };\n\n    addMsid();\n    if(sourceGroups?.length) {\n      sourceGroups.forEach(ssrcGroup => {\n        if(ssrcGroup.sources.length) {\n          const sources = ssrcGroup.sources.map(fromTelegramSource);\n          this.add(`a=ssrc-group:${ssrcGroup.semantics} ${sources.join(' ')}`);\n          sources.forEach(addSource);\n        }\n      });\n    } else {\n      addSource(source);\n    }\n  \n    return this;\n  }\n\n  public addSsrcEntry(entry: ConferenceEntry, data: ConferenceData, isAnswer?: boolean) {\n    const add = (...x: string[]) => this.add(...x);\n    \n    const {type, mid, direction, port} = entry;\n    const transport = data.transport;\n\n    /* if(type === 'application') {\n      return this.addDataChannel(mid, transport, isAnswer);\n    } */\n\n    const isApplication = type === 'application';\n    const codec = isApplication ? undefined : data[type];\n\n    const isInactive = direction === 'inactive';\n    if(entry.shouldBeSkipped(isAnswer)) {\n      return add(\n        `m=${type} 0 ${getConnectionTypeForMediaType(type)} 0`,\n        `c=IN IP4 0.0.0.0`,\n        `a=inactive`,\n        `a=mid:${mid}`\n      );\n    }\n    \n    const payloadTypes = !isApplication ? codec['payload-types'] : [{id: 5000} as PayloadType];\n    const ids = payloadTypes.map(type => type.id);\n    add(\n      generateMediaFirstLine(type, port, ids),\n      'c=IN IP4 0.0.0.0',\n      `a=rtcp:${port} IN IP4 0.0.0.0`,\n    );\n\n    if(transport['rtcp-mux']) {\n      add('a=rtcp-mux');\n    }\n\n    add(`a=mid:${mid}`);\n    /* if(type === 'video') {\n      add('b=AS:2500');\n    } */\n\n    let setDirection = direction;\n    if(direction !== 'sendrecv' && isAnswer && !(isInactive || isApplication)) {\n      setDirection = direction === 'sendonly' ? 'recvonly' : 'sendonly';\n    }\n\n    // a=bundle-only\n    add(`a=${setDirection}`);\n    \n    // this.addTransport(transport, isAnswer);\n    this.addTransport(transport);\n\n    if(!isApplication) {\n      const hdrexts = codec['rtp-hdrexts'];\n      if(hdrexts?.length) {\n        hdrexts.forEach(hdrext => {\n          add(`a=extmap:${hdrext.id} ${hdrext.uri}`);\n        });\n      }\n  \n      payloadTypes.forEach(type => {\n        add(`a=rtpmap:${type.id} ${type.name}/${type.clockrate}${type.channels && type.channels > 1 ? `/${type.channels}` : ''}`);\n  \n        const parameters = type.parameters;\n        if(Array.isArray(parameters)) {\n          if(parameters.length) {\n            console.error('parameters is array???', parameters);\n          }\n        } else if(parameters && Object.keys(parameters).length) {\n          const p: string[] = [];\n          for(const i in parameters) {\n            p.push(`${i}=${parameters[i]}`);\n          }\n          add(`a=fmtp:${type.id} ${p.join(';')}`);\n        }\n  \n        const fbs = type['rtcp-fbs'];\n        if(fbs?.length) {\n          fbs.forEach(fb => {\n            add(`a=rtcp-fb:${type.id} ${fb.type}${fb.subtype ? ' ' + fb.subtype : ''}`);\n          });\n        }\n      });\n    } else {\n      add(`a=sctpmap:${payloadTypes[0].id} webrtc-datachannel 256`);\n    }\n\n    if(entry.source && (setDirection === 'sendonly' || setDirection === 'sendrecv')) {\n      this.addSsrc(entry);\n    }\n\n    return this;\n  }\n  \n  public addConference(options: {\n    conference: LocalConferenceDescription, \n    bundle: string[],\n    entries: ConferenceEntry[],\n    isAnswer?: boolean, \n  }) {\n    const {conference, entries, bundle, isAnswer} = options;\n    this.addHeader(conference.sessionId, bundle);\n\n    if(IS_FIREFOX) {\n      this.addTransport(conference.transport); // support Firefox\n    }\n\n    for(const entry of entries) {\n      // this.addSsrcEntry(entry, conference, isAnswer);\n      this.addSsrcEntry((isAnswer ? entry.recvEntry || entry.sendEntry : entry.sendEntry || entry.recvEntry) || entry, conference, isAnswer);\n    }\n\n    return this;\n  }\n  \n  public static fromConference(options: Parameters<SDPBuilder['addConference']>[0]) {\n    return new SDPBuilder().addConference(options).finalize();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nexport default class StringFromLineBuilder {\n  private lines: string[] = [];\n  private newLine: string[] = [];\n\n  constructor(private joiner = '\\r\\n') {\n\n  }\n\n  public add(...strs: string[]) {\n    this.lines.push(...strs);\n    return this;\n  }\n\n  public push(word: string) {\n    this.newLine.push(word);\n    return this;\n  }\n  \n  public addJoined(separator = '') {\n    this.add(this.newLine.join(separator));\n    this.newLine = [];\n    return this;\n  }\n\n  public join() {\n    return this.lines.join(this.joiner);\n  }\n\n  public finalize() {\n    return this.join() + this.joiner;\n  }\n}\n"],"sourceRoot":""}