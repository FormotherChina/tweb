{"version":3,"sources":["webpack:///./src/helpers/cleanUsername.ts","webpack:///./src/lib/appManagers/appUsersManager.ts","webpack:///./src/lib/storages/dialogs.ts","webpack:///./src/lib/storages/filters.ts","webpack:///./src/lib/appManagers/appMessagesManager.ts","webpack:///./src/lib/appManagers/appPeersManager.ts","webpack:///./src/lib/appManagers/appChatsManager.ts","webpack:///./src/components/peerTitle.ts","webpack:///./src/lib/appManagers/appPhotosManager.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/lib/appManagers/apiUpdatesManager.ts","webpack:///./src/lib/appManagers/appDocsManager.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/lib/appManagers/appProfileManager.ts","webpack:///./src/components/visibilityIntersector.ts","webpack:///./src/components/lazyLoadQueue.ts","webpack:///./src/lib/mtproto/bin_utils.ts","webpack:///./src/helpers/windowSize.ts","webpack:///./src/helpers/dom/htmlToSpan.ts","webpack:///./src/lib/appManagers/appNotificationsManager.ts","webpack:///./src/helpers/dom/renderImageFromUrl.ts","webpack:///./src/helpers/assumeType.ts","webpack:///./src/lib/appManagers/appMessagesIdsManager.ts","webpack:///./src/components/preloader.ts","webpack:///./src/helpers/files.ts","webpack:///./src/vendor/leemon.ts","webpack:///./src/lib/appManagers/appAvatarsManager.ts","webpack:///./src/helpers/middleware.ts","webpack:///./src/lib/calls/groupCallState.ts","webpack:///./src/lib/searchIndex.ts","webpack:///./src/components/middleEllipsis.ts","webpack:///./src/lib/appManagers/appDraftsManager.ts","webpack:///./src/helpers/audioAssetPlayer.ts","webpack:///./src/lib/appManagers/appGroupCallsManager.ts","webpack:///./src/lib/calls/helpers/createMainStreamManager.ts","webpack:///./src/helpers/cleanSearchText.ts","webpack:///./src/helpers/slicedArray.ts","webpack:///./src/lib/appManagers/appPollsManager.ts","webpack:///./src/lib/calls/utils.ts","webpack:///./src/lib/calls/localConferenceDescription.ts","webpack:///./src/helpers/heavyQueue.ts","webpack:///./src/helpers/blur.ts","webpack:///./src/lib/mtproto/referenceDatabase.ts","webpack:///./src/helpers/dom/htmlToDocumentFragment.ts","webpack:///./src/lib/mtproto/connectionStatus.ts","webpack:///./src/lib/calls/helpers/getStream.ts","webpack:///./src/lib/calls/helpers/getVideoConstraints.ts","webpack:///./src/lib/calls/streamManager.ts","webpack:///./src/lib/opusDecodeController.ts","webpack:///./src/lib/appManagers/appWebPagesManager.ts","webpack:///./src/environment/imageMimeTypesSupport.ts","webpack:///./src/lib/calls/constants.ts","webpack:///./src/lib/calls/helpers/stopTrack.ts","webpack:///./src/lib/mtproto/schema.ts","webpack:///./src/lib/crypto/crypto_utils.ts","webpack:///./src/lib/mtproto/tl_utils.ts","webpack:///./src/lib/crypto/srp.ts","webpack:///./src/lib/crypto/cryptoworker.ts","webpack:///./src/lib/mtproto/timeManager.ts","webpack:///./src/lib/mtproto/transports/obfuscation.ts","webpack:///./src/lib/mtproto/transports/intermediate.ts","webpack:///./src/lib/mtproto/transports/tcpObfuscated.ts","webpack:///./src/lib/mtproto/transports/socketProxied.ts","webpack:///./src/lib/mtproto/dcConfigurator.ts","webpack:///./src/lib/mtproto/transports/controller.ts","webpack:///./src/lib/mtproto/transports/http.ts","webpack:///./src/lib/mtproto/networker.ts","webpack:///./src/lib/mtproto/networkerFactory.ts","webpack:///./src/lib/mtproto/rsaKeysManager.ts","webpack:///./src/lib/mtproto/authorizer.ts","webpack:///./src/lib/mtproto/apiManager.ts","webpack:///./src/lib/calls/helpers/getScreenStream.ts","webpack:///./src/lib/calls/helpers/getStreamCached.ts","webpack:///./src/lib/calls/callInstanceBase.ts","webpack:///./src/lib/calls/sdp/index.ts","webpack:///./src/helpers/string/splitStringByLimitWithRest.ts","webpack:///./src/helpers/uniqueNumberGenerator.ts","webpack:///./src/lib/calls/sdp/attributeSplitted.ts","webpack:///./src/lib/calls/sdp/mediaLineParts.ts","webpack:///./src/lib/calls/sdp/line.ts","webpack:///./src/lib/calls/sdp/attributeInner.ts","webpack:///./src/lib/calls/sdp/attributes.ts","webpack:///./src/lib/calls/sdp/mediaSection.ts","webpack:///./src/lib/calls/sdp/sessionSection.ts","webpack:///./src/lib/calls/sdp/utils.ts","webpack:///./src/lib/calls/helpers/parseMediaSectionInfo.ts","webpack:///./src/lib/calls/helpers/parseSourceGroups.ts","webpack:///./src/lib/calls/helpers/fixLocalOffer.ts","webpack:///./src/lib/calls/groupCallConnectionInstance.ts","webpack:///./src/lib/calls/callConnectionInstanceBase.ts","webpack:///./src/lib/calls/helpers/createPeerConnection.ts","webpack:///./src/lib/calls/helpers/createDataChannel.ts","webpack:///./src/lib/calls/helpers/processMediaSection.ts","webpack:///./src/lib/calls/helpers/filterServerCodecs.ts","webpack:///./src/lib/calls/groupCallInstance.ts","webpack:///./src/lib/calls/helpers/getScreenConstraints.ts","webpack:///./src/helpers/formatCallDuration.ts","webpack:///./src/helpers/formatDuration.ts","webpack:///./src/environment/movSupport.ts","webpack:///./src/environment/videoMimeTypesSupport.ts","webpack:///./src/lib/calls/helpers/getAudioConstraints.ts","webpack:///./src/environment/constraintSupport.ts","webpack:///./src/lib/calls/sdpBuilder.ts","webpack:///./src/lib/calls/stringFromLineBuilder.ts"],"names":["cleanUsername","username","toLowerCase","appUsersManager","storage","appStateManager","storages","users","updateUsersStatuses","timestampNow","i","this","user","updateUserStatus","clear","setInterval","rootScope","addEventListener","addMultipleEventsListeners","update","userId","user_id","status","expires","serverTimeManager","serverTimeOffset","was_online","dispatchEvent","setUserToStateIfNeeded","updateUserPhoto","photo","photo_id","forceUserOnline","date","_","toPeerId","console","warn","updateUserName","saveApiUser","Object","assign","first_name","last_name","e","getSelf","id","contactsIndex","indexObject","getUserSearchText","getState","then","state","storagesResults","length","contactsList","Array","isArray","forEach","pushContact","contactsFillPromise","resolve","peerId","appPeersManager","isUser","toUserId","getFromCache","set","getUser","delete","init","usernames","isPeerNeeded","findAndSplice","getTopPeersPromises","createSearchIndex","undefined","Set","updatedContactsList","pushToState","cached","isFulfilled","promise","invokeApi","result","saveApiUsers","contacts","contact","onContactsModified","slice","Promise","resolvedPeer","appChatsManager","saveApiChats","chats","getPeer","getPeerId","peer","add","requestPeerSingle","releaseSinglePeer","phone","pFlags","self","format","filter","Boolean","join","query","includeSaved","sortBy","fillContacts","_contactsList","results","search","has","sort","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","myId","testSelfSearch","unshift","getContacts","userIds","map","block","invokeApiSingle","getInputPeerById","value","apiUpdatesManager","processLocalUpdate","peer_id","getOutputPeer","blocked","index","clearBadChars","ignoreCase","latinize","includeTag","apiUsers","override","saved","oldUser","min","oldSearchUsername","searchUsername","initials","fullName","deleted","cleanSearchText","getAbbreviation","changedPhoto","changedTitle","wasContact","newContact","onContactUpdated","formatPhoneNumber","formatted","access_hash","key","args","isBot","support","today","Date","diff","getTime","getDate","dateEl","timeEl","bot","isRegularUser","isContact","allowMin","phone_number","vcard","eventTimestamp","timestamp","updatesState","syncLoading","importContacts","phones","error","Error","type","inputContacts","j","push","client_id","toString","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","now","peers","offset","limit","hash","topPeers","categories","topPeer","requestPeer","rating","contactsBlocked","count","peerIds","u","concat","c","invokeApiCacheable","q","cacheSeconds","my_results","p","curIsContact","popContact","offline","showPhone","getUserInput","add_phone_privacy_exception","updates","processUpdateMessage","appMessagesManager","appDraftsManager","appNotificationsManager","appMessagesIdsManager","folders","onUpdateFolderPeers","folder_peers","folderPeer","folder_id","dialog","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","folderId","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","pinnedOrders","reverse","newPinned","dialogs","getFolderDialogs","dialogsResult","applyDialogs","d","getCache","peerText","getPeerSearchText","dialogsIndex","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","indexKey","orderIndex","chatId","chat","getChat","left","dropDialogOnDeletion","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","allDialogsLoaded","loaded","0","1","setDialogsLoaded","savePinnedOrders","dialogsOffsetDate","dialogsNum","cachedResults","offsetDate","Math","getOffsetDate","unreadMessagesCount","unreadDialogsCount","skipMigrated","folder","getFolder","migratedTo","filtersStorage","testDialogForFilter","pinnedIndex","pinnedPeerIds","indexOf","generateDialogIndex","generateDialogPinnedDateByIndex","pinned_peers","skipped","isPinned","filters","getDialogIndexKey","wasIndex","findIndex","wasDialog","wasDialogIndex","newDialogIndex","setDialogIndexInFilter","prepareFolderUnreadCountModifyingByDialog","splice","callbacks","callback","toggle","wasUnreadCount","getDialogUnreadCount","newUnreadCount","addMessagesCount","addDialogsCount","modifyFolderUnreadCount","max","dispatchUnreadTimeout","ctx","setTimeout","justReturn","message","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","foundIndex","pts","historyStorage","getHistoryStorage","messagesStorage","getMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","fromId","viaBotId","isAnyChat","newPts","getChannelState","ignoreOffsetDate","saveGlobalOffset","pos","setDialogToState","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","isDialogsLoaded","clearDialogFromState","foundDialog","getDialog","wasPinned","keepLocal","dropped","dropDialogWithEvent","idx","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","newUpdatesAfterReloadToHandle","saveUpdate","size","keys","kicked","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","out","isOutgoing","log","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","Bottom","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","settings","notify_settings","addChannelState","getFilter","offsetIndex","ret","promises","fillContactsResult","reloadMissingDialogsPromise","reloadMissingPeerIds","all","getDialogs","realFolderId","curDialogStorage","indexStr","d1","d2","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","onUpdateDialogFilter","saveDialogFilter","onUpdateDialogFilterOrder","setOrderIndex","hasOwnProperty","updateDialogFilter","updateDialogFilters","oldFilters","getDialogFilters","_filterId","find","updateDialogFilterOrder","reloadedPeerIds","excludePeerIds","includes","includePeerIds","exclude_archived","exclude_read","isDialogUnread","exclude_muted","isPeerLocalMuted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","bots","non_contacts","config","pinned_infolder_count_max","reject","prepend","remove","flags","getOutputDialogFilter","bool","f","a","b","filterIncludedPinnedPeers","include_peers","reloadDialogs","inputPeer","reloadPromises","reloadPromise","overwrite","from","to","oldFilter","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","Map","fetchSingleMessagesPromise","maxSeenId","newMessagesHandleTimeout","newMessagesToHandle","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","logger","Debug","Log","Warn","groupedTempId","typings","unreadMentions","goToNextMentionPromises","handleNewMessages","clearTimeout","handleNewDialogs","newMaxSeenId","obj","dialogsStorage","incrementMaxSeenId","handleNotifications","window","_peerId","idle","isIDLE","notifyPeerToHandle","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","peerTypeNotifySettings","notifyAboutMessage","fwdCount","onUpdateMessageId","randomId","random_id","pendingData","tempId","threadId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","threadKey","getThreadKey","split","threadsStorage","good","isInChat","ignoreExisting","pendingMessage","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","first","action","channel_id","top_msg_id","chat_id","handleNewMessage","inboxUnread","releaseUnreadCount","prepareDialogUnreadCountModifying","mentioned","modifyCachedMentions","setDialogTopMessage","notifyPeer","fwd_from","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","grouped_id","onUpdateReadHistory","max_id","read_max_id","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","threadsToReplies","updateMessage","get","replyTo","reply_to","reply_to_top_id","reply_to_msg_id","cancel","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","getMessageById","fixDialogUnreadMentionsIfNoMessage","media_unread","setDialogToStateIfMessageIsTop","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","clearCache","params","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","historiesStorage","onUpdateChannelReload","onUpdateChannelMessageViews","views","onUpdateServiceNotification","messageId","inbox_date","media","entities","hasUser","verified","pts_count","onUpdatePinnedMessages","missingMessages","wrapSingleMessage","finally","werePinned","pinnedMessages","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","scheduledMessagesStorage","isScheduled","onUpdateDeleteScheduledMessages","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getWebPage","drop","poll","appPollsManager","pollToMessages","maxSeenMsgId","middleware","clean","messagesStorageByPeerId","groupedMessagesStorage","searchesStorage","threadsServiceMessagesIdsStorage","sendEntites","entity","callbackName","finalize","deferred","text","options","invokeAfterMessageIsSent","editMessage","parseMarkdown","schedule_date","scheduleDate","is_scheduled","newMedia","getInputEntities","no_webpage","noWebPage","handled","trim","replyToMsgId","MAX_LENGTH","message_length_max","splitted","webPage","sendText","getPeerMigratedTo","generateOutgoingMessage","toggleError","on","send","sentRequestOptions","apiPromise","afterMessageId","invokeApiAfter","query_id","queryId","resultId","clear_draft","clearDraft","silent","wrapMessageEntities","seq","local","beforeMessageSending","file","attachType","apiFileName","fileType","mime_type","fileName","File","name","isDocument","Blob","caption","attributes","isPhoto","document","actionName","isVoiceMessage","attribute","voice","waveform","duration","isMedia","photoSize","w","width","h","height","location","sizes","cacheContext","appDownloadManager","getCacheContext","downloaded","url","objectURL","appPhotosManager","savePhoto","videoAttribute","round_message","isRoundMessage","supports_streaming","noSound","file_name","thumbs","thumb","blob","thumbCacheContext","appDocsManager","saveDoc","preloader","attachMethod","tryAgainOnFail","isUpload","sentDeferred","attachPromise","catch","err","uploaded","cancelPendingMessage","setTyping","uploadPromise","file_reference","inputMedia","load","thumbUploadPromise","upload","notifyAll","done","total","inputFile","force_file","addNotifyListener","progress","percents","floor","isGroupedItem","background","code","files","sendFile","sendFileDetails","groupId","details","o","invoke","multiMedia","multi_media","messageMedia","getMediaInput","doc","inputSingleMedia","inputs","pollId","savePoll","total_voters","recent_voters","getPoll","getPhoto","getDoc","geo","geoPoint","title","address","provider","venue_id","venue_type","postAuthor","signatures","generateFromId","post_author","generateFlags","random","generateReplyHeader","via_bot_id","reply_markup","replyMarkup","replies","generateReplies","pending","replyToTopId","header","channelFull","appProfileManager","chatsFull","linked_chat_id","comments","replies_pts","isAnonymousSending","post","originalMessage","fwdHeader","from_name","channel_post","saved_from_msg_id","saved_from_peer","Number","MAX_SAFE_INTEGER","admin_rights","anonymous","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","noErrorBox","resetPinnedOrder","telegramMeWebManager","setAuthorized","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","fromPeerId","dropCaptions","dropAuthor","newMessages","generateForwardHeader","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","createMessageStorage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","just_clear","revoke","affectedHistory","doFlushHistory","justClear","getHistory","historyResult","getChannelInput","s","m","ss","getPinnedMessage","getSearch","inputFilter","unpin","pm_oneside","unpinAll","unpinAllMessages","totalEntities","foundMessages","getMidsByAlbum","verify","isMessage","reply_to_mid","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","fwdFromId","mediaContext","ttl_seconds","messageKey","getMessageKeyForPendingWebPage","saveWebPage","migrateFrom","migrateTo","suffix","video_sizes","appGroupCallsManager","saveGroupCall","call","video","reason","migrateChecks","saveMessage","apiEntities","fixEmoji","myEntities","parseEntities","mergeEntities","usingMids","plain","highlightWord","withoutMediaType","parts","hasAlbumKey","addPart","langKey","part","el","createElement","innerHTML","append","assumeType","usingFullAlbum","getMidsByMessage","getAlbumText","emoticon","wrapEmojiText","question","rReply","game","stickerEmojiRaw","stickerEmoji","performer","actionWrapped","wrapMessageActionTextNew","replace","match","found","regExp","RegExp","exec","messageWrapped","wrapRichText","noLinebreaks","noLinks","noTextFormat","htmlToDocumentFragment","fragment","createDocumentFragment","senderTitle","classList","fromMe","element","peerTitle","onclick","wrapUrl","href","setAttribute","unsafeMessage","wrapPlainText","langPackKey","getNameDivHTML","getPeerTitle","formatCallDuration","endsWith","wrapJoinVoiceChatAnchor","daysToStart","tomorrowDate","setDate","k","_args","IntlDateElement","day","month","year","t","pinnedMessage","fetchMessageReplyTo","isMessageIsTopMessage","dataset","dir","wrapMessageForReply","htmlToSpan","joined","anchorHTML","domain","langPack","wrapMessageActionTextNewUnsafe","botId","startParam","start_param","inviteToChannel","addChatUser","str","toggleDialogPin","pinned_dialogs_count_max","getPinnedOrders","getDialogPeer","read","hasChat","fromChat","kind","goodMedias","sticker","canMessageBeEdited","edit_time_limit","hasRights","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","canCache","bind","func","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","goodEntities","matchUrl","nextRate","backLimit","minDate","maxDate","filterMessagesByInputFilter","next_rate","offset_id_offset","method","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","getDiscussionMessage","maxMessageId","serviceStartMessage","is_single","msg_id","filterMessages","generateThreadServiceStartMessage","newDialogsHandlePromise","localMessageIds","creator","delete_messages","affectedMessages","force","triedToReadMaxId","readPromise","soundReset","getPeerString","readHistory","slicedArray","Top","fixUnreadMentionsCountIfNeeded","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","msgIds","threadMessage","broadcastEventName","finalizePendingMessage","mute","mute_until","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","downloadOptions","getPhotoDownloadOptions","fakeDownload","getInputFileName","polls","handleReleasingMessage","increment","notification","peerString","notificationMessage","show_previews","tag","peerPhoto","getPeerPhoto","appAvatarsManager","loadAvatar","loadPromise","image","notify","canSendToPeer","isFetchIntervalNeeded","unsetEnd","haveSlice","sliceMe","fulfilled","Both","fillHistoryStorage","constructSlice","offsetIdOffset","topWasMeantToLoad","isBottomEnd","isHistoryResultEnd","requestHistory","oldestMessage","foundSlice","_historyResult","requestPromises","after","getMessagesResult","fetchSingleMessages","replyToPeerId","reply_to_peer_id","typing","timeout","smth","referenceDatabase","deleteContext","deleteWebPageFromPending","updatePollToMessage","groupedId","groupedStorage","albums","peerMessagesToHandle","deletedMids","noforwards","noForwards","DialogColorsFg","DialogColors","DialogColorsMap","newMethod","originMethod","String","prototype","getUserPhoto","getChatPhoto","plainText","onlyFirstName","getUserString","getChatString","isPeerId","charAt","peerParams","substr","isMegagroup","ignorePeerId","getInputPeer","getUserInputPeer","pic","abs","getDialogType","getChatTyped","onChatUpdated","updateChannelParticipant","updateChatDefaultBannedRights","default_banned_rights","apiChats","saveApiChat","oldChat","participants_count","rights","defaultRights","isThread","isCheckingRightsForSelf","megagroup","banned_rights","myFlags","post_messages","broadcast","until_date","getChannelInputPeer","getChatInputPeer","about","input","usersInputs","fwdLimit","fwd_limit","deleteChatUser","leaveChannel","leaveChat","deleteChannel","deleteChat","inputChatPhoto","participant","getParticipantPeerId","actor_id","qts","prev_participant","new_participant","kicked_by","editBanned","view_messages","kickFromChannel","messagesChats","enabled","migrateChat","weakMap","WeakMap","peerTitleWeakMap","querySelectorAll","PeerTitle","AppPhotosManager","photos","context","oldPhoto","saveContext","boxWidth","boxHeight","useBytes","pushDocumentSize","devicePixelRatio","bestPhotoSize","inputUser","photosResult","photoIds","bytes","isSticker","arr","mimeType","Uint8Array","jpegHeader","jpegTail","URL","createObjectURL","path","num","getPreviewURLFromBytes","useBlur","getPreviewURLFromThumb","Image","noZoom","choosePhotoSize","boxSize","aspect","isFit","aspectCovered","style","ignoreCache","getImageFromStrippedThumb","queueId","onlyCache","thumb_size","dcId","dc_id","photoId","fullWidth","fullHeight","download","getDownload","getInput","fullPhotoSize","downloadToDisc","bytesToHex","bytesFromHex","hexString","len","ceil","start","parseInt","bytesToBase64","mod3","nLen","nUint24","nIdx","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","bytesXor","convertToUint8Array","TextEncoder","encode","bufferConcats","reduce","acc","v","byteLength","tmp","lastLength","ArrayBuffer","bytesFromWordss","bytesToWordss","words","Uint32Array","pendingPtsUpdates","pendingSeqUpdates","syncPending","channelStates","attached","debug","processOpts","seqStart","seq_start","forceGetDifference","processUpdate","toId","Proxy","target","saveUpdatesState","us","nextSeq","pendingUpdatesData","popPendingSeqUpdate","seqAwaiting","ptsAwaiting","curState","curPts","goodPts","goodIndex","getDifference","wasSyncing","pts_total_limit","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","justAName","channelState","getChannelDifference","lastPtsUpdateTime","popPts","popSeq","popPendingPtsUpdate","newVersion","stateResult","setUpdatesProcessor","setProxy","fetch","res","ok","EXTENSION_MIME_TYPE_MAP","mov","gif","pdf","docs","savingLottiePreview","downloading","onServiceWorkerFail","supportsStreaming","oldDoc","audioTitle","audioPerformer","alt","stickerset","stickerSetInput","animated","ext","pop","mappedMimeType","monthAsNumber","leadingZero","isServiceWorkerOnline","getFileURL","docId","thumbSize","inputFileLocation","getFileDownloadOptions","preloadPhoto","tryNotToUseBytes","getThumbURL","originalPromise","isPlaySupported","reader","FileReader","onloadend","uint8","decode","readAsArrayBuffer","canvas","toneIndex","stickerCachedThumbs","toBlob","downloadDoc","createDownloadAnchor","addTaskListener","task","payload","AppProfileManager","usersFull","onUpdateUserTyping","typingsInPeer","cancelAction","getChatFull","onUpdatePeerBlocked","userFull","updateChatParticipants","participants","chatFull","updateChatParticipantAdd","_participants","inviter_id","version","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","chat_photo","refreshFullPeer","invalidateChannelParticipants","invokeApiSingleProcess","processResult","usersUserFull","full_user","profile_photo","rAbout","getProfile","getCachedFullUser","getCachedFullChat","getProfileByPeerId","profile","getChannelFull","full_chat","exported_invite","link","exportedInvite","channelParticipant","fullChannel","processError","getChannelParticipants","cP","getTopPeers","ratingMap","processUserIds","updateResult","previous","deletedList","verifyParticipantForOnlineCount","chatInfo","channelParticipants","reduceParticipantsForOnlineCount","onlines","VisibilityIntersector","onVisibilityChange","items","locked","observer","IntersectionObserver","entries","changed","entry","isIntersecting","visible","getVisible","disconnect","targets","observe","unobserve","unlock","refresh","parallelLimit","queue","inProcess","lockPromise","unlockResolve","processQueue","throttle","_processQueue","item","loadItem","shift","getItem","processItem","addElement","super","lock","intersector","unlockAndRefresh","div","intersectorTimeout","wasSeen","setProcessQueueTimeout","_queue","spliced","isObject","object","intToUint","val","longFromInts","high","low","bigInt","sortLongsArray","long","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","randomize","buffer","windowSize","visualViewport","innerWidth","innerHeight","html","span","notificationsShown","notificationIndex","notificationsCount","soundsPlayed","vibrateSupport","navigator","vibrate","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","faviconEl","head","querySelector","titleBackup","titleChanged","stopped","pushInited","updateLocalSettings","updSettings","nodesktop","volume","novibrate","nopreview","nopush","needPush","isAvailable","registeredDevice","subscribe","unsubscribe","setSettings","nosound","notifications","sound","requestPermission","Notification","removeEventListener","mozVibrate","webkitVibrate","notificationsUiSupport","topMessagesDeferred","notifySoundEl","body","stop","newVal","toggleToggler","tokenData","unregisterDevice","registerDevice","once","notificationData","period","custom","enable","resetTitle","setFavicon","clearInterval","titleInterval","getContext","beginPath","arc","PI","fillStyle","fill","fontSize","font","textBaseline","textAlign","fillText","toDataURL","getNotifyPeerTypePromise","inputKey","compare_sound","notifyContactsSignUp","prevFavicon","cloneNode","parentNode","replaceChild","peerNotifySettings","isMuted","respectType","n","notifySettings","inputNotify","typeNotifySettings","getPeerLocalSettings","permission","data","testSound","icon","setLocalNotificationsDisabled","close","focus","onclose","show","hide","nextSoundAt","prevSoundVolume","filename","audio","autoplay","hidePushNotifications","token_type","tokenType","token","tokenValue","other_uids","app_sandbox","secret","loadedURLs","elem","HTMLImageElement","HTMLVideoElement","src","SVGImageElement","setAttributeNS","backgroundImage","renderImageFromUrl","useCache","isImage","loader","renderImageFromUrlPromise","x","AppMessagesIdsManager","tempNum","temp","MESSAGE_ID_OFFSET","MESSAGE_ID_INCREMENT","clearMessageId","toServer","l","used","ProgressivePreloader","detached","cancelable","streamable","onClick","contains","loadFunc","color","bold","constructContainer","construct","totalLength","downloadSvg","lastElementChild","cancelSvg","previousElementSibling","circle","firstElementChild","setProgress","startTime","onEnd","elapsedTime","delay","TRANSITION_TIME","detach","attach","parentElement","setManual","reset","useRafs","getTotalLength","strokeDasharray","createPosterFromMedia","videoWidth","videoHeight","naturalWidth","naturalHeight","mediaSize","quality","aspectFitted","drawImage","createPosterFromVideo","onseeked","currentTime","onerror","createPosterForVideo","preloadVideo","race","onMediaLoad","readyState","HAVE_METADATA","useCanplayOnIos","getFilesFromEvent","onlyTypes","scanFiles","isDirectory","directoryReader","createReader","readEntries","itemFile","getAsFile","DataTransferItem","DragEvent","dataTransfer","clipboardData","originalEvent","webkitGetAsEntry","requestFile","accept","display","click","radix","bpe","mask","digitsStr","buff","one","int2bigInt","s0","s3","s4","s5","s6","s7","sa","eg_u","eg_A","eg_B","eg_C","eg_D","bitSize","z","expand","ans","copy_","mod","dup","mod_","mult","y","copyInt_","linCombShift_","mult_","powMod","powMod_","pow","sub","sub_","add_","eGCD_","g","halve_","greater","equalsInt","negative","multInt_","leftShift_","greaterShift","kx","ky","divide_","r","y1","y2","subShift_","addShift_","rightShift_","modInt","bits","minSize","str2bigInt","base","kk","substring","addInt_","equals","isZero","bigInt2str","divInt_","bigInt2bytes","littleEndian","cmp","ys","multMod_","squareMod_","k1","k2","kn","np","inverseModInt","mont_","ui","ks","savedAvatarURLs","getAvatarPromise","peerPhotoFileLocation","big","img","onlyThumb","renderThumbPromise","thumbImage","animate","animationsEnabled","putAvatar","stripped_thumb","childElementCount","mutateElement","renderPromise","isDialog","getPeerColorById","avatarAvailable","avatarRendered","abbr","getMiddleware","cleanupObj","cleaned","additionalCallback","_cleanupObj","GROUP_CALL_STATE","SearchIndex","minChars","fullTexts","searchText","newFoundObjs","queryWords","queryWordsLength","fullText","what","foundChars","word","fullTextLength","testQueue","fontFamily","timeoutId","setTestQueue","cancelAnimationFrame","requestAnimationFrame","testQueueElements","testElement","capture","passive","mapped","firstTime","textLength","multiplier","textWidth","elementWidth","textContent","fontWeight","getTextWidth","getBoundingClientRect","newElementWidth","widthChanged","smallerText","smallerWidth","smallerTextLength","half","half1","half2","removeAttribute","measureText","MiddleEllipsisElement","HTMLElement","customElements","define","drafts","getAllDraftPromise","updateDraftMessage","peerID","getKey","getAllDrafts","apiDraft","processApiDraft","draft1","draft2","rMessage","wrapDraftText","localDraft","saveOnServer","serverDraft","getDraft","draftsAreEqual","draftObj","isEmptyDraft","saveLocalDraft","combined","syncDraft","AudioAssetPlayer","assets","loop","createAudio","play","Audio","pause","playSound","makeSsrcsFromParticipant","makeSsrcFromParticipant","source","audio_source","source_groups","endpoint","presentation","groupCalls","nextOffsets","updateGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","currentGroupCall","hangUp","audioAsset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","skipCounterUpdating","getCachedParticipants","oldParticipant","hasLeft","muted","can_self_unmute","isCurrentGroupCall","onParticipantUpdate","doNotDispatchParticipantUpdate","getGroupCall","modified","just_joined","apiParticipants","saveApiParticipant","isUpdatingMeInCurrentCall","isSharingAudio","raiseHand","raise_hand_rating","videoStopped","generateSelfVideo","connections","main","sources","setMuted","getGroupCallInput","getInputPeerSelf","raise_hand","video_paused","videoPaused","video_stopped","presentation_paused","presentationPaused","participants_next_offset","oldCall","shouldUpdate","stopConnectingSound","playSoundWithTimeout","stopSound","cancelDelayedPlay","rejoin","joinVideo","streamManager","constraints","getAudioConstraints","getVideoConstraints","stream","getStream","addStream","inputStream","MediaStream","createMainStreamManager","joinGroupCallInternal","bindPrefix","fixSafariAudio","CLOSED","setCurrentGroupCall","getGroupCallFull","connectionInstance","createConnectionInstance","connection","createPeerConnection","startConnectingSound","negotiate","event","onTrack","iceConnectionState","getGroupCallParticipants","values","createDescription","createDataChannel","appendStreamToConference","handleUpdateGroupCallParticipants","updatingSdp","audioSource","sourceGroups","mainSources","presentationSources","tsNow","prepareToSavingNextOffset","ids","groupCallParticipants","next_offset","discard","changeUserMuted","getParticipantByPeerId","editParticipant","badCharsRe","trimRe","clearBadCharsAndTrim","latinizeString","ch","latinizeCh","LatinizeMap","hasTag","processSearchText","SliceEnd","SlicedArray","sliceConstructor","getSliceConstructor","slices","end","None","side","deleteCount","flatten","lowerBound","upperBound","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","prevSlice","nextSlice","sliceOffset","findSliceOffset","sliceStart","sliceEnd","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","updateMessagePoll","poll_id","saveResults","rQuestion","chosenIndexes","answer","chosen","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","optionIds","answers","option","sendVote","votesList","closed","newPoll","getInputMediaPoll","toTelegramSource","fromTelegramSource","getAmplitude","array","scale","rms","sqrt","ConferenceEntry","port","direction","originalDirection","setDirection","transceiver","addTransceiver","isAnswer","generateSsrc","LocalConferenceDescription","sessionId","entriesByMid","entriesBySource","entriesByPeerId","setSource","setPeerId","isSending","sendEntry","recvEntry","createEntry","fromConference","conference","heavyQueue","processingQueue","addHeavyTask","processHeavyQueue","todo","performance","possiblePromise","process","apply","realResult","timedChunk","isFilterAvailable","requireBlurPromise","fastBlurFunc","processBlurNext","radius","iterations","alpha","default","blurPromises","dataUri","onload","contexts","links","originalPayload","refreshReference","postMessage","reference","getContexts","_context","getReferenceByLink","next","hex","newHex","newContext","template","content","ConnectionStatus","mediaDevices","getUserMedia","getTracks","frameRate","AudioStreamAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","gain","createGain","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","StreamManager","interval","streamAnalyser","track","frequencyBinCount","getByteFrequencyData","analyse","counter","amplitudes","AudioContext","webkitAudioContext","outputStream","canCreateConferenceEntry","addTrack","getSource","itemSource","removeTrack","finalizeAddingTrack","changeTimer","oldTrack","timer","lol","transceiverInit","streams","types","tracks","findEntry","createTransceiver","sender","replaceTrack","opusDecodeController","sampleRate","tasks","keepAlive","isPlaySupportedResult","canPlayType","wavWorker","Worker","page","onTaskEnd","worker","command","buffers","typedArray","loadWorker","loadWavWorker","terminateWorkers","executeNewTask","kill","terminate","decoderSampleRate","outputBufferSampleRate","wavBitDepth","wavSampleRate","pages","withWaveform","pushDecodeTask","dataBlob","photoTypeSet","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","rTitle","contextHashtag","matches","shortDescriptionText","description","rDescription","contextSite","pendingSet","IMAGE_MIME_TYPES_SUPPORTED","GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX","GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS","stopTrack","subtle","crypto","sha1HashSync","digest","sha256HashSync","aesEncryptSync","keyBytes","ivBytes","encryptedBytes","encrypt","aesDecryptSync","decryptedBytes","decrypt","rsaEncrypt","publicKey","N","modulus","E","exponent","X","encryptedBigInt","hash_pbkdf2","salt","importKey","deriveBits","pqPrimeFactorization","pqBytes","lim","P","Q","minLen","it","pqPrimeLeemon","bytesModPow","xBigInt","yBigInt","mBigInt","resBigInt","gzipUncompress","inflate","boolFalse","API","constructors","predicate","boolTrue","vector","gzipPacked","MTProto","maxLength","mtproto","startMaxLength","createBuffer","intView","Int32Array","byteView","resultBuffer","resultInt32","subarray","getArray","typed","resultArray","needBytes","previousBuffer","previousArray","field","checkLength","writeInt","iHigh","iLow","sLong","storeLongP","storeIntBytes","R","Float64Array","sUTF8","unescape","encodeURIComponent","charCodeAt","methodName","methodData","methods","storeInt","flagsOffsets","param","condType","fieldBit","storeObject","paramName","storeLong","storeString","storeBytes","storeDouble","storeBool","itemType","schema","isBare","constructorData","readInt","doubleView","longDec","isSafeInteger","fetchObject","decodeURIComponent","escape","fetchInt","fetchLong","fetchIntBytes","fetchString","fetchBytes","fetchDouble","fetchBool","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","TLDeserialization","TLSerialization","computeSRP","password","isNew","algo","new_algo","current_algo","pw_hash","client_salt","server_salt","invokeCrypto","makePasswordHash","salt1","salt2","padArray","flipper","B","srp_B","pForHash","gForHash","b_for_hash","kHash","k_v","is_good_mod_exp_first","modexp","prime","a_for_hash","secure_random","A","generate_and_check_random","g_b","ux","a_ux","S","K","h1","h2","M1","srp_id","webWorker","taskId","awaiting","utils","timeManager","lastMessageId","timeOffset","sessionStorage","timeTicks","serverTime","localTime","newTimeOffset","server_time_offset","Counter","initialValue","_counter","_remainingCounter","_remainingCounterIndex","_aes","encrypted","Obfuscation","codec","initPayload","val2","reversedPayload","encKey","encIv","decKey","decIv","encNew","decNew","obfuscateTag","Connection","logSuffix","retryTimeout","intermediate","obfuscation","connected","autoReconnect","onOpen","setTransportOpened","networker","setConnectionStatus","Connected","cleanupSent","resend","encoded","encodeBody","releasePending","onMessage","readPacket","parseResponse","response","processMessage","onClose","needTimeout","retryAt","time","lastCloseTime","isNaN","Closed","reconnectTimeout","reconnect","Connecting","bodySent","logTypes","setTransportClosed","setAutoReconnect","toEncode","encodePacket","socketId","socketsProxied","TEST_SUFFIX","test","sslSubdomains","dcOptions","host","chosenServers","transportSocket","connectionType","chosenServer","oooohLetMeLive","transportHTTP","ssl","http","dcOption","transportType","transport","reuse","client","servers","transports","opened","waitForWebSocket","https","dcConfigurator","chooseServer","baseDcId","websocket","httpPromise","_send","websocketPromise","socket","isHttpAvailable","isWebSocketAvailable","destroy","pinging","pingTransports","setTransportValue","mode","arrayBuffer","TextDecoder","setConnected","destroyed","releasing","invokeAfterMsgConstructor","authKey","authKeyId","serverSalt","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResends","nextReq","checkConnectionPeriod","lastResendReq","isOnline","lastResponseTime","activeRequests","checkLongPoll","isClean","longPollPending","isStopped","isFileNetworker","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingId","storeMethod","ping_id","pingMessage","generateId","seq_no","generateSeqNo","getBytes","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","isFileUpload","fileUpload","isFileDownload","fileDownload","updateSession","seqNo","prevSessionId","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","updateSentMessage","notContentRelated","pushMessage","connectionInited","invokeWithLayer","layer","initConnection","userAgent","platform","isMainDomain","language","resultType","isAPI","oldTransport","removeTransport","nextReqTimeout","longPollInterval","changeTransport","forceReconnect","sendingLongPoll","wrapMtpCall","max_delay","wait_after","max_wait","noResponse","longPoll","checkConnectionRetryAt","scheduleRequest","noResponseMsgs","pushResend","shouldResolve","noSchedule","TimedOut","noop","setDrainTimeout","onDrainTimeout","onDrain","willChange","onConnectionStatusChange","innerMsgId","acked","dataWithPadding","msgKeyLargePlain","msgKeyLarge","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","ackMsgIds","wrapMtpMessage","msg_ids","resendMsgIds","resendOpts","req_msg_id","resend_msg_ids","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","messageByteLength","generateContainerMessage","messageWithBody","handleSentEncryptedRequestHTTP","innerMessages","storeRawBytes","getMsgKey","keyIv","getAesKeyIv","encryptedData","dataBuffer","getBuffer","paddingLength","getOffset","getEncryptedMessage","encryptedResult","request","getEncryptedOutput","requestData","baseError","originalError","responseBuffer","deserializer","fetchRawBytes","getDecryptedMessage","calcMsgKey","messageBodyLength","messageBody","mt_message","seqno","stack","setOffset","mt_rpc_result","newServerSalt","bigIntBytes","longToBytes","cb","performScheduledRequest","notEmpty","rawError","error_message","error_code","msg","innerMessage","applyServerSalt","new_server_salt","bad_msg_id","ackMessage","changedOffset","applyServerTime","badMessage","processMessageAck","first_msg_id","updatesProcessor","answer_msg_id","reqResendMessage","badMsgId","networkerFactory","networkers","langPackCode","stoppedNetworkers","langCode","forceReconnectTimeout","testPublicKeysHex","publisKeysHex","publicKeysParsed","prepared","preparePromise","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","prepare","fingerprintHex","foundKey","fingerprint","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","auth","nonce","sendPlainRequest","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","select","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","dc","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","_gABigInt","_dhPrimeBigInt","_two","_twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","getTransportType","_try","sendReqPQ","apiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","afterMessageTempIds","changeTransportType","dcs","oldTransportType","oldObject","newObject","oldGetKey","newGetKey","iterateNetworkers","info","setBaseDcId","userAuth","dcID","getBaseDcId","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","storageKeys","storageResult","logoutPromises","ignoreErrors","closeDatabases","cache","maxNetworkers","generateNetworkerGetKey","ak","authKeyHex","serverSaltHex","authorizer","_error","newTransportType","canRelease","removeNetworker","prepareTempMessageId","cachedNetworker","rejectPromise","logOut","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","stopTime","waitTime","floodMaxTimeout","getScreenStream","getDisplayMedia","getStreamCached","_cache","screen","isScreen","player","elements","hasInputTrackKind","requestInputSource","isAudioGood","isVideoGood","isSharingVideo","getVideoTracks","saveInputVideoStream","onInputStream","cleanup","tryAddTrack","isOutput","tagName","isVideo","elementEndpoint","useStream","paused","srcObject","sinkId","outputDeviceId","setSinkId","appendChild","getAudioTracks","isClosing","appendToConference","SDP","session","mediaSections","lines","line","parsed","section","splitStringByLimitWithRest","separator","UniqueNumberGenerator","maxTries","SDPAttributeSplitted","SDPMediaLineParts","protocol","prefix","missed","rest","nestedMap","makeAttributes","innerParts","fillAttributes","attributesMap","linesArray","mediaLineParts","exists","resultShouldBeArray","SDPSessionSection","parseSdp","createSection","sessionSection","lineStr","isIncorrectSdpLine","parseSdpLine","parseMediaSectionInfo","sdp","clientInfo","lookupAttributeKeys","setup","ssrc","telegramSourceGroups","sdpLines","semantics","parseSourceGroups","raw","ufrag","pwd","fixLocalOffer","offer","hasMunged","skipAddingMulticast","generator","mediaType","originalSsrcs","ssrcs","generate","ssrcs2","ssrcsStrLines","ssrc2","addSimulcast","mediaLine","localMLine","codecIds","sectionInfo","newData","candidates","setPort","newChannel","addSsrcEntry","mungedSdp","RTCPeerConnection","signalingState","connectionState","dict","dataChannel","stopStream","closeConnection","negotiating","negotiateInternal","JSON","stringify","negotiateThrottled","iceServers","iceTransportPolicy","bundlePolicy","rtcpMuxPolicy","iceCandidatePoolSize","maybeUpdateRemoteVideoConstraints","updateConstraintsInterval","localSdp","mainChannels","processedChannels","processed","processMediaSection","audioChannel","videoChannel","useChannel","channels","setEntrySource","setEntryPeerId","parse","groupCallInput","join_as","setData","extmap","performExtmap","uri","filterServerCodecs","isNewConnection","getEntryByMid","originalOffer","createOffer","iceRestart","setLocalDescription","invokeJoinGroupCall","entriesToDelete","bundle","shouldBeSkipped","answerDescription","generateSdp","deleteEntry","iceGatheringState","setRemoteDescription","updateConstraints","colibriClass","defaultConstraints","maxHeight","onStageEndpoints","minHeight","sendDataChannelData","isSpeakingMap","pinnedSources","participantsSsrcs","hadAutoPinnedSources","dispatchPinnedThrottled","pinnedSource","MUTED","UNMUTED","MUTED_BY_ADMIN","CONNECTING","requestAudioSource","toggleMuted","getElement","clone","raise","stopScreenSharing","addInputVideoStream","startScreenSharingPromise","startScreenSharingInternal","unpinSource","closeConnectionAndStream","isSharingScreen","startScreenSharing","startVideoSharingPromise","startVideoSharingInternal","stopVideoSharing","startVideoSharing","isDiscarded","getEntryBySource","oldSsrcs","pinSource","modifiedTypes","oldSsrc","oldSource","oldEntry","setEndpoint","CALL_DURATION_LANG_KEYS","showLast","formatDuration","strings","VIDEO_MIME_TYPES_SUPPORTED","channelCount","constraint","getSupportedConstraints","constraintSupported","WEBRTC_MEDIA_PORT","getConnectionTypeForMediaType","generateMediaFirstLine","payloadIds","joiner","newLine","strs","foundation","component","toUpperCase","priority","ip","generation","performCandidate","sId","bundleMids","skipCandidates","candidate","addCandidate","streamName","addSource","addMsid","ssrcGroup","isApplication","isInactive","payloadTypes","addTransport","hdrexts","hdrext","clockrate","parameters","fbs","fb","subtype","addSsrc","addHeader","addConference"],"mappings":"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","file":"6.420a7836c0ee0f84806b.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { filterUnique, indexOfAndSplice } from \"../../helpers/array\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport cleanSearchText from \"../../helpers/cleanSearchText\";\nimport cleanUsername from \"../../helpers/cleanUsername\";\nimport { formatFullSentTimeRaw, tsNow } from \"../../helpers/date\";\nimport { formatPhoneNumber } from \"../../helpers/formatPhoneNumber\";\nimport { safeReplaceObject, isObject } from \"../../helpers/object\";\nimport { Chat, InputContact, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus } from \"../../layer\";\nimport I18n, { i18n, LangPackKey } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager {\n  private storage = appStateManager.storages.users;\n  \n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n  \n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  constructor() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    rootScope.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= serverTimeManager.serverTimeOffset;\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= serverTimeManager.serverTimeOffset;\n            }\n          }\n\n          //user.sortStatus = this.getUserStatusForSort(user.status);\n          rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } //////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto).photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          rootScope.dispatchEvent('user_update', userId);\n          rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n          \n          this.saveApiUser(Object.assign({}, user, {\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }), true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    appStateManager.getState().then((state) => {\n      const users = appStateManager.storagesResults.users;\n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n          }\n        }\n      }\n\n      const contactsList = state.contactsList;\n      if(contactsList && Array.isArray(contactsList)) {\n        contactsList.forEach(userId => {\n          this.pushContact(userId);\n        });\n\n        if(contactsList.length) {\n          this.contactsFillPromise = deferredPromise();\n          this.contactsFillPromise.resolve(this.contactsList);\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId) => {\n        if(!appPeersManager.isUser(peerId)) {\n          return;\n        }\n        \n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId) => {\n        if(!appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const users = appStateManager.storagesResults.users;\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!appStateManager.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          users.findAndSplice((user) => user.id === userId);\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n    \n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  }\n\n  private onContactsModified() {\n    const contactsList = [...this.contactsList];\n    appStateManager.pushToState('contactsList', contactsList);\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n      \n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified();\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    if(this.usernames[username]) {\n      return Promise.resolve(this.users[this.usernames[username]]);\n    }\n\n    return apiManager.invokeApi('contacts.resolveUsername', {username}).then(resolvedPeer => {\n      this.saveApiUsers(resolvedPeer.users);\n      appChatsManager.saveApiChats(resolvedPeer.chats);\n\n      return appPeersManager.getPeer(appPeersManager.getPeerId(resolvedPeer.peer));\n    });\n  }\n\n  public pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    appStateManager.requestPeerSingle(id.toPeerId(), 'contact');\n  }\n\n  public popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    appStateManager.releaseSinglePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then(_contactsList => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter(id => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = appUsersManager.getUserStatusForSort(appUsersManager.getUser(userId1).status);\n          const status2 = appUsersManager.getUserStatusForSort(appUsersManager.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = rootScope.myId.toUserId();\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0], \n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1], \n    sortBy?: Parameters<AppUsersManager['getContacts']>[2]) {\n    return this.getContacts(query, includeSaved, sortBy).then(userIds => {\n      return userIds.map(userId => userId.toPeerId(false));\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: appPeersManager.getInputPeerById(peerId)\n    }).then(value => {\n      if(value) {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = userId;\n      }\n    }\n\n    if(!oldUser \n      || oldUser.initials === undefined \n      || oldUser.sortName === undefined \n      || oldUser.first_name !== user.first_name \n      || oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);  \n      user.initials = RichTextProcessor.getAbbreviation(fullName);\n    } else {\n      user.sortName = oldUser.sortName;\n      user.initials = oldUser.initials;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= serverTimeManager.serverTimeOffset;\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= serverTimeManager.serverTimeOffset;\n      }\n    }\n\n    //user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      if(user.first_name !== oldUser.first_name \n        || user.last_name !== oldUser.last_name \n        || user.username !== oldUser.username) {\n        changedTitle = true;\n      }\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n        \n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n    }\n\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n    }\n\n    this.setUserToStateIfNeeded(user);\n  }\n\n  public setUserToStateIfNeeded(user: User) {\n    if(appStateManager.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public formatUserPhone(phone: string) {\n    return '+' + formatPhoneNumber(phone).formatted;\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {id, pFlags: {deleted: true}, access_hash: ''} as User;\n  }\n\n  public getSelf() {\n    return this.getUser(rootScope.myId);\n  }\n\n  public getUserStatusString(id: UserId): HTMLElement {\n    let key: LangPackKey;\n    let args: any[];\n\n    switch(id) {\n      case REPLIES_PEER_ID:\n        key = 'Peer.RepliesNotifications';\n        break;\n      case SERVICE_PEER_ID:\n        key = 'Peer.ServiceNotifications';\n        break;\n      default: {\n        if(this.isBot(id)) {\n          key = 'Bot';\n          break;\n        }\n\n        const user = this.getUser(id);\n        if(!user) {\n          key = '' as any;\n          break;\n        }\n\n        if(user.pFlags.support) {\n          key = 'SupportStatus';\n          break;\n        }\n\n        switch(user.status?._) {\n          case 'userStatusRecently': {\n            key = 'Lately';\n            break;\n          }\n    \n          case 'userStatusLastWeek': {\n            key = 'WithinAWeek';\n            break;\n          }\n    \n          case 'userStatusLastMonth': {\n            key = 'WithinAMonth';\n            break;\n          }\n          \n          case 'userStatusOffline': {\n            const date = user.status.was_online;\n            const today = new Date();\n            const now = today.getTime() / 1000 | 0;\n            \n            const diff = now - date;\n            if(diff < 60) {\n              key = 'Peer.Status.justNow';\n            } else if(diff < 3600) {\n              key = 'Peer.Status.minAgo';\n              const c = diff / 60 | 0;\n              args = [c];\n            } else if(diff < 86400 && today.getDate() === new Date(date * 1000).getDate()) {\n              key = 'LastSeen.HoursAgo';\n              const c = diff / 3600 | 0;\n              args = [c];\n            } else {\n              key = 'Peer.Status.LastSeenAt';\n              const {dateEl, timeEl} = formatFullSentTimeRaw(date);\n              args = [dateEl, timeEl];\n            }\n            \n            break;\n          }\n    \n          case 'userStatusOnline': {\n            key = 'Online';\n            break;\n          }\n    \n          default: {\n            key = 'ALongTimeAgo';\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n    \n    return i18n(key, args);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n  \n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id.toPeerId() !== rootScope.myId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public canSendToUser(id: UserId) {\n    const user = this.getUser(id);\n    return !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID;\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputPeerSelf'};\n    }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  public updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  public updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user &&\n      user.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n      \n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then(userIds => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          //console.log(result);\n          this.saveApiUsers(result.users);\n          appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = appPeersManager.getPeerId(topPeer.peer);\n              appStateManager.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n  \n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        appStateManager.pushToState('topPeersCache', state.topPeersCache);\n  \n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then(contactsBlocked => {\n      this.saveApiUsers(contactsBlocked.users);\n      appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map(u => u.id.toPeerId()).concat(contactsBlocked.chats.map(c => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then(results => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map(p => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map(p => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    return apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then(peers => {\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map(p => appPeersManager.getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map(p => appPeersManager.getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map(userId => this.getUserInput(userId))\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach(userId => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n}\n\nconst appUsersManager = new AppUsersManager();\nMOUNT_CLASS_TO.appUsersManager = appUsersManager;\nexport default appUsersManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { Chat, DialogPeer, Message, MessagesPeerDialogs, Update } from \"../../layer\";\nimport type { AppChatsManager } from \"../appManagers/appChatsManager\";\nimport type { AppMessagesManager, Dialog, MyMessage } from \"../appManagers/appMessagesManager\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\nimport type { AppDraftsManager } from \"../appManagers/appDraftsManager\";\nimport type { AppNotificationsManager } from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport type { ServerTimeManager } from \"../mtproto/serverTimeManager\";\nimport type { AppMessagesIdsManager } from \"../appManagers/appMessagesIdsManager\";\nimport { tsNow } from \"../../helpers/date\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport SearchIndex from \"../searchIndex\";\nimport { forEachReverse, indexOfAndSplice, insertInDescendSortedArray } from \"../../helpers/array\";\nimport rootScope from \"../rootScope\";\nimport { defineNotNumerableProperties, safeReplaceObject } from \"../../helpers/object\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\nimport { SliceEnd } from \"../../helpers/slicedArray\";\nimport { MyDialogFilter } from \"./filters\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { NoneToVoidFunction } from \"../../types\";\nimport ctx from \"../../environment/ctx\";\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadDialogsCount: number,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: number = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage {\n  private storage: AppStateManager['storages']['dialogs'];\n  \n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  constructor(\n    private appMessagesManager: AppMessagesManager, \n    private appChatsManager: AppChatsManager, \n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager,\n    private appDraftsManager: AppDraftsManager,\n    private appNotificationsManager: AppNotificationsManager,\n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager,\n    private serverTimeManager: ServerTimeManager,\n    private appMessagesIdsManager: AppMessagesIdsManager\n  ) {\n    this.storage = this.appStateManager.storages.dialogs;\n    this.dialogs = this.storage.getCache();\n    this.clear(true);\n\n    rootScope.addEventListener('language_change', () => {\n      const peerId = appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        for(let i = 0; i <= 10; ++i) {\n          const indexKey = `index_${i}` as ReturnType<DialogsStorage['getDialogIndexKey']>;\n          dialog[indexKey] = undefined;\n        }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    rootScope.addEventListener('filter_update', onFilterUpdate);\n    rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = `index_${filter.orderIndex}` as const;\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n    });\n\n    appStateManager.getState().then((state) => {\n      this.pinnedOrders = state.pinnedOrders || {};\n      if(!this.pinnedOrders[0]) this.pinnedOrders[0] = [];\n      if(!this.pinnedOrders[1]) this.pinnedOrders[1] = [];\n      \n      const dialogs = appStateManager.storagesResults.dialogs;\n      if(dialogs.length) {\n        for(let i = 0, length = dialogs.length; i < length; ++i) {\n          const dialog = dialogs[i];\n          if(dialog) {\n            // if(dialog.peerId !== SERVICE_PEER_ID) {\n              dialog.top_message = this.appMessagesIdsManager.getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n            // }\n\n            if(dialog.topMessage) {\n              this.appMessagesManager.saveMessages([dialog.topMessage]);\n            }\n\n            for(let i = 0; i <= 10; ++i) {\n              // @ts-ignore\n              delete dialog[`index_${i}`];\n            }\n  \n            this.saveDialog(dialog, undefined, true);\n\n            // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n            const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n            if(message.deleted) {\n              this.appMessagesManager.reloadConversation(dialog.peerId);\n            }\n          }\n        }\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n    });\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[0] = loaded;\n      this.allDialogsLoaded[1] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(this.allDialogsLoaded[0] && this.allDialogsLoaded[1]) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear(init = false) {\n    this.pinnedOrders = {\n      0: [],\n      1: []\n    };\n\n    if(!init) {\n      const dialogs = this.appStateManager.storagesResults.dialogs;\n      dialogs.length = 0;\n      this.storage.clear();\n\n      this.setDialogsLoaded(0, false);\n      this.setDialogsLoaded(1, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  }\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId] = [];\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(this.getOffsetDate(0), this.getOffsetDate(1));\n    }\n\n    return offsetDate;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ?? (this.folders[id] = {dialogs: [], id, unreadMessagesCount: 0, unreadDialogsCount: 0});\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter(dialog => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    return this.getFolderDialogs(0, skipMigrated).concat(this.getFolderDialogs(1, skipMigrated));\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<DialogsStorage['getDialogIndexKey']>, filter: MyDialogFilter) {\n    let index: number;\n\n    if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinned_peers.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned) {\n        index = this.generateIndexForDialog(dialog, true);\n      } else {\n        index = dialog.index;\n      }\n    }\n\n    return dialog[indexKey] = index;\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(this.getFolder(0).dialogs, this.getFolder(1).dialogs);\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(let folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.serverTimeManager.serverTimeOffset;\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.appMessagesManager.filtersStorage.filters;\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKey(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex(d => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = wasDialog && wasDialog[indexKey];\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, indexKey, wasIndex);\n    }\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.appMessagesManager.filtersStorage.filters;\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach(callback => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    \n    if(toggle !== undefined) {\n      this.modifyFolderUnreadCount(folderId, toggle ? wasUnreadCount : -wasUnreadCount, wasUnreadCount ? (toggle ? 1 : -1) : 0);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      const addDialogsCount = (newUnreadCount && !wasUnreadCount) || (!newUnreadCount && wasUnreadCount) ? (wasUnreadCount ? -1 : 1) : 0;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, addDialogsCount);\n    };\n  }\n\n  public modifyFolderUnreadCount(folderId: number, addMessagesCount: number, addDialogsCount: number) {\n    if(!addMessagesCount && !addDialogsCount) {\n      return;\n    }\n\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n    \n    if(addDialogsCount) {\n      folder.unreadDialogsCount = Math.max(0, folder.unreadDialogsCount + addDialogsCount);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        rootScope.dispatchEvent('folder_unread', folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn = false, message?: MyMessage) {\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !justReturn) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n      \n      topDate = (message as Message.message).date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n  \n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    dialog.index = index;\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    const foundIndex = order.indexOf(dialog.peerId);\n    let pinnedIndex = foundIndex;\n    if(foundIndex === -1) {\n      pinnedIndex = order.push(dialog.peerId) - 1;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(!message.pFlags.is_outgoing && !message.deleted/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n  \n        const fromId = message.viaBotId || message.fromId;\n        if(fromId !== peerId) {\n          this.appStateManager.requestPeerSingle(fromId, 'topMessage', peerId);\n        }\n  \n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.appStateManager.requestPeerSingle(peerId, 'dialog');\n\n    /* for(let id in this.appMessagesManager.filtersStorage.filters) {\n      const filter = this.appMessagesManager.filtersStorage.filters[id];\n\n      if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n        \n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n    const dialogs = this.getFolderDialogs(folder_id, false);\n    const pos = dialogs.findIndex(d => d.peerId === peerId);\n    if(pos !== -1) {\n      dialogs.splice(pos, 1);\n    }\n    \n    //if(!this.dialogs[peerId]) {\n      this.dialogs[peerId] = dialog;\n      \n      this.setDialogToState(dialog);\n    //}\n\n    if(offsetDate === undefined) {\n      offsetDate = this.getDialogOffsetDate(dialog);\n    }\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.clearDialogFromState(dialog, true);\n          return;\n        }\n  \n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    if(pos === -1) {\n      this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    }\n\n    /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, 'index', pos);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialog(peerId: PeerId): ReturnType<DialogsStorage['getDialog']> {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      delete this.dialogs[peerId];\n\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n      \n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n\n      this.clearDialogFromState(dialog, false);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.appStateManager.releaseSinglePeer(peerId, 'topMessage');\n    this.appStateManager.releaseSinglePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage \n          || (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage).date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage).date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || (dialog.draft && dialog.draft._ === 'draftMessage')) {\n        this.saveDialog(dialog);\n        updatedDialogs[peerId] = dialog;\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(Object.keys(updatedDialogs).length) {\n      rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  public getDialogOffsetDate(dialog: Dialog) {\n    return this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message).date || 0;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? 0, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n    \n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(chat._ === 'channelForbidden' /* || chat._ === 'chatForbidden' */ || (chat as Chat.chat).pFlags.left || (chat as Chat.chat).pFlags.kicked) {\n        return;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);//dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        //return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === this.appMessagesIdsManager.getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n\n    // Because we saved message without dialog present\n    if(message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId, \n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    defineNotNumerableProperties(dialog, [\n      'index_0',\n      'index_1',\n      'index_2',\n      'index_3',\n      'index_4',\n      'index_5',\n      'index_6',\n      'index_7',\n      'index_8',\n      'index_9',\n      'index_10'\n    ]);\n\n    if(wasDialogBefore) {\n      safeReplaceObject(wasDialogBefore, dialog);\n    }\n\n    this.pushDialog(dialog, message.date, ignoreOffsetDate, saveGlobalOffset);\n  }\n\n  public getDialogIndexKey(filterId: number) {\n    const indexStr = filterId > 1 ? \n      `index_${this.appMessagesManager.filtersStorage.getFilter(filterId).orderIndex}` as const : \n      'index' as const;\n\n    return indexStr;\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId = 0, skipMigrated = false): {\n    cached: boolean,\n    promise: Promise<{\n      dialogs: Dialog[],\n      count: number,\n      isTopEnd: boolean,\n      isEnd: boolean\n    }>\n  } {\n    const ret: {\n      cached: boolean,\n      promise: Promise<{\n        dialogs: Dialog[],\n        count: number,\n        isTopEnd: boolean,\n        isEnd: boolean\n      }>\n    } = {} as any;\n\n    if(folderId > 1) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.appMessagesManager.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        ret.cached = false;\n        ret.promise = Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated).promise;\n        });\n\n        return ret;\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId = folderId > 1 || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexStr = this.getDialogIndexKey(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => d2[indexStr] - d1[indexStr]);\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > curDialogStorage[offset][indexStr]) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      ret.cached = true;\n      ret.promise = Promise.resolve({\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || curDialogStorage[0][indexStr] < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      });\n\n      return ret;\n    }\n\n    ret.cached = false;\n    ret.promise = this.appMessagesManager.getTopMessages(limit, realFolderId).then(result => {\n      //const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > curDialogStorage[offset][indexStr]) {\n            break;\n          }\n        }\n      }\n\n      //this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || curDialogStorage[0][indexStr] < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n\n    return ret;\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    //this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? 0;\n    //this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice(p => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    } \n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? 0;\n        \n    const handleOrder = (order: PeerId[]) => {\n      this.pinnedOrders[folderId].length = 0;\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n  \n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n  \n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n      \n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    //this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map(d => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    //this.log('before order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    handleOrder(update.order.map(peer => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { copy, safeReplaceObject } from \"../../helpers/object\";\nimport type { DialogFilter, Update } from \"../../layer\";\nimport type { Modify } from \"../../types\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\n//import type { ApiManagerProxy } from \"../mtproto/mtprotoworker\";\nimport type _rootScope from \"../rootScope\";\nimport type {AppMessagesManager, Dialog} from '../appManagers/appMessagesManager';\nimport type {AppNotificationsManager} from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { forEachReverse } from \"../../helpers/array\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\n\nexport type MyDialogFilter = Modify<DialogFilter, {\n  /* pinned_peers: PeerId[],\n  include_peers: PeerId[],\n  exclude_peers: PeerId[], */\n  pinnedPeerIds: PeerId[],\n  includePeerIds: PeerId[],\n  excludePeerIds: PeerId[]\n}>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'], \n  ['exclude_peers', 'excludePeerIds'], \n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\n// ! because 0 index is 'All Chats'\nconst START_ORDER_INDEX = 1;\n\nexport default class FiltersStorage {\n  public filters: {[filterId: string]: MyDialogFilter};\n  private orderIndex: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  constructor(private appMessagesManager: AppMessagesManager,\n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager, \n    private appNotificationsManager: AppNotificationsManager, \n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager, \n    /* private apiManager: ApiManagerProxy, */ \n    private rootScope: typeof _rootScope) {\n    this.clear(true);\n    this.filters = {};\n\n    this.appStateManager.getState().then((state) => {\n      safeReplaceObject(this.filters, state.filters);\n\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        if(filter.hasOwnProperty('orderIndex') && filter.orderIndex >= this.orderIndex) {\n          this.orderIndex = filter.orderIndex + 1;\n        }\n\n        /* this.appMessagesManager.dialogsStorage.folders[+filterId] = {\n          dialogs: []\n        }; */\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: (update) => {\n        //console.warn('updateDialogFilters', update);\n\n        const oldFilters = copy(this.filters);\n\n        this.getDialogFilters(true).then(filters => {\n          for(const _filterId in oldFilters) {\n            const filterId = +_filterId;\n            if(!filters.find(filter => filter.id === filterId)) { // * deleted\n              this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n            }\n          }\n\n          this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map(filter => filter.id)});\n        });\n      },\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach(arr => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(this.appPeersManager.getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n    } else {\n      this.filters = {};\n      this.reloadedPeerIds = new Set();\n    }\n\n    this.orderIndex = START_ORDER_INDEX;\n  }\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      //this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    //console.log('updateDialogFilterOrder', update);\n\n    this.orderIndex = START_ORDER_INDEX;\n    update.order.forEach((filterId, idx) => {\n      const filter = this.filters[filterId];\n      delete filter.orderIndex;\n      this.setOrderIndex(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', update.order);\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === 1) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n      \n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n      \n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n    \n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= this.rootScope.config.pinned_infolder_count_max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n      \n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n    \n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map(i => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      //console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.orderIndex;\n            f.push(filter);\n          }\n\n          filter.orderIndex = START_ORDER_INDEX;\n\n          const order = f.sort((a, b) => a.orderIndex - b.orderIndex).map(filter => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const promises: Promise<any>[] = [];\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(peers?.length) {\n      const reloadDialogs = peers.filter((inputPeer, idx) => {\n        const peerId = this.appPeersManager.getPeerId(inputPeer);\n        return !this.reloadedPeerIds.has(peerId) && !this.appMessagesManager.getDialogOnly(peerId);\n      });\n\n      if(reloadDialogs.length) {\n        const reloadPromises = reloadDialogs.map(inputPeer => {\n          const peerId = this.appPeersManager.getPeerId(inputPeer);\n          const promise = this.appMessagesManager.reloadConversation(inputPeer);\n          promise.then(() => {\n            this.reloadedPeerIds.add(peerId);\n          });\n          return promise;\n        });\n        const reloadPromise = Promise.all(reloadPromises);\n        promises.push(reloadPromise);\n      }\n    }\n\n    return promises.length ? Promise.all(promises) : undefined;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length && !overwrite) {\n      return keys.map(filterId => this.filters[filterId]).sort((a, b) => a.orderIndex - b.orderIndex);\n    }\n\n    const filters: MyDialogFilter[] = await apiManager.invokeApiSingle('messages.getDialogFilters') as any;\n    for(const filter of filters) {\n      this.saveDialogFilter(filter, overwrite);\n    }\n\n    //console.log(this.filters);\n    return filters;\n  }\n\n  public saveDialogFilter(filter: MyDialogFilter, update = true) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    convertment.forEach(([from, to]) => {\n      filter[to] = filter[from].map((peer) => this.appPeersManager.getPeerId(peer));\n    });\n\n    this.filterIncludedPinnedPeers(filter);\n    \n    filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n    filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n    \n    this.setOrderIndex(filter);\n    \n    if(update) {\n      this.rootScope.dispatchEvent('filter_update', filter);\n    } else if(!oldFilter) {\n      this.rootScope.dispatchEvent('filter_new', filter);\n    }\n  }\n\n  public setOrderIndex(filter: MyDialogFilter) {\n    if(filter.hasOwnProperty('orderIndex')) {\n      if(filter.orderIndex >= this.orderIndex) {\n        this.orderIndex = filter.orderIndex + 1;\n      }\n    } else {\n      filter.orderIndex = this.orderIndex++ as DialogFilter['orderIndex'];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { LazyLoadQueueBase } from \"../../components/lazyLoadQueue\";\nimport ProgressivePreloader from \"../../components/preloader\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport { formatDateAccordingToTodayNew, formatTime, tsNow } from \"../../helpers/date\";\nimport { createPosterForVideo } from \"../../helpers/files\";\nimport { copy, getObjectKeysAndSort } from \"../../helpers/object\";\nimport { randomLong } from \"../../helpers/random\";\nimport { splitStringByLength, limitSymbols, escapeRegExp } from \"../../helpers/string\";\nimport { Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer } from \"../../layer\";\nimport { InvokeApiOptions } from \"../../types\";\nimport I18n, { FormatterArguments, i18n, join, langPack, LangPackKey, UNSUPPORTED_LANG_PACK_KEY, _i18n } from \"../langPack\";\nimport { logger, LogTypes } from \"../logger\";\nimport type { ApiFileManager } from '../mtproto/apiFileManager';\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport DialogsStorage, { GLOBAL_FOLDER_ID } from \"../storages/dialogs\";\nimport FiltersStorage from \"../storages/filters\";\n//import { telegramMeWebService } from \"../mtproto/mtproto\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager, { ChatRights } from \"./appChatsManager\";\nimport appDocsManager, { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager, { MyPhoto } from \"./appPhotosManager\";\nimport appPollsManager from \"./appPollsManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport appWebPagesManager from \"./appWebPagesManager\";\nimport appDraftsManager, { MyDraftMessage } from \"./appDraftsManager\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport appProfileManager from \"./appProfileManager\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport SlicedArray, { Slice, SliceEnd } from \"../../helpers/slicedArray\";\nimport appNotificationsManager, { NotifyOptions } from \"./appNotificationsManager\";\nimport PeerTitle from \"../../components/peerTitle\";\nimport { forEachReverse, indexOfAndSplice } from \"../../helpers/array\";\nimport htmlToDocumentFragment from \"../../helpers/dom/htmlToDocumentFragment\";\nimport htmlToSpan from \"../../helpers/dom/htmlToSpan\";\nimport { MUTE_UNTIL, NULL_PEER_ID, REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport formatCallDuration from \"../../helpers/formatCallDuration\";\nimport appAvatarsManager from \"./appAvatarsManager\";\nimport telegramMeWebManager from \"../mtproto/telegramMeWebManager\";\nimport { getMiddleware } from \"../../helpers/middleware\";\nimport assumeType from \"../../helpers/assumeType\";\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\nimport type { MediaSize } from \"../../helpers/mediaSizes\";\nimport IMAGE_MIME_TYPES_SUPPORTED from \"../../environment/imageMimeTypesSupport\";\nimport VIDEO_MIME_TYPES_SUPPORTED from \"../../environment/videoMimeTypesSupport\";\nimport './appGroupCallsManager';\nimport appGroupCallsManager from \"./appGroupCallsManager\";\n\n//console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: Slice,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty' \n  | 'inputMessagesFilterPhotos' \n  | 'inputMessagesFilterPhotoVideo' \n  | 'inputMessagesFilterVideo' \n  | 'inputMessagesFilterDocument' \n  | 'inputMessagesFilterVoice' \n  | 'inputMessagesFilterRoundVoice' \n  | 'inputMessagesFilterRoundVideo' \n  | 'inputMessagesFilterMusic' \n  | 'inputMessagesFilterUrl' \n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, any>;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\nexport class AppMessagesManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  public groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  public pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  public threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: {\n      peerId: PeerId,\n      tempId: number,\n      threadId: number,\n      storage: MessagesStorage\n    }\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>, \n        callback: (message: any) => Promise<any>\n      }>\n    }\n  } = {};\n  \n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newMessagesHandleTimeout = 0;\n  private newMessagesToHandle: {[peerId: PeerId]: Set<number>} = {};\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: {[peerId: PeerId]: Dialog} = {};\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  public dialogsStorage: DialogsStorage;\n  public filtersStorage: FiltersStorage;\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {type: SendMessageAction['_'], timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<any>} = {};\n\n  constructor() {\n    this.clear();\n\n    rootScope.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => dialog.peerId.isBroadcast();\n      else filterFunc = (dialog) => appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach(dialog => {\n        rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage', \n          webpage: appWebPagesManager.getWebPage(id)\n        };\n\n        rootScope.dispatchEvent('message_edit', {\n          storage,\n          peerId,\n          mid\n        });\n      });\n    });\n\n    rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !appMessagesIdsManager.getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft,\n            index: dialog.index\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n    \n    appStateManager.getState().then(state => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear() {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear();\n    this.filtersStorage && this.filtersStorage.clear();\n  }\n\n  public construct() {\n    this.filtersStorage = new FiltersStorage(this, appPeersManager, appUsersManager, appNotificationsManager, appStateManager, apiUpdatesManager, /* apiManager, */ rootScope);\n    this.dialogsStorage = new DialogsStorage(this, appChatsManager, appPeersManager, appUsersManager, appDraftsManager, appNotificationsManager, appStateManager, apiUpdatesManager, serverTimeManager, appMessagesIdsManager);\n  }\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: any) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        //this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    let entities = options.entities || [];\n    if(text) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return apiManager.invokeApi('messages.editMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n      \n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true\n  }> = {}) {\n    if(!text.trim()) {\n      return;\n    }\n\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const MAX_LENGTH = rootScope.config.message_length_max;\n    if(text.length > MAX_LENGTH) {\n      const splitted = splitStringByLength(text, MAX_LENGTH);\n      text = splitted[0];\n\n      if(splitted.length > 1) {\n        delete options.webPage;\n      }\n\n      for(let i = 1; i < splitted.length; ++i) {\n        setTimeout(() => {\n          this.sendText(peerId, splitted[i], options);\n        }, i);\n      }\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    let entities = options.entities || [];\n    if(!options.viaBotId) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n      //entities = RichTextProcessor.mergeEntities(entities, RichTextProcessor.parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      //this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        //this.log('sendText sent', message.mid);\n        //if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          //assumeType<Updates.updateShortSentMessage>(updates);\n          const newMessage = copy(message);\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n      }, (/* error: any */) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: true,\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      let attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n      \n      photo = appPhotosManager.savePhoto(photo);\n    } else if(VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        }, \n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound && \n        file.size > (10 * 1024) && \n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(document);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = appDownloadManager.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n      \n      document = appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const preloader = isDocument ? undefined : new ProgressivePreloader({\n      attachMethod: 'prepend',\n      tryAgainOnFail: false,\n      isUpload: true\n    });\n\n    const sentDeferred = deferredPromise<InputMedia>();\n\n    if(preloader) {\n      preloader.attachPromise(sentDeferred);\n      sentDeferred.cancel = () => {\n        const error = new Error('Download canceled');\n        error.name = 'AbortError';\n        sentDeferred.reject(error);\n      };\n\n      sentDeferred.catch(err => {\n        if(err.name === 'AbortError' && !uploaded) {\n          this.log('cancelling upload', media);\n\n          this.cancelPendingMessage(message.random_id);\n          this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n          if(uploadPromise?.cancel) {\n            uploadPromise.cancel();\n          }\n        }\n      });\n    }\n\n    const media = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      preloader,\n      photo,\n      document,\n      promise: sentDeferred\n    };\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file \n    } as MessageMedia.messageMediaDocument : media as any;\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['uploadFile']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const {id, access_hash, file_reference} = file as MyDocument;\n\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: {\n            _: 'inputDocument',\n            id,\n            access_hash,\n            file_reference\n          }\n        };\n        \n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n            uploadPromise = appDownloadManager.upload(file);\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL) {\n            thumbUploadPromise = new Promise((resolve, reject) => {\n              const thumbPromise = options.thumb && options.thumb.blob ? Promise.resolve(options.thumb) : createPosterForVideo(options.objectURL);\n              thumbPromise.then(thumb => {\n                if(!thumb) {\n                  resolve(null);\n                } else {\n                  appDownloadManager.upload(thumb.blob).then(resolve, reject);\n                }\n              }, reject);\n            });\n          }\n  \n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            // @ts-ignore\n            delete message.media.preloader;\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto', \n                  file: inputFile,\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument', \n                  file: inputFile, \n                  mime_type: fileType, \n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined,\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n            \n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n  \n          uploadPromise.addNotifyListener((progress: {done: number, total: number}) => {\n            /* if(DEBUG) {\n              this.log('upload progress', progress);\n            } */\n\n            const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n            if(actionName) {\n              this.setTyping(peerId, {_: actionName, progress: percents | 0});\n            }\n            sentDeferred.notifyAll(progress);\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem, \n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then(inputMedia => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft\n        }).then((updates) => {\n          apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n        });\n      });\n    }\n\n    return {message, promise: sentDeferred};\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        groupId,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        //o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      setTimeout(() => {\n        appDraftsManager.clearDraft(peerId, options.threadId);\n      }, 0);\n    }\n    \n    // * test pending\n    //return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft\n          }).then((updates) => {\n            apiUpdatesManager.processUpdateMessage(updates);\n          }, (error) => {\n            messages.forEach(message => toggleError(message, true));\n          });\n        }\n      });\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then(messageMedia => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = appPhotosManager.getMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = appDocsManager.getMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    Promise.all(promises).then(inputs => {\n      invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? appMessagesIdsManager.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n      \n      // @ts-ignore\n      case 'messageMediaPending': {\n        media = inputMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    let toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: true, \n    isScheduled: true, \n    threadId: number, \n    clearDraft: true\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getMessagesStorage(peerId);\n\n    if(options.isScheduled) {\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      setTimeout(() => {\n        rootScope.dispatchEvent('scheduled_new', {peerId, mid: messageId});\n      }, 0);\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      setTimeout(() => {\n        rootScope.dispatchEvent('history_append', {storage, peerId, mid: messageId});\n      }, 0);\n    }\n\n    this.pendingByRandomId[message.random_id] = {\n      peerId, \n      tempId: messageId, \n      threadId: options.threadId, \n      storage\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      setTimeout(() => {\n        if(options.clearDraft) {\n          appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      }, 0);\n    }\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: this.generateFromId(peerId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor, \n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + serverTimeManager.serverTimeOffset),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true,\n    };\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(appPeersManager.isBroadcast(peerId)) {\n      const channelFull = appProfileManager.chatsFull[peerId.toChatId()] as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(peerId.isAnyChat() && (peerId.isBroadcast() || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return appPeersManager.getOutputPeer(appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!appPeersManager.isChannel(peerId) && !appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = appUsersManager.getSelf().id.toPeerId();\n    if(originalMessage.fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.from_id = appPeersManager.getOutputPeer(originalMessage.fromId);\n      fwdHeader.post_author = originalMessage.post_author;\n    }\n\n    if(appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n    \n    // * there is no way to detect whether user profile is hidden\n    if(peerId === myId) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message = {\n      _: 'messageService',\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    } as Message.messageService;\n\n    this.getMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n      \n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = appPeersManager.getPeerId(dialog.peer);\n          const mid = appMessagesIdsManager.generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n        \n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach(dialog => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: number, offsetDate?: number) {\n    //const dialogs = this.dialogsStorage.getFolder(folderId);\n    let offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += serverTimeManager.serverTimeOffset;\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return apiManager.invokeApiSingle('messages.getDialogs', params, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        telegramMeWebManager.setAuthorized(true);\n      }\n\n      appUsersManager.saveApiUsers(dialogsResult.users);\n      appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      /* if(folderId === 0 && !offsetDate) {\n        const found = dialogsResult.dialogs.find(dialog => appPeersManager.getPeerId(dialog.peer) === -1325963535);\n        if(!found) {\n          debugger;\n        }\n      } */\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: {[peerId: PeerId]: Dialog} = {};\n      const setFolderId = folderId === GLOBAL_FOLDER_ID ? 0 : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), dialog => {\n        //const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !appPeersManager.isChannel(dialog.peerId || appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        /* if(dialog.peerId === -1213511294) {\n          this.log.error('lun bot', folderId, d);\n        } */\n\n        if(offsetIndex && dialog.index > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!appMessagesIdsManager.getServerMessageId(dialog.read_inbox_max_id) && !appMessagesIdsManager.getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs[dialog.peerId] = dialog;\n\n          this.log.error('noIdsDialogs', dialog, params);\n\n          /* if(dialog.peerId === -1213511294) {\n            this.log.error('lun bot', folderId);\n          } */\n        }\n      });\n\n      const keys = Object.keys(noIdsDialogs);\n      if(keys.length) {\n        //setTimeout(() => { // test bad situation\n          const peerIds = keys.map(key => key.toPeerId());\n          const promises = peerIds.map(peerId => this.reloadConversation(peerId));\n          Promise.all(promises).then(() => {\n            rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n  \n            for(let i = 0; i < peerIds.length; ++i) {\n              rootScope.dispatchEvent('dialog_unread', {peerId: peerIds[i]});\n            }\n          });\n        //}, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(appMessagesIdsManager.getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */ \n        !count || \n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        rootScope.dispatchEvent('dialogs_multiupdate', {});\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1], \n        count, \n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage: Message.message = this.getMessageByPeer(fromPeerId, mid);\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMessages = mids.map(mid => {\n      const originalMessage: Message.message = this.getMessageByPeer(fromPeerId, mid);\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n\n      const keys: Array<keyof Message.message> = [\n        'entities', \n        'media', \n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      keys.forEach(key => {\n        // @ts-ignore\n        message[key] = originalMessage[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach(message => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach(message => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      random_id: newMessages.map(message => message.random_id),\n      to_peer: appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n    return promise;\n  }\n\n  public generateEmptyMessage(mid: number): Message.messageEmpty {\n    return {\n      _: 'messageEmpty',\n      id: appMessagesIdsManager.getServerMessageId(mid),\n      mid,\n      deleted: true,\n      pFlags: {}\n    };\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage, mid: number) {\n    return storage && storage.get(mid) || this.generateEmptyMessage(mid);\n  }\n\n  private createMessageStorage() {\n    const storage: MessagesStorage = new Map();\n    \n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num, \n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage());\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = appPeersManager.getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const inputDialogPeers: InputDialogPeer[] = [];\n        const promises: {[peerId: string]: typeof promise} = {};\n        for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n          inputDialogPeers.push(inputDialogPeer);\n          promises[peerId] = promise;\n        }\n\n        this.reloadConversationsPeers.clear();\n\n        const fullfillLeft = () => {\n          for(const peerId in promises) {\n            promises[peerId].resolve(undefined);\n          }\n        };\n\n        apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n          this.dialogsStorage.applyDialogs(result);\n\n          result.dialogs.forEach((dialog) => {\n            const peerId = dialog.peerId;\n            if(peerId) {\n              promises[peerId].resolve(dialog as Dialog);\n              delete promises[peerId];\n            }\n          });\n\n          fullfillLeft();\n          resolve();\n        }, (err) => {\n          fullfillLeft();\n          reject(err);\n        }).finally(() => {\n          this.reloadConversationsPromise = null;\n\n          if(this.reloadConversationsPeers.size) {\n            this.reloadConversation();\n          }\n        });\n      }, 0);\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = promise instanceof Promise ? await promise : promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: appChatsManager.getChannelInput(channelId),\n        max_id: appMessagesIdsManager.getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      [\n        this.historiesStorage, \n        this.threadsStorage, \n        this.searchesStorage, \n        this.pinnedMessages,\n        this.pendingAfterMsgs,\n        this.pendingTopMsgs\n      ].forEach(s => {\n        delete s[peerId];\n      });\n\n      const m = this.needSingleMessages.get(peerId);\n      if(m) {\n        m.clear();\n      }\n\n      [\n        this.messagesStorageByPeerId,\n        this.scheduledMessagesStorage\n      ].forEach(s => {\n        const ss = s[peerId];\n        if(ss) {\n          ss.clear();\n        }\n      });\n      \n      if(justClear) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n        \n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  public onPeerDeleted(peerId: number) {\n\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId, \n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then(result => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: appMessagesIdsManager.getServerMessageId(mid)\n    }).then(updates => {\n      //this.log('pinned updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: appPeersManager.getInputPeerById(peerId)\n    }).then(affectedHistory => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if(message.pFlags.pinned) {\n            delete message.pFlags.pinned;\n          }\n        });\n\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    let foundMessages = 0, message: string, totalEntities: MessageEntity[], entities: MessageEntity[];\n    for(const [mid, m] of group) {\n      if(m.message) {\n        if(++foundMessages > 1) break;\n        message = m.message;\n        totalEntities = m.totalEntities;\n        entities = m.entities;\n      }  \n    }\n\n    if(foundMessages > 1) {\n      message = undefined;\n      totalEntities = undefined;\n      entities = undefined;\n    }\n\n    return {message, entities, totalEntities};\n  }\n\n  public getMidsByAlbum(grouped_id: string) {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[grouped_id], 'asc');\n    //return Object.keys(this.groupedMessagesStorage[grouped_id]).map(id => +id).sort((a, b) => a - b);\n  }\n\n  public getMidsByMessage(message: Message.message) {\n    if(message?.grouped_id) return this.getMidsByAlbum(message.grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: any, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if(message.grouped_id) {\n      const storage = this.groupedMessagesStorage[message.grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return appMessagesIdsManager.generateMessageId(dialog?.top_message || 0, true);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if(message.pFlags === undefined) {\n      message.pFlags = {};\n    }\n\n    if(message._ === 'messageEmpty') {\n      message.deleted = true;\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n    \n    const mid = appMessagesIdsManager.generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = new Map());\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out\n        ? 'read_outbox_max_id'\n        : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = appMessagesIdsManager.generateMessageId(message.reply_to.reply_to_msg_id);\n      } \n\n      if(message.reply_to.reply_to_top_id) message.reply_to.reply_to_top_id = appMessagesIdsManager.generateMessageId(message.reply_to.reply_to_top_id);\n    }\n\n    if(isMessage && message.replies) {\n      if(message.replies.max_id) message.replies.max_id = appMessagesIdsManager.generateMessageId(message.replies.max_id);\n      if(message.replies.read_max_id) message.replies.read_max_id = appMessagesIdsManager.generateMessageId(message.replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= serverTimeManager.serverTimeOffset;\n    }\n    \n    //storage.generateIndex(message);\n    const myId = appUsersManager.getSelf().id.toPeerId();\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from as MessageFwdHeader;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      //message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : appPeersManager.getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      //if(peerId === myID) {\n        if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id);\n        if(fwdHeader.channel_post) fwdHeader.channel_post = appMessagesIdsManager.generateMessageId(fwdHeader.channel_post);\n\n        const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n        const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n        if(peer && msgId) {\n          const savedFromPeerId = appPeersManager.getPeerId(peer);\n          const savedFromMid = appMessagesIdsManager.generateMessageId(msgId);\n          message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n        }\n\n        /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= serverTimeManager.serverTimeOffset;\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find(entity => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    }\n\n    if(isMessage && message.media) {\n      switch(message.media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(message.media.ttl_seconds) {\n            message.media = {_: 'messageMediaUnsupported'};\n          } else {\n            message.media.photo = appPhotosManager.savePhoto(message.media.photo, mediaContext);\n          }\n\n          if(!(message.media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n          \n          break;\n        }\n          \n        case 'messageMediaPoll': {\n          const result = appPollsManager.savePoll(message.media.poll, message.media.results, message);\n          message.media.poll = result.poll;\n          message.media.results = result.results;\n          break;\n        }\n          \n        case 'messageMediaDocument': {\n          if(message.media.ttl_seconds) {\n            message.media = {_: 'messageMediaUnsupported'};\n          } else {\n            message.media.document = appDocsManager.saveDoc(message.media.document, mediaContext); // 11.04.2020 warning\n          }\n\n          break;\n        }\n          \n        case 'messageMediaWebPage': {\n          const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          message.media.webpage = appWebPagesManager.saveWebPage(message.media.webpage, messageKey, mediaContext);\n          break;\n        }\n          \n        /*case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          message.media = {_: 'messageMediaUnsupported'};\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          message.message = '';\n          delete message.entities;\n          delete message.totalEntities;\n          break;\n        }\n      }\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      let migrateFrom: PeerId;\n      let migrateTo: PeerId;\n      const suffix = message.fromId === appUsersManager.getSelf().id ? 'You' : '';\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        //case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n        \n        case 'messageActionGroupCall': {\n          //assumeType<MessageAction.messageActionGroupCall>(action);\n\n          appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n          \n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          //apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type = \n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed'\n                  ? 'missed'\n                  : 'cancelled'\n              )\n            );\n          break;\n      }\n      \n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);  \n    }\n\n    storage.set(mid, message);\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if((messages as any).saved) return;\n    (messages as any).saved = true;\n    messages.forEach((message) => {\n      this.saveMessage(message, options);\n    });\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = RichTextProcessor.fixEmoji(message.message, apiEntities);\n\n    const myEntities = RichTextProcessor.parseEntities(message.message);\n    message.totalEntities = RichTextProcessor.mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text: string, usingMids: number[], plain: true, highlightWord?: string, withoutMediaType?: boolean): string;\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text?: string, usingMids?: number[], plain?: false, highlightWord?: string, withoutMediaType?: boolean): DocumentFragment;\n  public wrapMessageForReply(message: MyMessage | MyDraftMessage, text: string = (message as Message.message).message, usingMids?: number[], plain?: boolean, highlightWord?: string, withoutMediaType?: boolean): DocumentFragment | string {\n    const parts: (Node | string)[] = [];\n\n    let hasAlbumKey = false;\n    const addPart = (langKey: LangPackKey, part?: string | HTMLElement) => {\n      if(langKey) {\n        if(part === undefined && hasAlbumKey) {\n          return;\n        }\n        \n        part = plain ? I18n.format(langKey, true) : i18n(langKey);\n      }\n      \n      if(plain) {\n        parts.push(part);\n      } else {\n        const el = document.createElement('i');\n        if(typeof(part) === 'string') el.innerHTML = part;\n        else el.append(part);\n        parts.push(el);\n      }\n    };\n\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      let usingFullAlbum = true;\n      if(message.grouped_id) {\n        if(usingMids) {\n          const mids = this.getMidsByMessage(message);\n          if(usingMids.length === mids.length) {\n            for(const mid of mids) {\n              if(!usingMids.includes(mid)) {\n                usingFullAlbum = false;\n                break;\n              }\n            }\n          } else {\n            usingFullAlbum = false;\n          }\n        }\n\n        if(usingFullAlbum) {\n          text = this.getAlbumText(message.grouped_id).message;\n\n          if(!withoutMediaType) {\n            addPart('AttachAlbum');\n            hasAlbumKey = true;\n          }\n        }\n      } else {\n        usingFullAlbum = false;\n      }\n\n      if((!usingFullAlbum && !withoutMediaType) || !text) {\n        const media = message.media;\n        switch(media._) {\n          case 'messageMediaPhoto':\n            addPart('AttachPhoto');\n            break;\n          case 'messageMediaDice':\n            addPart(undefined, plain ? media.emoticon : RichTextProcessor.wrapEmojiText(media.emoticon));\n            break;\n          case 'messageMediaVenue': {\n            text = media.title;\n            addPart('AttachLocation');\n            break;\n          }\n          case 'messageMediaGeo':\n            addPart('AttachLocation');\n            break;\n          case 'messageMediaGeoLive':\n            addPart('AttachLiveLocation');\n            break;\n          case 'messageMediaPoll':\n            addPart(undefined, plain ? '📊' + ' ' + (media.poll.question || 'poll') : media.poll.rReply);\n            break;\n          case 'messageMediaContact':\n            addPart('AttachContact');\n            break;\n          case 'messageMediaGame': {\n            const prefix = '🎮' + ' ';\n            text = prefix + media.game.title;\n            break;\n          }\n          case 'messageMediaDocument': {\n            const document = media.document as MyDocument;\n  \n            if(document.type === 'video') {\n              addPart('AttachVideo');\n            } else if(document.type === 'voice') {\n              addPart('AttachAudio');\n            } else if(document.type === 'gif') {\n              addPart('AttachGif');\n            } else if(document.type === 'round') {\n              addPart('AttachRound');\n            } else if(document.type === 'sticker') {\n              if(document.stickerEmojiRaw) {\n                addPart(undefined, (plain ? document.stickerEmojiRaw : document.stickerEmoji) + ' ');\n              }\n              \n              addPart('AttachSticker');\n              text = '';\n            } else if(document.type === 'audio') {\n              const attribute = document.attributes.find(attribute => attribute._ === 'documentAttributeAudio' && (attribute.title || attribute.performer)) as DocumentAttribute.documentAttributeAudio;\n              const f = '🎵' + ' ' + (attribute ? [attribute.title, attribute.performer].filter(Boolean).join(' - ') : document.file_name);\n              addPart(undefined, plain ? f : RichTextProcessor.wrapEmojiText(f));\n            } else {\n              addPart(undefined, plain ? document.file_name : RichTextProcessor.wrapEmojiText(document.file_name));\n            }\n  \n            break;\n          }\n\n          case 'messageMediaUnsupported': {\n            addPart(UNSUPPORTED_LANG_PACK_KEY);\n            break;\n          }\n  \n          default:\n            //messageText += media._;\n            ///////this.log.warn('Got unknown media type!', message);\n            break;\n        }\n      }\n\n      const length = parts.length;\n      /* for(let i = 1; i < length; i += 2) {\n        parts.splice(i, 0, ', ');\n      } */\n\n      if(text && length) {\n        parts.push(', ');\n      }\n    }\n\n    if((message as Message.messageService).action) {\n      const actionWrapped = this.wrapMessageActionTextNew((message as Message.messageService), plain);\n      if(actionWrapped) {\n        addPart(undefined, actionWrapped);\n      }\n    }\n\n    if(text) {\n      text = limitSymbols(text, 100);\n\n      if(plain) {\n        parts.push(text);\n      } else {\n        let entities = RichTextProcessor.parseEntities(text.replace(/\\n/g, ' '));\n\n        if(highlightWord) {\n          highlightWord = highlightWord.trim();\n          if(!entities) entities = [];\n          let found = false;\n          let match: any;\n          let regExp = new RegExp(escapeRegExp(highlightWord), 'gi');\n          while((match = regExp.exec(text)) !== null) {\n            entities.push({_: 'messageEntityHighlight', length: highlightWord.length, offset: match.index});\n            found = true;\n          }\n      \n          if(found) {\n            entities.sort((a, b) => a.offset - b.offset);\n          }\n        }\n\n        const messageWrapped = RichTextProcessor.wrapRichText(text, {\n          noLinebreaks: true, \n          entities, \n          noLinks: true,\n          noTextFormat: true\n        });\n  \n        parts.push(htmlToDocumentFragment(messageWrapped) as any);\n      }\n    }\n\n    if(plain) {\n      return parts.join('');\n    } else {\n      const fragment = document.createDocumentFragment();\n      fragment.append(...parts);\n      return fragment;\n    }\n  }\n\n  public wrapSenderToPeer(message: MyMessage) {\n    const senderTitle: HTMLElement = document.createElement('span');\n    senderTitle.classList.add('sender-title');\n    \n    const fromMe = message.fromId === rootScope.myId && message.peerId !== rootScope.myId;\n    senderTitle.append(\n      fromMe ? \n        i18n('FromYou') : \n        new PeerTitle({\n          peerId: message.fromId, \n          dialog: message.peerId === rootScope.myId\n        }).element\n      );\n\n    if(appPeersManager.isAnyGroup(message.peerId) || fromMe) {\n      const peerTitle = new PeerTitle({peerId: message.peerId}).element;\n      senderTitle.append(' ➝ ', peerTitle);\n    }\n\n    return senderTitle;\n  }\n\n  public wrapSentTime(message: MyMessage) {\n    const el: HTMLElement = document.createElement('span');\n    el.classList.add('sent-time');\n    el.append(formatDateAccordingToTodayNew(new Date(message.date * 1000)));\n\n    return el;\n  }\n\n  private wrapJoinVoiceChatAnchor(message: Message.messageService) {\n    const action = message.action as MessageAction.messageActionInviteToGroupCall;\n    const {onclick, url} = RichTextProcessor.wrapUrl(`tg://voicechat?chat_id=${message.peerId.toChatId()}&id=${action.call.id}&access_hash=${action.call.access_hash}`);\n    if(!onclick) {\n      return document.createElement('span');\n    }\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.setAttribute('onclick', onclick + '(this)');\n\n    return a;\n  }\n\n  private wrapMessageActionTextNewUnsafe(message: MyMessage, plain?: boolean) {\n    const element: HTMLElement = plain ? undefined : document.createElement('span');\n    const action = 'action' in message && message.action;\n\n    // this.log('message action:', action);\n\n    if((action as MessageAction.messageActionCustomAction).message) {\n      const unsafeMessage = (action as MessageAction.messageActionCustomAction).message;\n      if(plain) {\n        return RichTextProcessor.wrapPlainText(unsafeMessage);\n      } else {\n        element.innerHTML = RichTextProcessor.wrapRichText(unsafeMessage, {noLinebreaks: true});\n        return element;\n      }\n    } else {\n      let _ = action._;\n      //let suffix = '';\n      let langPackKey: LangPackKey;\n      let args: any[];\n\n      const getNameDivHTML = (peerId: PeerId, plain: boolean) => {\n        return plain ? appPeersManager.getPeerTitle(peerId, plain) : (new PeerTitle({peerId})).element;\n      };\n\n      switch(action._) {\n        case 'messageActionPhoneCall': {\n          _ += '.' + (action as any).type;\n\n          args = [formatCallDuration(action.duration, plain)];\n          break;\n        }\n\n        case 'messageActionGroupCall': {\n          _ += '.' + (action as any).type;\n\n          args = [];\n          if(!_.endsWith('You') && !message.pFlags.post) {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          if(action.duration !== undefined) {\n            args.push(formatCallDuration(action.duration, plain));\n          } else {\n            args.push(this.wrapJoinVoiceChatAnchor(message as any));\n          }\n\n          break;\n        }\n\n        case 'messageActionInviteToGroupCall': {\n          const peerIds = [message.fromId, action.users[0].toPeerId()];\n          let a = 'Chat.Service.VoiceChatInvitation';\n          const myId = appUsersManager.getSelf().id;\n          if(peerIds[0] === myId) a += 'ByYou';\n          else if(peerIds[1] === myId) a += 'ForYou';\n          indexOfAndSplice(peerIds, myId);\n\n          langPackKey = a as LangPackKey;\n          args = peerIds.map(peerId => getNameDivHTML(peerId, plain));\n          args.push(this.wrapJoinVoiceChatAnchor(message as any));\n          break;\n        }\n\n        case 'messageActionGroupCallScheduled': {\n          const today = new Date();\n          const date = new Date(action.schedule_date * 1000);\n          const daysToStart = (date.getTime() - today.getTime()) / 86400e3;\n          const tomorrowDate = new Date(today);\n          tomorrowDate.setDate(tomorrowDate.getDate() + 1);\n\n          const isBroadcast = appPeersManager.isBroadcast(message.peerId);\n          langPackKey = isBroadcast ? 'ChatList.Service.VoiceChatScheduled.Channel' : 'ChatList.Service.VoiceChatScheduled';\n          args = [];\n          const myId = appUsersManager.getSelf().id;\n          if(message.fromId === myId) {\n            langPackKey += 'You';\n          } else if(!isBroadcast) {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          let k: LangPackKey, _args: FormatterArguments = [];\n          if(daysToStart < 1 && date.getDate() === today.getDate()) {\n            k = 'TodayAtFormattedWithToday';\n          } else if(daysToStart < 2 && date.getDate() === tomorrowDate.getDate()) {\n            k = 'Time.TomorrowAt';\n          } else {\n            k = 'formatDateAtTime';\n            _args.push(new I18n.IntlDateElement({\n              date, \n              options: {\n                day: '2-digit',\n                month: '2-digit',\n                year: '2-digit'\n              }\n            }).element);\n          }\n\n          _args.push(formatTime(date));\n          const t = i18n(k, _args);\n          args.push(t);\n\n          break;\n        }\n\n        case 'messageActionChatCreate': {\n          const myId = appUsersManager.getSelf().id;\n          if(message.fromId === myId) {\n            _ += 'You';\n          } else {\n            args = [getNameDivHTML(message.fromId, plain)];\n          }\n          \n          break;\n        }\n\n        case 'messageActionPinMessage': {\n          const peerId = message.peerId;\n          const pinnedMessage = this.getMessageByPeer(peerId, message.reply_to_mid);\n\n          args = [\n            getNameDivHTML(message.fromId, plain),\n          ];\n          \n          if(pinnedMessage.deleted/*  || true */) {\n            langPackKey = 'ActionPinnedNoText';\n\n            if(message.reply_to_mid) { // refresh original message\n              this.fetchMessageReplyTo(message).then(originalMessage => {\n                if(!originalMessage.deleted && !message.deleted) {\n                  rootScope.dispatchEvent('message_edit', {\n                    storage: this.getMessagesStorage(peerId),\n                    peerId: peerId,\n                    mid: message.mid\n                  });\n\n                  if(this.isMessageIsTopMessage(message)) {\n                    rootScope.dispatchEvent('dialogs_multiupdate', {\n                      [peerId]: this.getDialogOnly(peerId)\n                    });\n                  }\n                }\n              });\n            }\n          } else {\n            const a = document.createElement('i');\n            a.dataset.savedFrom = pinnedMessage.peerId + '_' + pinnedMessage.mid;\n            a.dir = 'auto';\n            a.append(this.wrapMessageForReply(pinnedMessage, undefined, undefined, plain as any));\n            args.push(a);\n          }\n\n          break;\n        }\n\n        case 'messageActionContactSignUp':\n        case 'messageActionChatReturn':\n        case 'messageActionChatLeave':\n        case 'messageActionChatJoined':\n        case 'messageActionChatEditPhoto':\n        case 'messageActionChatDeletePhoto':\n        case 'messageActionChatEditVideo':\n        case 'messageActionChatJoinedByLink':\n        case 'messageActionChannelEditVideo':\n        case 'messageActionChannelDeletePhoto': {\n          args = [getNameDivHTML(message.fromId, plain)];\n          break;\n        }\n\n        case 'messageActionChannelEditTitle':\n        case 'messageActionChatEditTitle': {\n          args = [];\n          if(action._ === 'messageActionChatEditTitle') {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          args.push(plain ? action.title : htmlToSpan(RichTextProcessor.wrapEmojiText(action.title)));\n          break;\n        }\n\n        case 'messageActionChatDeleteUser':\n        case 'messageActionChatAddUsers':\n        case 'messageActionChatAddUser': {\n          const users = (action as MessageAction.messageActionChatAddUser).users \n            || [(action as MessageAction.messageActionChatDeleteUser).user_id];\n\n          args = [getNameDivHTML(message.fromId, plain)];\n\n          if(users.length > 1) {\n            const joined = join(\n              users.map((userId: UserId) => getNameDivHTML(userId.toPeerId(), plain)),\n              false,\n              plain\n            );\n            \n            if(plain) {\n              args.push(...joined);\n            } else {\n              const fragment = document.createElement('span');\n              fragment.append(...joined);\n              args.push(fragment);\n            }\n          } else {\n            args.push(getNameDivHTML(users[0].toPeerId(), plain));\n          }\n\n          break;\n        }\n\n        case 'messageActionBotAllowed': {\n          const anchorHTML = RichTextProcessor.wrapRichText(action.domain, {\n            entities: [{\n              _: 'messageEntityUrl',\n              length: action.domain.length,\n              offset: 0\n            }]\n          });\n\n          const node = htmlToSpan(anchorHTML);\n\n          args = [node];\n          break;\n        }\n\n        default:\n          langPackKey = (langPack[_] || `[${action._}]`) as any;\n          break;\n      }\n\n      if(!langPackKey) {\n        langPackKey = langPack[_];\n        if(langPackKey === undefined) {\n          langPackKey = '[' + _ + ']' as any;\n        }\n      }\n\n      if(plain) {\n        return I18n.format(langPackKey, true, args);\n      } else {\n        return _i18n(element, langPackKey, args);\n      }\n\n      //str = !langPackKey || langPackKey[0].toUpperCase() === langPackKey[0] ? langPackKey : getNameDivHTML(message.fromId) + langPackKey + (suffix ? ' ' : '');\n    }\n  }\n\n  public wrapMessageActionTextNew(message: MyMessage, plain: true): string;\n  public wrapMessageActionTextNew(message: MyMessage, plain?: false): HTMLElement;\n  public wrapMessageActionTextNew(message: MyMessage, plain: boolean): HTMLElement | string;\n  public wrapMessageActionTextNew(message: MyMessage, plain?: boolean): HTMLElement | string {\n    try {\n      return this.wrapMessageActionTextNewUnsafe(message, plain);\n    } catch(err) {\n      this.log.error('wrapMessageActionTextNewUnsafe error:', err);\n      return plain ? '' : document.createElement('span');\n    }\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return apiManager.invokeApiSingle('messages.report', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return apiManager.invokeApi('messages.startBot', {\n        bot: appUsersManager.getUserInput(botId),\n        peer: appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(appChatsManager.isChannel(chatId)) {\n        promise = appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error) => {\n        if(error && error.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map(peerId => {\n        return {\n          _: 'inputFolderPeer',\n          peer: appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then(updates => {\n      //this.log('editPeerFolders updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = filterId === 1 ? rootScope.config.pinned_infolder_count_max : rootScope.config.pinned_dialogs_count_max;\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n    }\n\n    return apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return apiManager.invokeApi('messages.markDialogUnread', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat = appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat &&\n        fromChat.migrated_to &&\n        fromChat.migrated_to.channel_id === migrateTo.toChatId()) {\n          this.migratedFromTo[migrateFrom] = migrateTo;\n          this.migratedToFrom[migrateTo] = migrateFrom;\n\n        //setTimeout(() => {\n          rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n          this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n        //}, 100);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: any, kind: 'text' | 'poll') {\n    if(message.pFlags.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n    \n    if(message.media &&\n        message.media._ === 'messageMediaDocument' &&\n        (message.media.document.sticker || message.media.document.type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canEditMessage(message: any, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if((message.date < (tsNow(true) - rootScope.config.edit_time_limit) && \n      message.media?._ !== 'messageMediaPoll') || !message.pFlags.out) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() \n      || message.fromId === rootScope.myId \n      || appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' \n      || appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    let messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = appPeersManager.getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup\n        ? message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId\n        : appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true) {\n    const func = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n    return func('messages.getSearchCounters', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilter(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage, limit: number) {\n    const foundMsgs: MyMessage[] = [];\n    if(!history.length) {\n      return foundMsgs;\n    }\n\n    let filtering = true;\n    const neededContents: Partial<{\n      [messageMediaType in MessageMedia['_']]: boolean\n    }> & Partial<{\n      avatar: boolean,\n      url: boolean\n    }> = {},\n      neededDocTypes: MyDocument['type'][] = [], \n      excludeDocTypes: MyDocument['type'][] = []/* ,\n      neededFlags: string[] = [] */;\n\n    switch(inputFilter) {\n      case 'inputMessagesFilterPhotos':\n        neededContents['messageMediaPhoto'] = true;\n        break;\n\n      case 'inputMessagesFilterPhotoVideo':\n        neededContents['messageMediaPhoto'] = true;\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterVideo':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterDocument':\n        neededContents['messageMediaDocument'] = true;\n        excludeDocTypes.push('video');\n        break;\n\n      case 'inputMessagesFilterVoice':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('voice');\n        break;\n\n      case 'inputMessagesFilterRoundVoice':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('round', 'voice');\n        break;\n\n      case 'inputMessagesFilterRoundVideo':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('round');\n        break;\n\n      case 'inputMessagesFilterMusic':\n        neededContents['messageMediaDocument'] = true;\n        neededDocTypes.push('audio');\n        break;\n\n      case 'inputMessagesFilterUrl':\n        neededContents['url'] = true;\n        break;\n\n      case 'inputMessagesFilterChatPhotos':\n        neededContents['avatar'] = true;\n        break;\n\n      /* case 'inputMessagesFilterPinned':\n        neededFlags.push('pinned');\n        break; */\n\n      /* case 'inputMessagesFilterMyMentions':\n        neededContents['mentioned'] = true;\n        break; */\n\n      default:\n        filtering = false;\n        break;\n        /* return Promise.resolve({\n          count: 0,\n          next_rate: 0,\n          history: [] as number[]\n        }); */\n    }\n\n    if(!filtering) {\n      return foundMsgs;\n    }\n\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const message: Message.message | Message.messageService = storage.get(history[i]);\n      if(!message) continue;\n  \n      //|| (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\n  \n      let found = false;\n      if(message._ === 'message') {\n        if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\n          const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\n          if(doc && ((neededDocTypes.length && !neededDocTypes.includes(doc.type)) \n            || excludeDocTypes.includes(doc.type))) {\n            continue;\n          }\n  \n          found = true;\n        } else if(neededContents['url'] && message.message) {\n          const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\n          if((message.totalEntities as MessageEntity[]).find(e => goodEntities.includes(e._)) || RichTextProcessor.matchUrl(message.message)) {\n            found = true;\n          }\n        }\n      } else if(neededContents['avatar'] && \n        message.action && \n        ([\n          'messageActionChannelEditPhoto' as const, \n          'messageActionChatEditPhoto' as const, \n          'messageActionChannelEditVideo' as const, \n          'messageActionChatEditVideo' as const\n        ] as MessageAction['_'][]).includes(message.action._)) {\n        found = true;\n      }/*  else if(neededFlags.find(flag => message.pFlags[flag])) {\n        found = true;\n      } */\n  \n      if(found) {\n        foundMsgs.push(message);\n        if(foundMsgs.length >= limit) {\n          break;\n        }\n      }\n    }\n\n    return foundMsgs;\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    //this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    //const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ? \n        this.getSearchStorage(peerId, inputFilter._) as any : \n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilter(inputFilter._, storage.history.slice, this.getMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: appMessagesIdsManager.getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: appMessagesIdsManager.getServerMessageId(threadId) || 0\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      //var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      let offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        //offsetDate = offsetMessage.date + serverTimeManager.serverTimeOffset;\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      appUsersManager.saveApiUsers(searchResult.users);\n      appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter(mid => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = appMessagesIdsManager.getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: appMessagesIdsManager.generateMessageId(maxMessageId, true),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  } \n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      msg_id: appMessagesIdsManager.getServerMessageId(mid)\n    }).then(result => {\n      appChatsManager.saveApiChats(result.chats);\n      appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.filterMessages(result.messages[0], message => !!(message as Message.message).replies)[0] as Message.message;\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n      \n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = appMessagesIdsManager.generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = appMessagesIdsManager.generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(peerId: PeerId, mid: number) {\n    if(this.newMessagesToHandle[peerId] === undefined) {\n      this.newMessagesToHandle[peerId] = new Set();\n    }\n\n    this.newMessagesToHandle[peerId].add(mid);\n    if(!this.newMessagesHandleTimeout) {\n      this.newMessagesHandleTimeout = window.setTimeout(this.handleNewMessages, 0);\n    }\n  }\n\n  private handleNewMessages = () => {\n    clearTimeout(this.newMessagesHandleTimeout);\n    this.newMessagesHandleTimeout = 0;\n\n    rootScope.dispatchEvent('history_multiappend', this.newMessagesToHandle);\n    this.newMessagesToHandle = {};\n  };\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const obj = this.newDialogsToHandle;\n    for(const peerId in obj) {\n      const dialog = obj[peerId];\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n        delete obj[peerId];\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!appPeersManager.isChannel(peerId.toPeerId())) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    //this.log('after order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n    this.newDialogsToHandle = {};\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle[peerId] = dialog;\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = new Promise<void>((resolve) => {\n      setTimeout(() => {\n        resolve();\n        this.newDialogsHandlePromise = undefined;\n        this.handleNewDialogs();\n      }, 0);\n    });\n  }\n\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const localMessageIds = mids.map(mid => appMessagesIdsManager.getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = apiManager.invokeApi('channels.deleteMessages', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    return promise;\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId) && !force) {\n      this.log('readHistory: isn\\'t unread');\n      return Promise.resolve();\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readDiscussion', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          msg_id: appMessagesIdsManager.getServerMessageId(threadId),\n          read_max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('channels.readHistory', {\n          channel: appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readHistory', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          max_id: appMessagesIdsManager.getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    appNotificationsManager.soundReset(appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then(messages => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        rootScope.dispatchEvent('history_focus', {peerId, mid});\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then(messages => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      offset_id: appMessagesIdsManager.getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: appMessagesIdsManager.getServerMessageId(maxId),\n      min_id: appMessagesIdsManager.getServerMessageId(minId)\n    }).then(messagesMessages => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      appUsersManager.saveApiUsers(messagesMessages.users);\n      appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map(mid => appMessagesIdsManager.getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = apiManager.invokeApi('channels.readMessageContents', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      //threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  private handleNotifications = () => {\n    window.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    //var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    //const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n        continue;\n      }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n\n      Promise.all([\n        appNotificationsManager.getNotifyPeerTypeSettings(),\n        appNotificationsManager.getNotifySettings(appPeersManager.getInputNotifyPeerById(peerId, true))\n      ]).then(([_, peerTypeNotifySettings]) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if(appNotificationsManager.isPeerLocalMuted(peerId, true) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        //setTimeout(() => {\n          if(topMessage.pFlags.unread) {\n            this.notifyAboutMessage(topMessage, {\n              fwdCount: notifyPeerToHandle.fwdCount,\n              peerTypeNotifySettings\n            });\n          }\n        //}, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    //this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = appMessagesIdsManager.generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!message.deleted) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach(storage => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: new Map()});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? appMessagesIdsManager.getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    if(!pendingMessage) {\n      this.handleNewMessage(peerId, message.mid);\n    }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n    \n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = window.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    //this.log('updateDialogUnreadMark', update);\n    const peerId = appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      rootScope.dispatchEvent('dialogs_multiupdate', {[peerId]: dialog});\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = appMessagesIdsManager.generateMessageId(message.id);\n    const storage = this.getMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n    \n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      }\n    } else {\n      rootScope.dispatchEvent('message_edit', {\n        storage,\n        peerId,\n        mid\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n        updatedDialogs[peerId] = dialog;\n        rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox \n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox \n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    //this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n      \n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n      \n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n        \n        appNotificationsManager.cancel('msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n      \n      rootScope.dispatchEvent('dialog_unread', {peerId});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid));\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map(id => appMessagesIdsManager.generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.getMessageById(mids[0]).peerId;\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(!message.deleted) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n  \n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = appMessagesIdsManager.generateMessageId(update.available_min_id);\n    const messages = history.filter(mid => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    //const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map(id => appMessagesIdsManager.generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.getMessageById(messages[0]).peerId;\n    \n    if(!peerId) {\n      return;\n    }\n\n    apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n    \n    const historyUpdated = this.handleDeletedMessages(peerId, this.getMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map(threadKey => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach(historyStorage => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n      \n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n      \n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        rootScope.dispatchEvent('dialog_unread', {peerId});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = appChatsManager.getChat(channelId);\n\n    const needDialog = appChatsManager.isInChat(channelId);\n    \n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n    \n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n    \n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.dialogsStorage.dropDialog(peerId);\n\n    delete this.historiesStorage[peerId];\n    this.reloadConversation(peerId).then(() => {\n      rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n  \n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = appMessagesIdsManager.generateMessageId(update.id);\n    const message: Message.message = this.getMessageByPeer(peerId, mid);\n    if(!message.deleted && message.views !== undefined && message.views < views) {\n      message.views = views;\n      rootScope.dispatchEvent('message_views', {peerId, mid, views});\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    //this.log('updateServiceNotification', update);\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: appPeersManager.getOutputPeer(fromId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + serverTimeManager.serverTimeOffset,\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!appUsersManager.hasUser(fromId)) {\n      appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];  \n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map(id => appMessagesIdsManager.generateMessageId(id)); \n\n    const storage = this.getMessagesStorage(peerId);\n    const missingMessages = messages.filter(mid => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map(mid => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          //storage.history.push(mid);\n          const message = storage.get(mid);\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        //storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          //storage.history.findAndSplice(_mid => _mid === mid);\n          const message = storage.get(mid);\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n  \n      delete this.pinnedMessages[peerId];\n      appStateManager.getState().then(state => {\n        delete state.hiddenPinnedMessages[peerId];\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = appPeersManager.getPeerId((peer as NotifyPeer.notifyPeer).peer);\n    \n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mid = appMessagesIdsManager.generateMessageId(message.id);\n\n      const oldMessage = this.getMessageFromStorage(storage, mid);\n      this.saveMessages([message], {storage, isScheduled: true});\n      const newMessage = this.getMessageFromStorage(storage, mid);\n\n      if(!oldMessage.deleted) {\n        this.handleEditedMessage(oldMessage, newMessage);\n        rootScope.dispatchEvent('message_edit', {storage, peerId, mid: message.mid});\n      } else {\n        const pendingMessage = this.checkPendingMessage(message);\n        if(!pendingMessage) {\n          rootScope.dispatchEvent('scheduled_new', {peerId, mid: message.mid});\n        }\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map(id => appMessagesIdsManager.generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage.peerId?.isAnyChat() && threadMessage.reply_to) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid);\n\n      if(broadcastEventName) {\n        rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n    \n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        rootScope.dispatchEvent('history_update', {storage: pendingData.storage, peerId: message.peerId, mid: message.mid});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, mute?: boolean) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    if(mute === undefined) {\n      mute = !appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n    \n    settings.mute_until = mute ? MUTE_UNTIL : 0;\n\n    return appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(peerId.isAnyChat()) {\n      //const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId); \n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach(storage => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(!tempMessage.deleted) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n      \n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    //this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        //this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = appDownloadManager.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = appDownloadManager.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = appPhotosManager.getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const doc = appDocsManager.getDoc('' + tempId);\n        if(doc) {\n          if(/* doc._ !== 'documentEmpty' &&  */doc.type && doc.type !== 'sticker' && doc.mime_type !== 'image/gif') {\n            const cacheContext = appDownloadManager.getCacheContext(newDoc);\n            const oldCacheContext = appDownloadManager.getCacheContext(doc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = appDocsManager.getInputFileName(newDoc);\n            appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete appPollsManager.polls[tempId];\n        delete appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n    \n    this.handleReleasingMessage(tempMessage, storage);\n\n    rootScope.dispatchEvent('message_sent', {storage, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    apiManager.invokeApi('messages.receivedMessages', {\n      max_id: appMessagesIdsManager.getServerMessageId(maxId)\n    });\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid)),\n      increment: true\n    }).then(views => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n    const notification: NotifyOptions = {};\n    const peerString = appPeersManager.getPeerString(peerId);\n    let notificationMessage: string;\n\n    if(options.peerTypeNotifySettings.show_previews) {\n      if(message._ === 'message' && message.fwd_from && options.fwdCount) {\n        notificationMessage = I18n.format('Notifications.Forwarded', true, [options.fwdCount]);\n      } else {\n        notificationMessage = this.wrapMessageForReply(message, undefined, undefined, true);\n      }\n    } else {\n      notificationMessage = I18n.format('Notifications.New', true);\n    }\n\n    notification.title = appPeersManager.getPeerTitle(peerId, true);\n    if(peerId.isAnyChat() && message.fromId !== message.peerId) {\n      notification.title = appPeersManager.getPeerTitle(message.fromId, true) +\n        ' @ ' +\n        notification.title;\n    }\n\n    notification.title = RichTextProcessor.wrapPlainText(notification.title);\n\n    notification.onclick = () => {\n      rootScope.dispatchEvent('history_focus', {peerId, mid: message.mid});\n    };\n\n    notification.message = notificationMessage;\n    notification.key = 'msg' + message.mid;\n    notification.tag = peerString;\n    notification.silent = true;//message.pFlags.silent || false;\n\n    const peerPhoto = appPeersManager.getPeerPhoto(peerId);\n    if(peerPhoto) {\n      appAvatarsManager.loadAvatar(peerId, peerPhoto, 'photo_small').loadPromise.then(url => {\n        if(message.pFlags.unread) {\n          notification.image = url;\n          appNotificationsManager.notify(notification);\n        }\n      });\n    } else {\n      appNotificationsManager.notify(notification);\n    }\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage());\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId): Promise<number[]> {\n    if(!this.canSendToPeer(peerId)) return Promise.resolve([]);\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return Promise.resolve([...storage.keys()]);\n    }\n\n    return apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then(historyResult => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        appUsersManager.saveApiUsers(historyResult.users);\n        appChatsManager.saveApiChats(historyResult.chats);\n        \n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n      \n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => appMessagesIdsManager.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.filterMessages(message, message => !!(message as Message.message).replies)[0] as any;\n      if(!(message && message.replies && message.replies.pFlags.comments && message.replies.channel_id !== '777')) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    let historyResult = this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    if(historyResult instanceof Promise) {\n      historyResult = await historyResult;\n    }\n\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(peerId, historyResult.history[i]);\n    }\n\n    return historyStorage;\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  public getHistory(peerId: PeerId, maxId = 0, limit: number, backLimit?: number, threadId?: number): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    let offset = 0;\n    /* \n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map(message => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: haveSlice.slice,\n        offsetIdOffset: haveSlice.offsetIdOffset\n      }; \n    }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      return {\n        count: historyStorage.count,\n        history: slice?.slice || historyStorage.history.constructSlice(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray, \n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0], \n    offset_id: number, \n    limit: number, \n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually. \n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && appMessagesIdsManager.getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n  \n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        historyStorage.maxId = slice[0]; // ! WARNING\n      }\n      \n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    //console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    //rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: appPeersManager.getInputPeerById(peerId),\n      offset_id: appMessagesIdsManager.getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = appMessagesIdsManager.getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      appUsersManager.saveApiUsers(historyResult.users);\n      appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(appPeersManager.isChannel(peerId)) {\n        apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && historyResult.messages[length - 1].deleted) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = new Promise((resolve) => {\n      setTimeout(() => {\n        const requestPromises: Promise<void>[] = [];\n        \n        for(const [peerId, map] of this.needSingleMessages) {\n          const mids = [...map.keys()];\n          const msgIds: InputMessage[] = mids.map((mid) => {\n            return {\n              _: 'inputMessageID',\n              id: appMessagesIdsManager.getServerMessageId(mid)\n            };\n          });\n    \n          let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n          if(peerId.isAnyChat() && appPeersManager.isChannel(peerId)) {\n            promise = apiManager.invokeApiSingle('channels.getMessages', {\n              channel: appChatsManager.getChannelInput(peerId.toChatId()),\n              id: msgIds\n            });\n          } else {\n            promise = apiManager.invokeApiSingle('messages.getMessages', {\n              id: msgIds\n            });\n          }\n\n          const after = promise.then(getMessagesResult => {\n            assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n            appUsersManager.saveApiUsers(getMessagesResult.users);\n            appChatsManager.saveApiChats(getMessagesResult.chats);\n            this.saveMessages(getMessagesResult.messages);\n\n            for(let i = 0; i < getMessagesResult.messages.length; ++i) {\n              const message = getMessagesResult.messages[i];\n              const mid = appMessagesIdsManager.generateMessageId(message.id);\n              const promise = map.get(mid);\n              promise.resolve(getMessagesResult.messages[i]);\n              map.delete(mid);\n            }\n\n            if(map.size) {\n              for(const [mid, promise] of map) {\n                promise.resolve(this.generateEmptyMessage(mid));\n              }\n            }\n          }).finally(() => {\n            rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n          });\n    \n          requestPromises.push(after);\n        }\n\n        this.needSingleMessages.clear();\n\n        Promise.all(requestPromises).finally(() => {\n          this.fetchSingleMessagesPromise = null;\n          if(this.needSingleMessages.size) this.fetchSingleMessages();\n          resolve();\n        });\n      }, 0);\n    });\n  }\n\n  public wrapSingleMessage(peerId: PeerId, mid: number, overwrite = false): Promise<Message> {\n    const message = this.getMessageByPeer(peerId, mid);\n    if(!message.deleted && !overwrite) {\n      rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public fetchMessageReplyTo(message: MyMessage): Promise<Message> {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.wrapSingleMessage(replyToPeerId, message.reply_to_mid).then(originalMessage => {\n      if(originalMessage.deleted) { // ! чтобы не пыталось бесконечно загрузить удалённое сообщение\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(!rootScope.myId || \n      !peerId || \n      !this.canSendToPeer(peerId) || \n      peerId === rootScope.myId ||\n      typing?.type === action._\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      type: action._\n    };\n\n    return apiManager.invokeApi('messages.setTyping', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = window.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number, \n      unread: number, \n      unreadMentions: number, \n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0, \n      unread: 0, \n      unreadMentions: 0, \n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(message.deleted) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        appNotificationsManager.cancel('msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n\n      const peerMessagesToHandle = this.newMessagesToHandle[peerId];\n      if(peerMessagesToHandle && peerMessagesToHandle.has(mid)) {\n        peerMessagesToHandle.delete(mid);\n      }\n    }\n\n    if(history.albums) {\n      for(const groupId in history.albums) {\n        rootScope.dispatchEvent('album_edit', {peerId, groupId, deletedMids: [...history.albums[groupId]]});\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n  \n  private handleEditedMessage(oldMessage: Message, newMessage: Message) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n    }\n  }\n\n  public getMediaFromMessage(message: any) {\n    return message.action ? \n      message.action.photo : \n      message.media && (\n        message.media.photo || \n        message.media.document || (\n          message.media.webpage && (\n            message.media.webpage.document || \n            message.media.webpage.photo\n          )\n        )\n      );\n  }\n\n  public isMentionUnread(message: MyMessage) {\n    const doc = ((message as Message.message).media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n    return message.pFlags.media_unread && \n      message.pFlags.mentioned && \n      (\n        !doc || \n        !(['voice', 'round'] as MyDocument['type'][]).includes(doc.type)\n      );\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return !(message as Message.message).pFlags.noforwards && !appPeersManager.noForwards(message.peerId);\n  }\n}\n\nconst appMessagesManager = new AppMessagesManager();\nMOUNT_CLASS_TO.appMessagesManager = appMessagesManager;\nexport default appMessagesManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto } from \"../../layer\";\r\nimport type { LangPackKey } from \"../langPack\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { isObject } from \"../../helpers/object\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport rootScope from \"../rootScope\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport I18n from '../langPack';\r\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\r\n\r\n// https://github.com/eelcohn/Telegram-API/wiki/Calculating-color-for-a-Telegram-user-on-IRC\r\n/*\r\n  HTML-color  IRC-color  Description\r\n  #c03d33     4          red\r\n  #4fad2d     3          green\r\n  #d09306     7          yellow\r\n  #168acd     10         blue\r\n  #8544d6     6          purple\r\n  #cd4073     13         pink\r\n  #2996ad     11         sea\r\n  #ce671b     5          orange\r\n  */\r\nconst DialogColorsFg = ['#fc5c51', '#0fb297', '#d09306', '#3d72ed', '#895dd5', '#cd4073', '#00c1a6', '#fa790f'];\r\nconst DialogColors = ['red', 'green', 'yellow', 'blue', 'violet', 'pink', 'cyan', 'orange'];\r\nconst DialogColorsMap = [0, 7, 4, 1, 6, 3, 5];\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager {\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    const photo = peerId.isUser() \r\n      ? appUsersManager.getUserPhoto(peerId.toUserId())\r\n      : appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : null;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return this.getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public getPeerTitle(peerId: PeerId, plainText = false, onlyFirstName = false) {\r\n    if(!peerId) {\r\n      peerId = rootScope.myId;\r\n    }\r\n    \r\n    let title = '';\r\n    if(peerId.isUser()) {\r\n      const user = appUsersManager.getUser(peerId.toUserId());\r\n      if(user.first_name) title += user.first_name;\r\n      if(user.last_name && (!onlyFirstName || !title)) title += ' ' + user.last_name;\r\n  \r\n      if(!title) title = user.pFlags.deleted ? I18n.format('HiddenName', true) : user.username;\r\n      else title = title.trim();\r\n    } else {\r\n      const chat: Chat.chat = appChatsManager.getChat(peerId.toChatId());\r\n      title = chat.title;\r\n\r\n      if(onlyFirstName) {\r\n        title = title.split(' ')[0];\r\n      }\r\n    }\r\n    \r\n    return plainText ? title : RichTextProcessor.wrapEmojiText(title);\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser()\r\n      ? appUsersManager.getUser(peerId.toUserId())\r\n      : appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputPeer | PeerId | string): PeerId {\r\n    if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\r\n    // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\r\n    // if(typeof(peerId) === 'number') return peerId;\r\n    else if(isObject(peerId)) {\r\n      const userId = (peerId as Peer.peerUser).user_id;\r\n      if(userId !== undefined) {\r\n        return userId.toPeerId(false);\r\n      }\r\n\r\n      const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\r\n      if(chatId !== undefined) {\r\n        return chatId.toPeerId(true);\r\n      }\r\n\r\n      return rootScope.myId; // maybe it is an inputPeerSelf\r\n    // } else if(!peerId) return 'u0';\r\n    } else if(!peerId) return NULL_PEER_ID;\r\n    \r\n    const isUser = (peerId as string).charAt(0) === 'u';\r\n    const peerParams = (peerId as string).substr(1).split('_');\r\n\r\n    return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return +peerId >= 0;\r\n  }\r\n  \r\n  public isAnyChat(peerId: PeerId) {\r\n    return !this.isUser(peerId);\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer', \r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerColorById(peerId: PeerId, pic = true) {\r\n    if(!peerId) return '';\r\n\r\n    const idx = DialogColorsMap[Math.abs(+peerId) % 7];\r\n    const color = (pic ? DialogColors : DialogColorsFg)[idx];\r\n    return color;\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === rootScope.myId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): LangPackKey {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n      \r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n\r\n[\r\n  'isChannel',\r\n  'isMegagroup',\r\n  'isAnyGroup',\r\n  'isBroadcast',\r\n  'isBot',\r\n  'isContact',\r\n  'isUser',\r\n  'isAnyChat',\r\n].forEach((value) => {\r\n  const newMethod = Array.isArray(value) ? value[0] : value;\r\n  const originMethod = Array.isArray(value) ? value[1] : value;\r\n  // @ts-ignore\r\n  String.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return appPeersManager[originMethod](this.toString());\r\n  };\r\n\r\n  // @ts-ignore\r\n  Number.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return appPeersManager[originMethod](this);\r\n  };\r\n});\r\n\r\ndeclare global {\r\n  interface String {\r\n    isChannel(): boolean;\r\n    isMegagroup(): boolean;\r\n    isAnyGroup(): boolean;\r\n    isBroadcast(): boolean;\r\n    isBot(): boolean;\r\n    isContact(): boolean;\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n\r\n  interface Number {\r\n    isChannel(): boolean;\r\n    isMegagroup(): boolean;\r\n    isAnyGroup(): boolean;\r\n    isBroadcast(): boolean;\r\n    isBot(): boolean;\r\n    isContact(): boolean;\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n}\r\n\r\nconst appPeersManager = new AppPeersManager();\r\nMOUNT_CLASS_TO.appPeersManager = appPeersManager;\r\nexport default appPeersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { isObject, safeReplaceObject, copy, deepEqual } from \"../../helpers/object\";\nimport { ChannelParticipant, Chat, ChatAdminRights, ChatBannedRights, ChatParticipant, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, Update, Updates } from \"../../layer\";\nimport apiManagerProxy from \"../mtproto/mtprotoworker\";\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager {\n  private storage = appStateManager.storages.chats;\n  \n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  //private usernames: any;\n  //private channelAccess: any;\n  //private megagroups: {[id: number]: true};\n\n  constructor() {\n    this.clear(true);\n\n    rootScope.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        apiManagerProxy.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = appPeersManager.getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    appStateManager.getState().then((state) => {\n      const chats = appStateManager.storagesResults.chats;\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const chats = appStateManager.storagesResults.chats;\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!appStateManager.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n          \n          chats.findAndSplice((chat) => chat.id === chatId);\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  }\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach(chat => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n    \n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    chat.initials = RichTextProcessor.getAbbreviation(chat.title);\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      if(oldChat.title !== chat.title) {\n        changedTitle = true;\n      }\n\n      safeReplaceObject(oldChat, chat);\n      rootScope.dispatchEvent('chat_update', chat.id);\n    }\n\n    const peerId = chat.id.toPeerId(true);\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', peerId);\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', peerId);\n    }\n\n    if(appStateManager.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  public combineParticipantBannedRights(id: ChatId, rights: ChatBannedRights) {\n    const chat: Chat.channel = this.getChat(id);\n\n    if(chat.default_banned_rights) {\n      rights = copy(rights);\n      const defaultRights = chat.default_banned_rights.pFlags;\n      for(let i in defaultRights) {\n        // @ts-ignore\n        rights.pFlags[i] = defaultRights[i];\n      }\n    }\n\n    return rights;\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id \n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread \n   * @returns \n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty') return false;\n\n    if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\n      return false;\n    }\n\n    const isCheckingRightsForSelf = rights === undefined;\n    if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf) {\n      return true;\n    }\n\n    if(chat._ === 'chatForbidden' ||\n        chat._ === 'channelForbidden' ||\n        (chat as Chat.chat).pFlags.kicked ||\n        (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\n      return false;\n    }\n\n    // const adminRights = chat.admin_rights;\n    // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n    if(!rights) {\n      rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n      if(!rights) {\n        return false;\n      }\n    }\n\n    let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\n    if(rights) {\n      myFlags = rights.pFlags as any;\n    }\n\n    // const adminFlags = adminRights?.pFlags || {};\n    // const bannedFlags = bannedRights?.pFlags || {};\n\n    switch(action) {\n      case 'embed_links':\n      case 'send_games':\n      case 'send_gifs':\n      case 'send_inline':\n      case 'send_media':\n      case 'send_messages':\n      case 'send_polls':\n      case 'send_stickers': {\n        if(!isThread && chat.pFlags.left) {\n          return false;\n        }\n\n        if(rights._ === 'chatBannedRights' && myFlags[action]) {\n          return false;\n        }\n\n        if(chat._ === 'channel') {\n          if(!chat.pFlags.megagroup && !myFlags.post_messages) {\n            return false;\n          }\n        }\n\n        break;\n      }\n\n      // * revoke foreign messages\n      case 'delete_messages':\n      case 'manage_call': {\n        return !!myFlags[action];\n      }\n\n      case 'pin_messages': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] || !!myFlags.post_messages : !myFlags[action];\n      }\n\n      // case 'change_info': {\n        // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\n      // }\n\n      case 'change_info':\n      case 'invite_users': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] : !myFlags[action];\n      }\n\n      // * only creator can do that\n      case 'change_type':\n      case 'delete_chat': {\n        return false;\n      }\n\n      case 'ban_users':\n      case 'change_permissions': {\n        return rights._ === 'chatAdminRights' && !!myFlags['ban_users'];\n      }\n\n      case 'view_participants': {\n        return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\n      }\n    }\n\n    return true;\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n    \n    return apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat && chat._ === 'channel' && chat.pFlags.megagroup);\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' \n      || chat._ === 'chatForbidden' \n      || chat._ === 'chatEmpty' \n      || (chat as Chat.chat).pFlags.left \n      || (chat as Chat.chat).pFlags.kicked \n      || (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = RichTextProcessor.wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(title: string, about: string): Promise<ChatId> {\n    return apiManager.invokeApi('channels.createChannel', {\n      broadcast: true,\n      title,\n      about\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: channelId.toPeerId(true)});\n\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map(u => appUsersManager.getUserInput(u));\n\n    return apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return apiManager.invokeApi('messages.createChat', {\n      users: userIds.map(u => appUsersManager.getUserInput(u)),\n      title\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: chatId.toPeerId(true)});\n\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    //console.log('onChatUpdated', chatId, updates);\n\n    apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    //return this.leaveChat(id).then(() => {\n      return apiManager.invokeApi('messages.deleteChat', {\n        chat_id: id\n      });\n    //});\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find(u => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return apiManager.invokeApi('messages.editChatAbout', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      about\n    }).then(bool => {\n      if(bool) {\n        rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public getParticipantPeerId(participant: ChannelParticipant | ChatParticipant): PeerId {\n    const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ? \n      appPeersManager.getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) : \n      (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\n    return peerId;\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : this.getParticipantPeerId(participant);\n    return apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: appUsersManager.getSelf().id,\n            peer: appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n  \n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then(messagesChats => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then(channelId => {\n      return apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n\nconst appChatsManager = new AppChatsManager();\nMOUNT_CLASS_TO.appChatsManager = appChatsManager;\nexport default appChatsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { i18n } from \"../lib/langPack\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\n\r\nexport type PeerTitleOptions = {\r\n  peerId: PeerId,\r\n  plainText?: boolean,\r\n  onlyFirstName?: boolean,\r\n  dialog?: boolean\r\n};\r\n\r\nconst weakMap: WeakMap<HTMLElement, PeerTitle> = new WeakMap();\r\n\r\nMOUNT_CLASS_TO.peerTitleWeakMap = weakMap;\r\n\r\nrootScope.addEventListener('peer_title_edit', (peerId) => {\r\n  const elements = Array.from(document.querySelectorAll(`.peer-title[data-peer-id=\"${peerId}\"]`)) as HTMLElement[];\r\n  elements.forEach(element => {\r\n    const peerTitle = weakMap.get(element);\r\n    //console.log('in the summer silence i was doing nothing', peerTitle, peerId);\r\n\r\n    if(peerTitle) {\r\n      peerTitle.update();\r\n    }\r\n  });\r\n});\r\n\r\nexport default class PeerTitle {\r\n  public element: HTMLElement;\r\n  public peerId: PeerId;\r\n  public plainText = false;\r\n  public onlyFirstName = false;\r\n  public dialog = false;\r\n\r\n  constructor(options: PeerTitleOptions) {\r\n    this.element = document.createElement('span');\r\n    this.element.classList.add('peer-title');\r\n    this.element.setAttribute('dir', 'auto');\r\n    \r\n    this.update(options);\r\n    weakMap.set(this.element, this);\r\n  }\r\n\r\n  public update(options?: PeerTitleOptions) {\r\n    if(options) {\r\n      for(let i in options) {\r\n        // @ts-ignore\r\n        this.element.dataset[i] = options[i] ? '' + (typeof(options[i]) === 'boolean' ? +options[i] : options[i]) : '0';\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    if(this.peerId !== rootScope.myId || !this.dialog) {\r\n      if(this.peerId.isUser() && appUsersManager.getUser(this.peerId).pFlags.deleted) {\r\n        replaceContent(this.element, i18n(this.onlyFirstName ? 'Deleted' : 'HiddenName'));\r\n      } else {\r\n        this.element.innerHTML = appPeersManager.getPeerTitle(this.peerId, this.plainText, this.onlyFirstName);\r\n      }\r\n    } else {\r\n      replaceContent(this.element, i18n(this.onlyFirstName ? 'Saved' : 'SavedMessages'));\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport { bytesFromHex } from \"../../helpers/bytes\";\nimport { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport { safeReplaceArrayInObject, isObject } from \"../../helpers/object\";\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport { InputFileLocation, InputMedia, InputPhoto, Photo, PhotoSize, PhotosPhotos } from \"../../layer\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager, { ThumbCache } from \"./appDownloadManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport blur from \"../../helpers/blur\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport calcImageInBox from \"../../helpers/calcImageInBox\";\nimport { makeMediaSize, MediaSize } from \"../../helpers/mediaSizes\";\nimport windowSize from \"../../helpers/windowSize\";\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n//let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  private static jpegHeader = bytesFromHex('ffd8ffe000104a46494600010100000100010000ffdb004300281c1e231e19282321232d2b28303c64413c37373c7b585d4964918099968f808c8aa0b4e6c3a0aadaad8a8cc8ffcbdaeef5ffffff9bc1fffffffaffe6fdfff8ffdb0043012b2d2d3c353c76414176f8a58ca5f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ffc00011080000000003012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00');\n  private static jpegTail = bytesFromHex('ffd9');\n  \n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(photo._ === 'photoEmpty') return undefined;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n  \n  public choosePhotoSize(photo: MyPhoto | MyDocument, boxWidth = 0, boxHeight = 0, useBytes = false, pushDocumentSize = false) {\n    if(window.devicePixelRatio > 1) {\n      boxWidth *= 2;\n      boxHeight *= 2;\n    }\n    \n    /*\n    s\tbox\t100x100\n    m\tbox\t320x320\n    x\tbox\t800x800\n    y\tbox\t1280x1280\n    w\tbox\t2560x2560\n    a\tcrop\t160x160\n    b\tcrop\t320x320\n    c\tcrop\t640x640\n    d\tcrop\t1280x1280 */\n\n    let bestPhotoSize: PhotoSize = {_: 'photoSizeEmpty', type: ''};\n    let sizes = (photo as MyPhoto).sizes || (photo as MyDocument).thumbs as PhotoSize[];\n    if(pushDocumentSize && sizes && photo._ === 'document') {\n      sizes = sizes.concat({\n        _: 'photoSize', \n        w: (photo as MyDocument).w, \n        h: (photo as MyDocument).h, \n        size: (photo as MyDocument).size, \n        type: undefined\n      });\n    }\n\n    if(sizes?.length) {\n      for(let i = 0, length = sizes.length; i < length; ++i) {\n        const photoSize = sizes[i];\n        if(!('w' in photoSize) && !('h' in photoSize)) continue;\n  \n        bestPhotoSize = photoSize;\n  \n        const size = calcImageInBox(photoSize.w, photoSize.h, boxWidth, boxHeight);\n        if(size.width >= boxWidth || size.height >= boxHeight) {\n          break;\n        }\n      }\n\n      if(useBytes && bestPhotoSize._ === 'photoSizeEmpty' && sizes[0]._ === 'photoStrippedSize') {\n        bestPhotoSize = sizes[0];\n      }\n    }\n    \n    return bestPhotoSize;\n  }\n  \n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = appUsersManager.getUserInput(userId);\n    return apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n      \n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  public getPreviewURLFromBytes(bytes: Uint8Array | number[], isSticker = false) {\n    let arr: Uint8Array;\n    if(!isSticker) {\n      arr = new Uint8Array(AppPhotosManager.jpegHeader.concat(Array.from(bytes.slice(3)), AppPhotosManager.jpegTail));\n      arr[164] = bytes[1];\n      arr[166] = bytes[2];\n    } else {\n      arr = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes);\n    }\n\n    let mimeType: string;\n    if(isSticker) {\n      mimeType = IS_SAFARI ? 'image/png' : 'image/webp';\n    } else {\n      mimeType = 'image/jpeg';\n    }\n\n    const blob = new Blob([arr], {type: mimeType});\n    return URL.createObjectURL(blob);\n  }\n\n  /**\n   * https://core.telegram.org/api/files#vector-thumbnails\n   */\n  public getPathFromPhotoPathSize(size: PhotoSize.photoPathSize) {\n    const bytes = size.bytes;\n    const lookup = \"AACAAAAHAAALMAAAQASTAVAAAZaacaaaahaaalmaaaqastava.az0123456789-,\";\n\n    let path = 'M';\n    for(let i = 0, length = bytes.length; i < length; ++i) {\n      const num = bytes[i];\n\n      if(num >= (128 + 64)) {\n        path += lookup[num - 128 - 64];\n      } else {\n        if(num >= 128) {\n          path += ',';\n        } else if(num >= 64) {\n          path += '-'; \n        }\n        path += '' + (num & 63);\n      }\n    }\n    path += 'z';\n\n    return path;\n  }\n\n  public getPreviewURLFromThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, isSticker = false) {\n    const cacheContext = appDownloadManager.getCacheContext(photo, thumb.type);\n    return cacheContext.url || (cacheContext.url = this.getPreviewURLFromBytes(thumb.bytes, isSticker));\n  }\n  \n  public getImageFromStrippedThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, useBlur: boolean) {\n    const url = this.getPreviewURLFromThumb(photo, thumb, false);\n\n    const image = new Image();\n    image.classList.add('thumbnail');\n\n    const loadPromise = (useBlur ? blur(url) : Promise.resolve(url)).then(url => {\n      return renderImageFromUrlPromise(image, url);\n    });\n    \n    return {image, loadPromise};\n  }\n  \n  public setAttachmentSize(\n    photo: MyPhoto | MyDocument, \n    element: HTMLElement | SVGForeignObjectElement, \n    boxWidth: number, \n    boxHeight: number, \n    noZoom = true, \n    message?: any,\n    pushDocumentSize?: boolean,\n    photoSize?: ReturnType<AppPhotosManager['choosePhotoSize']>\n  ) {\n    if(!photoSize) {\n      photoSize = this.choosePhotoSize(photo, boxWidth, boxHeight, undefined, pushDocumentSize);\n    }\n    //console.log('setAttachmentSize', photo, photo.sizes[0].bytes, div);\n    \n    let size: MediaSize;\n    const isDocument = photo._ === 'document';\n    if(isDocument) {\n      size = makeMediaSize((photo as MyDocument).w || (photoSize as PhotoSize.photoSize).w || 512, (photo as MyDocument).h || (photoSize as PhotoSize.photoSize).h || 512);\n    } else {\n      size = makeMediaSize((photoSize as PhotoSize.photoSize).w || 100, (photoSize as PhotoSize.photoSize).h || 100);\n    }\n\n    let boxSize = makeMediaSize(boxWidth, boxHeight);\n\n    boxSize = size = size.aspect(boxSize, noZoom);\n\n    let isFit = true;\n\n    if(!isDocument || ['video', 'gif'].includes((photo as MyDocument).type)) {\n      if(boxSize.width < 200 && boxSize.height < 200) { // make at least one side this big\n        boxSize = size = size.aspectCovered(makeMediaSize(200, 200));\n      }\n  \n      if(message && \n        (message.message || \n          message.reply_to_mid || \n          message.media.webpage || \n          (message.replies && message.replies.pFlags.comments && message.replies.channel_id !== 777)\n        )\n      ) { // make sure that bubble block is human-readable\n        if(boxSize.width < 320) {\n          boxSize = makeMediaSize(320, boxSize.height);\n          isFit = false;\n        }\n      }\n  \n      if(isFit && boxSize.width < 120 && message) { // if image is too narrow\n        boxSize = makeMediaSize(120, boxSize.height);\n        isFit = false;\n      }\n    }\n\n    // if(element instanceof SVGForeignObjectElement) {\n    //   element.setAttributeNS(null, 'width', '' + w);\n    //   element.setAttributeNS(null, 'height', '' + h);\n\n    //   //console.log('set dimensions to svg element:', element, w, h);\n    // } else {\n      element.style.width = boxSize.width + 'px';\n      element.style.height = boxSize.height + 'px';\n    // }\n    \n    return {photoSize, size, isFit};\n  }\n\n  public getStrippedThumbIfNeeded(photo: MyPhoto | MyDocument, cacheContext: ThumbCache, useBlur: boolean, ignoreCache = false): ReturnType<AppPhotosManager['getImageFromStrippedThumb']> {\n    if(!cacheContext.downloaded || (['video', 'gif'] as MyDocument['type'][]).includes((photo as MyDocument).type) || ignoreCache) {\n      if(photo._ === 'document' && cacheContext.downloaded && !ignoreCache) {\n        return null;\n      }\n\n      const sizes = (photo as MyPhoto).sizes || (photo as MyDocument).thumbs;\n      const thumb = sizes?.length ? sizes.find(size => size._ === 'photoStrippedSize') : null;\n      if(thumb && ('bytes' in thumb)) {\n        return this.getImageFromStrippedThumb(photo, thumb as any, useBlur);\n      }\n    }\n\n    return null;\n  }\n  \n  public getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\n    const isDocument = photo._ === 'document';\n\n    if(!photoSize || photoSize._ === 'photoSizeEmpty') {\n      //console.error('no photoSize by photo:', photo);\n      throw new Error('photoSizeEmpty!');\n    }\n    \n    // maybe it's a thumb\n    const isPhoto = (photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference;\n    const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\n      _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\n      id: photo.id,\n      access_hash: photo.access_hash,\n      file_reference: photo.file_reference,\n      thumb_size: photoSize.type\n    };\n\n    return {\n      dcId: photo.dc_id, \n      location, \n      size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined, \n      queueId, \n      onlyCache\n    };\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n  \n  public preloadPhoto(photoId: MyPhoto | MyDocument | string, photoSize?: PhotoSize, queueId?: number, onlyCache?: boolean): CancellablePromise<Blob> {\n    const photo = this.getPhoto(photoId);\n\n    // @ts-ignore\n    if(!photo || photo._ === 'photoEmpty') {\n      throw new Error('preloadPhoto photoEmpty!');\n    }\n\n    if(!photoSize) {\n      const fullWidth = windowSize.width;\n      const fullHeight = windowSize.height;\n      \n      photoSize = this.choosePhotoSize(photo, fullWidth, fullHeight);\n    }\n\n    const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n    if(cacheContext.downloaded >= ('size' in photoSize ? photoSize.size : 0) && cacheContext.url) {\n      return Promise.resolve() as any;\n    }\n    \n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize, queueId, onlyCache);\n    const fileName = getFileNameByLocation(downloadOptions.location);\n\n    let download = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    download = appDownloadManager.download(downloadOptions);\n    download.then(blob => {\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext.downloaded = blob.size;\n        cacheContext.url = url;\n\n        //console.log('wrote photo:', photo, photoSize, cacheContext, blob);\n      }\n\n      return blob;\n    }).catch(() => {});\n\n    return download;\n  }\n  \n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n\n  public getInput(photo: MyPhoto): InputPhoto.inputPhoto {\n    return {\n      _: 'inputPhoto',\n      id: photo.id,\n      access_hash: photo.access_hash,\n      file_reference: photo.file_reference\n    };\n  }\n\n  public getMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n    return {\n      _: 'inputMediaPhoto',\n      id: this.getInput(photo),\n      ttl_seconds: 0\n    };\n  }\n\n  public savePhotoFile(photo: MyPhoto | MyDocument, queueId?: number) {\n    const fullPhotoSize = this.choosePhotoSize(photo, 0xFFFF, 0xFFFF);\n    if(!(fullPhotoSize._ === 'photoSize' || fullPhotoSize._ === 'photoSizeProgressive')) {\n      return;\n    }\n\n    const downloadOptions = this.getPhotoDownloadOptions(photo, fullPhotoSize, queueId);\n    downloadOptions.fileName = 'photo' + photo.id + '.jpg';\n    appDownloadManager.downloadToDisc(downloadOptions, downloadOptions.fileName);\n  }\n}\n\nconst appPhotosManager = new AppPhotosManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appPhotosManager = appPhotosManager);\nexport default appPhotosManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  const length = bytes.length;\r\n  const arr: string[] = new Array(length);\r\n  for(let i = 0; i < length; ++i) {\r\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  const bytes = new Uint8Array(Math.ceil(len / 2));\r\n  let start = 0;\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65;\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes = new Uint8Array(len);\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\n/* export function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n} */\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if(bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\n/* export function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n} */\r\n\r\nexport function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\r\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o = new Uint8Array(input.byteLength);\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o[i] = ((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: Parameters<typeof convertToUint8Array>[0]) {\r\n  const bytes = convertToUint8Array(input);\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n//import apiManager from '../mtproto/apiManager';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport { Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates } from '../../layer';\nimport { logger, LogTypes } from '../logger';\nimport apiManager from '../mtproto/mtprotoworker';\nimport rootScope from '../rootScope';\n//import networkerFactory from '../mtproto/networkerFactory';\nimport appUsersManager from \"./appUsersManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from './appStateManager';\nimport serverTimeManager from '../mtproto/serverTimeManager';\nimport assumeType from '../../helpers/assumeType';\nimport noop from '../../helpers/noop';\nimport RichTextProcessor from '../richtextprocessor';\nimport App from '../../config/app';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nexport class ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n  \n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n  \n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n  \n    if(!goodPts) {\n      return false;\n    }\n  \n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n  \n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n  \n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start,\n      //ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n  \n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n  \n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n  \n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? rootScope.myId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id\n          ? (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true)\n          : ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || rootScope.myId);\n  \n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n  \n      case 'updatesCombined':\n      case 'updates':\n        appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        appChatsManager.saveApiChats(updateMessage.chats, options.override);\n  \n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n  \n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n  \n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    let wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n  \n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts, \n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date, \n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        appUsersManager.saveApiUsers(differenceResult.users);\n        appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n    \n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n          \n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + serverTimeManager.serverTimeOffset;\n        delete updatesState.seq;\n        \n        this.channelStates = {};\n        \n        this.log.warn('getDifference:', differenceResult._);\n        rootScope.dispatchEvent('state_cleared');\n      }\n  \n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n  \n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n  \n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    //this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = apiManager.invokeApi('updates.getChannelDifference', {\n      channel: appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n  \n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n  \n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n  \n      appUsersManager.saveApiUsers(differenceResult.users);\n      appChatsManager.saveApiChats(differenceResult.chats);\n  \n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n  \n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n  \n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n  \n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n  \n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n  \n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n  \n    // this.log.log('process', channelId, curState.pts, update)\n  \n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n  \n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n  \n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n  \n    let popPts: boolean;\n    let popSeq: boolean;\n  \n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: window.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n  \n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n  \n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n  \n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n  \n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: window.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n  \n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n  \n    this.saveUpdate(update);\n  \n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    //this.debug && this.log('saveUpdate', update);\n    rootScope.dispatchEvent(update._, update as any);\n  }\n  \n  public attach() {\n    if(this.attached) return;\n\n    //return;\n\n    this.log('attach');\n    \n    this.attached = true;\n\n    appStateManager.getState().then(({updates: state}) => {\n      const newVersion = appStateManager.newVersion/*  || '0.8.6' */;\n\n      //rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            //setTimeout(() => {\n              this.updatesState.syncLoading = null;\n              resolve();\n              //rootScope.broadcast('state_synchronized');\n            //}, 1000);\n        \n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        /* state.date = 1628623682;\n        state.pts = 2007500;\n        state.seq = 503; */\n\n        Object.assign(this.updatesState, state);\n        \n        this.log('will get difference', Object.assign({}, state));\n        \n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n        this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(() => {\n          fetch('changelogs/' + newVersion.split(' ')[0] + '.md')\n          .then(res => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n          .then(text => {\n            const pre = `**Telegram Web${App.suffix} was updated to version alpha ${newVersion}**\\n\\n`;\n\n            text = pre + text;\n\n            const entities: MessageEntity[] = [];\n            const message = RichTextProcessor.parseMarkdown(text, entities);\n\n            const update: Update.updateServiceNotification = {\n              _: 'updateServiceNotification',\n              entities,\n              message,\n              type: 'local',\n              pFlags: {},\n              inbox_date: Date.now() / 1000 | 0,\n              media: undefined\n            };\n            this.processLocalUpdate(update);\n          })\n          .catch(noop);\n        });\n      }\n    });\n  }\n}\n\nconst apiUpdatesManager = new ApiUpdatesManager();\nMOUNT_CLASS_TO.apiUpdatesManager = apiUpdatesManager;\nexport default apiUpdatesManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { FileURLType, getFileNameByLocation, getFileURL } from '../../helpers/fileName';\nimport { safeReplaceArrayInObject, defineNotNumerableProperties, isObject } from '../../helpers/object';\nimport { Document, InputFileLocation, InputMedia, PhotoSize } from '../../layer';\nimport referenceDatabase, { ReferenceContext } from '../mtproto/referenceDatabase';\nimport opusDecodeController from '../opusDecodeController';\nimport { RichTextProcessor } from '../richtextprocessor';\nimport appDownloadManager, { DownloadBlob } from './appDownloadManager';\nimport appPhotosManager from './appPhotosManager';\nimport blur from '../../helpers/blur';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { getFullDate } from '../../helpers/date';\nimport rootScope from '../rootScope';\nimport IS_WEBP_SUPPORTED from '../../environment/webpSupport';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nconst EXTENSION_MIME_TYPE_MAP = {\n  mov: 'video/quicktime',\n  gif: 'image/gif',\n  pdf: 'application/pdf',\n};\n\nexport class AppDocsManager {\n  private docs: {[docId: DocId]: MyDocument} = {};\n  private savingLottiePreview: {[docId: DocId]: true} = {};\n  public downloading: Map<DocId, DownloadBlob> = new Map();\n\n  constructor() {\n    apiManager.onServiceWorkerFail = this.onServiceWorkerFail;\n  }\n\n  public onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        delete cacheContext.url;\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(doc._ === 'documentEmpty') {\n      return undefined;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      referenceDatabase.saveContext(doc.file_reference, context);\n    }\n    \n    //console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name', \n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle', \n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw', \n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    doc.attributes.forEach(attribute => {\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = RichTextProcessor.wrapPlainText(attribute.file_name);\n          doc.fileName = RichTextProcessor.wrapEmojiText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.audioTitle = RichTextProcessor.wrapEmojiText(attribute.title);\n          doc.audioPerformer = RichTextProcessor.wrapEmojiText(attribute.performer);\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          //apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n            doc.stickerEmoji = RichTextProcessor.wrapRichText(doc.stickerEmojiRaw, {noLinks: true, noLinebreaks: true});\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    });\n    \n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      doc.file_name = doc.fileName = doc.type + '_' + getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n    }\n\n    if(apiManager.isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n        \n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        if(!cacheContext.url) {\n          cacheContext.url = this.getFileURL(doc);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n    \n    if(!doc.file_name) {\n      doc.file_name = doc.fileName = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n  \n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public getMediaInput(doc: MyDocument): InputMedia.inputMediaDocument {\n    return {\n      _: 'inputMediaDocument',\n      id: {\n        _: 'inputDocument',\n        id: doc.id,\n        access_hash: doc.access_hash,\n        file_reference: doc.file_reference\n      },\n      ttl_seconds: 0\n    };\n  }\n\n  public getInput(doc: MyDocument, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\n    return {\n      _: 'inputDocumentFileLocation',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference,\n      thumb_size: thumbSize\n    };\n  }\n\n  public getFileDownloadOptions(doc: MyDocument, thumb?: PhotoSize.photoSize, queueId?: number, onlyCache?: boolean) {\n    const inputFileLocation = this.getInput(doc, thumb?.type);\n\n    let mimeType: string;\n    if(thumb) {\n      mimeType = doc.sticker ? 'image/webp' : 'image/jpeg'/* doc.mime_type */;\n    } else {\n      mimeType = doc.mime_type || 'application/octet-stream';\n    }\n\n    return {\n      dcId: doc.dc_id, \n      location: inputFileLocation, \n      size: thumb ? thumb.size : doc.size, \n      mimeType,\n      fileName: doc.file_name,\n      queueId,\n      onlyCache\n    };\n  }\n\n  public getFileURL(doc: MyDocument, download = false, thumb?: PhotoSize.photoSize) {\n    let type: FileURLType;\n    if(download) {\n      type = 'download';\n    } else if(thumb) {\n      type = 'thumb';\n    } else if(doc.supportsStreaming) {\n      type = 'stream';\n    } else {\n      type = 'document';\n    }\n\n    return getFileURL(type, this.getFileDownloadOptions(doc, thumb));\n  }\n\n  public getThumbURL(doc: MyDocument, thumb: PhotoSize.photoSize | PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize) {\n    let promise: Promise<any> = Promise.resolve();\n\n    const cacheContext = appDownloadManager.getCacheContext(doc, thumb.type);\n    if(!cacheContext.url) {\n      if('bytes' in thumb) {\n        promise = blur(appPhotosManager.getPreviewURLFromBytes(thumb.bytes, !!doc.sticker)).then(url => {\n          cacheContext.url = url;\n        }) as any;\n      } else {\n        //return this.getFileURL(doc, false, thumb);\n        promise = appPhotosManager.preloadPhoto(doc, thumb) as any;\n      }\n    }\n\n    return {thumb, cacheContext, promise};\n  }\n\n  public getThumb(doc: MyDocument, tryNotToUseBytes = true) {\n    const thumb = appPhotosManager.choosePhotoSize(doc, 0, 0, !tryNotToUseBytes);\n    if(thumb._ === 'photoSizeEmpty') return null;\n    return this.getThumbURL(doc, thumb as any);\n  }\n\n  public getInputFileName(doc: MyDocument, thumbSize?: string) {\n    return getFileNameByLocation(this.getInput(doc, thumbSize), {fileName: doc.file_name});\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean): DownloadBlob {\n    const fileName = this.getInputFileName(doc);\n\n    let download: DownloadBlob = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    const downloadOptions = this.getFileDownloadOptions(doc, undefined, queueId, onlyCache);\n    download = appDownloadManager.download(downloadOptions);\n    this.downloading.set(doc.id, download);\n    rootScope.dispatchEvent('download_start', doc.id);\n\n    const cacheContext = appDownloadManager.getCacheContext(doc);\n    const originalPromise = download;\n    originalPromise.then((blob) => {\n      cacheContext.url = URL.createObjectURL(blob);\n      cacheContext.downloaded = blob.size;\n    }, () => {}).finally(() => {\n      this.downloading.delete(doc.id);\n    });\n    \n    if(doc.type === 'voice' && !opusDecodeController.isPlaySupported()) {\n      download = originalPromise.then(async(blob) => {\n        const reader = new FileReader();\n  \n        await new Promise<void>((resolve, reject) => {\n          reader.onloadend = (e) => {\n            const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n            //console.log('sending uint8 to decoder:', uint8);\n            opusDecodeController.decode(uint8).then(result => {\n              cacheContext.url = result.url;\n              resolve();\n            }, (err) => {\n              delete cacheContext.downloaded;\n              reject(err);\n            });\n          };\n    \n          reader.readAsArrayBuffer(blob);\n        });\n  \n        return blob;\n      });\n    }\n\n    download.then(() => {\n      rootScope.dispatchEvent('document_downloaded', doc);\n    });\n\n    return download;\n  }\n\n  public saveLottiePreview(doc: MyDocument, canvas: HTMLCanvasElement, toneIndex: number) {\n    const key = doc.id + '-' + toneIndex;\n    if(this.savingLottiePreview[key]/*  || true */) return;\n\n    if(!doc.stickerCachedThumbs) {\n      defineNotNumerableProperties(doc, ['stickerCachedThumbs']);\n      doc.stickerCachedThumbs = {};\n    }\n\n    const thumb = doc.stickerCachedThumbs[toneIndex];\n    if(thumb && thumb.w >= canvas.width && thumb.h >= canvas.height) {\n      return;\n    }\n\n    /* if(doc.thumbs.find(t => t._ === 'photoStrippedSize') \n      || (doc.stickerCachedThumb || (doc.stickerSavedThumbWidth >= canvas.width && doc.stickerSavedThumbHeight >= canvas.height))) {\n      return;\n    } */\n\n    this.savingLottiePreview[key] = true;\n    canvas.toBlob((blob) => {\n      //console.log('got lottie preview', doc, blob, URL.createObjectURL(blob));\n\n      const thumb = {\n        url: URL.createObjectURL(blob),\n        w: canvas.width,\n        h: canvas.height\n      };\n\n      doc.stickerCachedThumbs[toneIndex] = thumb;\n\n      delete this.savingLottiePreview[key];\n      \n      /* const reader = new FileReader();\n      reader.onloadend = (e) => {\n        const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n        const thumb: PhotoSize.photoStrippedSize = {\n          _: 'photoStrippedSize',\n          bytes: uint8,\n          type: 'i'\n        };\n\n        doc.stickerSavedThumbWidth = canvas.width;\n        doc.stickerSavedThumbHeight = canvas.width;\n\n        defineNotNumerableProperties(thumb, ['url']);\n        thumb.url = URL.createObjectURL(blob);\n        doc.thumbs.findAndSplice(t => t._ === thumb._);\n        doc.thumbs.unshift(thumb);\n\n        if(!webpWorkerController.isWebpSupported()) {\n          doc.pFlags.stickerThumbConverted = true;\n        }\n\n        delete this.savingLottiePreview[doc.id];\n      };\n      reader.readAsArrayBuffer(blob); */\n    });\n  }\n\n  public saveDocFile(doc: MyDocument, queueId?: number) {\n    /* const options = this.getFileDownloadOptions(doc, undefined, queueId);\n    return appDownloadManager.downloadToDisc(options, doc.file_name); */\n    const promise = this.downloadDoc(doc, queueId);\n    promise.then(() => {\n      const cacheContext = appDownloadManager.getCacheContext(doc);\n      appDownloadManager.createDownloadAnchor(cacheContext.url, doc.file_name);\n    });\n    return promise;\n  }\n}\n\nconst appDocsManager = new AppDocsManager();\nMOUNT_CLASS_TO.appDocsManager = appDocsManager;\nexport default appDocsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\n// import { tsNow } from '../../helpers/date';\r\nimport sessionStorage from '../sessionStorage';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class ServerTimeManager {\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  public serverTimeOffset: number; // in seconds\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  constructor() {\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n    \r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    this.serverTimeOffset = 0;\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.serverTimeOffset = to;\r\n        // this.timeParams.serverTimeOffset = to;\r\n      }\r\n    });\r\n\r\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\r\n      this.serverTimeOffset = task.payload;\r\n    });\r\n  }\r\n}\r\n\r\nconst serverTimeManager = new ServerTimeManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\r\nexport default serverTimeManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { tsNow } from \"../../helpers/date\";\nimport { numberThousandSplitter } from \"../../helpers/number\";\nimport { ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull } from \"../../layer\";\nimport { LangPackKey, i18n } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\nimport appNotificationsManager from \"./appNotificationsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager, { MyTopPeer, User } from \"./appUsersManager\";\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager {\n  //private botInfos: any = {};\n  public usersFull: {[id: UserId]: UserFull.userFull} = {};\n  public chatsFull: {[id: ChatId]: ChatFull} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = fullChat.chat_photo?._ !== 'photoEmpty';\n        if(hasChatPhoto !== hasFullChatPhoto || (photo as ChatPhoto.chatPhoto).photo_id !== fullChat.chat_photo?.id) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    // * genius\n    rootScope.addEventListener('chat_full_update', (chatId) => {\n      rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n    \n    // * genius\n    rootScope.addEventListener('user_full_update', (userId) => {\n      rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true): Promise<UserFull> {\n    if(this.usersFull[id] && !override) {\n      return Promise.resolve(this.usersFull[id]);\n    }\n\n    return apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser', \n      params: {\n        id: appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        appChatsManager.saveApiChats(usersUserFull.chats, true);\n        appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(userFull.about !== undefined) {\n          userFull.rAbout = RichTextProcessor.wrapRichText(userFull.about, {noLinebreaks: true});\n        }\n\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        //appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull | UserFull.userFull> {\n    if(appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public getFullPhoto(peerId: PeerId) {\n    return this.getProfileByPeerId(peerId).then(profile => {\n      switch(profile._) {\n        case 'userFull':\n          return profile.profile_photo;\n        case 'channelFull':\n        case 'chatFull':\n          return profile.chat_photo;\n      }\n    });\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull> {\n    if(appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return Promise.resolve(fullChat);\n      }\n    }\n    \n    return apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat', \n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        appChatsManager.saveApiChats(result.chats, true);\n        appUsersManager.saveApiUsers(result.users);\n        const fullChat = result.full_chat as ChatFull.chatFull;\n        const peerId = id.toPeerId(true);\n        if(fullChat && fullChat.chat_photo && fullChat.chat_photo.id) {\n          fullChat.chat_photo = appPhotosManager.savePhoto(fullChat.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        //appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChat.notify_settings\n        });\n        \n        this.chatsFull[id] = fullChat;\n        rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChat;\n      }\n    });\n  }\n\n  public getChatInviteLink(id: ChatId, force?: boolean) {\n    return this.getChatFull(id).then((chatFull) => {\n      if(!force &&\n        chatFull.exported_invite &&\n        chatFull.exported_invite._ == 'chatInviteExported') {\n        return chatFull.exported_invite.link;\n      }\n      \n      return apiManager.invokeApi('messages.exportChatInvite', {\n        peer: appPeersManager.getInputPeerById(id.toPeerId(true))\n      }).then((exportedInvite) => {\n        if(this.chatsFull[id] !== undefined) {\n          this.chatsFull[id].exported_invite = exportedInvite;\n        }\n\n        return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n      });\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n            chat.pFlags.kicked ||\n            chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n          )) {\n        return Promise.reject();\n      }\n    }\n\n    return apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then(result => {\n      appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex(p => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: appChatsManager.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n    }).then(channelParticipant => {\n      appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true): Promise<ChatFull.channelFull> {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return Promise.resolve(this.chatsFull[id] as ChatFull.channelFull);\n    }\n\n    return apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel', \n      params: {\n        channel: appChatsManager.getChannelInput(id)\n      }, \n      processResult: (result) => {\n        const peerId = id.toPeerId(true);\n        appChatsManager.saveApiChats(result.chats, true);\n        appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          //appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n        appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      }, \n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            let channel = appChatsManager.getChat(id);\n            channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n            apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              } as Update.updateChannel],\n              chats: [channel],\n              users: []\n            });\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      \n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach(peer => {\n        index.indexObject(peer.id, appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: appMessagesIdsManager.getServerMessageId(threadId)\n      }, 50, 0).then(cP => {\n        return cP.participants.map(p => appChatsManager.getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = (this.getChatFull(chatId) as Promise<ChatFull.chatFull>).then(chatFull => {\n        return (chatFull.participants as ChatParticipants.chatParticipants).participants.map(p => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]), \n      promise\n    ]).then(results => {\n      const peers = results[0].concat(results[1].map(peerId => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  public invalidateChannelParticipants(id: ChatId) {\n    apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) delete this.usersFull[peerId.toUserId()];\n    else delete this.chatsFull[peerId.toChatId()];\n\n    rootScope.dispatchEvent('peer_full_update', peerId);\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name: string, last_name: string, about: string) {\n    return apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then(user => {\n      appUsersManager.saveApiUser(user);\n      \n      return this.getProfile(rootScope.myId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = rootScope.myId;\n      appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map(photoId => {\n        const photo = appPhotosManager.getPhoto(photoId);\n        return appPhotosManager.getInput(photo);\n      })\n    }).then((deletedList) => {\n      \n    });\n  }\n\n  public getChatMembersString(id: ChatId) {\n    const chat: Chat = appChatsManager.getChat(id);\n    if(chat._ === 'chatForbidden') {\n      return i18n('YouWereKicked');\n    }\n\n    const chatFull = this.chatsFull[id];\n    let count: number;\n    if(chatFull) {\n      if(chatFull._ === 'channelFull') {\n        count = chatFull.participants_count;\n      } else {\n        count = (chatFull.participants as ChatParticipants.chatParticipants).participants?.length;\n      }\n    } else {\n      count = (chat as Chat.chat).participants_count || (chat as any).participants?.participants.length;\n    }\n\n    const isChannel = appChatsManager.isBroadcast(id);\n    count = count || 1;\n\n    let key: LangPackKey = isChannel ? 'Peer.Status.Subscribers' : 'Peer.Status.Member';\n    return i18n(key, [numberThousandSplitter(count)]);\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n    \n    const chatInfo = await this.getChatFull(id);\n    if(appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ? \n      (update as Update.updateUserTyping).user_id.toPeerId() : \n      appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(rootScope.myId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n    \n    const peerId = appPeersManager.getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find(t => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      //typings.findAndSplice(t => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    //console.log('updateChatUserTyping', update, typings);\n    \n    typing.action = update.action;\n    \n    const hasUser = appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && appChatsManager.hasChat(update.chat_id) && !appChatsManager.isChannel(update.chat_id)) {\n          appProfileManager.getChatFull(update.chat_id).then(() => {\n            if(typing.timeout !== undefined && appUsersManager.hasUser(fromId)) {\n              rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n      \n      //return;\n    } else {\n      appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = window.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = appPeersManager.getPeerId(update.peer_id);\n    if(appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n\nconst appProfileManager = new AppProfileManager();\nMOUNT_CLASS_TO.appProfileManager = appProfileManager;\nexport default appProfileManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\ntype TargetType = HTMLElement;\r\nexport type OnVisibilityChange = (target: TargetType, visible: boolean) => void;\r\n\r\nexport default class VisibilityIntersector {\r\n  private observer: IntersectionObserver;\r\n  private items: Map<TargetType, boolean> = new Map();\r\n  private locked = false;\r\n\r\n  constructor(onVisibilityChange: OnVisibilityChange) {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(this.locked) {\r\n        return;\r\n      }\r\n\r\n      const changed: {target: TargetType, visible: boolean}[] = [];\r\n\r\n      entries.forEach(entry => {\r\n        const target = entry.target as TargetType;\r\n\r\n        if(this.items.get(target) === entry.isIntersecting) {\r\n          return;\r\n        } else {\r\n          this.items.set(target, entry.isIntersecting);\r\n        }\r\n\r\n        /* if(entry.isIntersecting) {\r\n          console.log('ooo', entry);\r\n        } */\r\n\r\n        /* if(this.locked) {\r\n          return;\r\n        } */\r\n\r\n        changed[entry.isIntersecting ? 'unshift' : 'push']({target, visible: entry.isIntersecting});\r\n\r\n        //onVisibilityChange(target, entry.isIntersecting);\r\n      });\r\n\r\n      changed.forEach(smth => {\r\n        onVisibilityChange(smth.target, smth.visible);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getVisible() {\r\n    const items: TargetType[] = [];\r\n    this.items.forEach((value, key) => {\r\n      if(value) {\r\n        items.push(key);\r\n      }\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  public clearVisible() {\r\n    const visible = this.getVisible();\r\n    for(const target of visible) {\r\n      this.items.set(target, false);\r\n    }\r\n  }\r\n\r\n  public isVisible(target: TargetType) {\r\n    return this.items.get(target);\r\n  }\r\n\r\n  public disconnect() {\r\n    this.observer.disconnect();\r\n    this.items.clear();\r\n  }\r\n\r\n  public refresh() {\r\n    this.observer.disconnect();\r\n\r\n    //window.requestAnimationFrame(() => {\r\n      const targets = [...this.items.keys()];\r\n      for(const target of targets) {\r\n        //this.items.set(target, false);\r\n        this.observer.observe(target);\r\n      }\r\n    //});\r\n  }\r\n\r\n  public refreshVisible() {\r\n    const visible = this.getVisible();\r\n    for(const target of visible) {\r\n      this.observer.unobserve(target);\r\n    }\r\n\r\n    for(const target of visible) {\r\n      this.observer.observe(target);\r\n    }\r\n  }\r\n\r\n  public observe(target: TargetType) {\r\n    this.items.set(target, false);\r\n    this.observer.observe(target);\r\n  }\r\n\r\n  public unobserve(target: TargetType) {\r\n    this.observer.unobserve(target);\r\n    this.items.delete(target);\r\n  }\r\n\r\n  public unlock() {\r\n    this.locked = false;\r\n  }\r\n\r\n  public unlockAndRefresh() {\r\n    this.unlock();\r\n    this.refresh();\r\n  }\r\n\r\n  public lock() {\r\n    this.locked = true;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport VisibilityIntersector, { OnVisibilityChange } from \"./visibilityIntersector\";\r\nimport { findAndSpliceAll, indexOfAndSplice } from \"../helpers/array\";\r\nimport throttle from \"../helpers/schedulers/throttle\";\r\n\r\ntype LazyLoadElementBase = {\r\n  load: () => Promise<any>\r\n};\r\n\r\ntype LazyLoadElement = Omit<LazyLoadElementBase, 'load'> & {\r\n  load: (target?: HTMLElement) => Promise<any>,\r\n  div: HTMLElement\r\n  wasSeen?: boolean,\r\n};\r\n\r\nconst PARALLEL_LIMIT = 8;\r\n\r\nexport class LazyLoadQueueBase {\r\n  public queueId = 0;\r\n  protected queue: Array<LazyLoadElementBase> = [];\r\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\r\n\r\n  protected lockPromise: Promise<void> = null;\r\n  protected unlockResolve: () => void = null;\r\n\r\n  protected log = logger('LL', LogTypes.Error);\r\n  protected processQueue: () => void;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    this.processQueue = throttle(() => this._processQueue(), 20, false);\r\n  }\r\n\r\n  public clear() {\r\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\r\n\r\n    this.queue.length = 0;\r\n    // unreachable code\r\n    /* for(let item of this.inProcess) { \r\n      this.lazyLoadMedia.push(item);\r\n    } */\r\n  }\r\n\r\n  public lock() {\r\n    if(this.lockPromise) return;\r\n\r\n    //const perf = performance.now();\r\n    this.lockPromise = new Promise((resolve, reject) => {\r\n      this.unlockResolve = resolve;\r\n    });\r\n\r\n    /* if(DEBUG) {\r\n      this.lockPromise.then(() => {\r\n        this.log('was locked for:', performance.now() - perf);\r\n      });\r\n    } */\r\n  }\r\n\r\n  public unlock() {\r\n    if(!this.unlockResolve) return;\r\n\r\n    this.unlockResolve();\r\n    this.unlockResolve = this.lockPromise = null;\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected async processItem(item: LazyLoadElementBase) {\r\n    if(this.lockPromise) {\r\n      return;\r\n    }\r\n\r\n    this.inProcess.add(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('will load media', this.lockPromise, item);\r\n    } */\r\n\r\n    try {\r\n      //await new Promise((resolve) => setTimeout(resolve, 2e3));\r\n      //await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\r\n      //await item.load(item.div);\r\n      await this.loadItem(item);\r\n    } catch(err) {\r\n      if(!['NO_ENTRY_FOUND', 'STORAGE_OFFLINE'].includes(err as string)) {\r\n        this.log.error('loadMediaQueue error:', err/* , item */);\r\n      }\r\n    }\r\n\r\n    this.inProcess.delete(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('loaded media', item);\r\n    } */\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElementBase) {\r\n    return item.load();\r\n  }\r\n\r\n  protected getItem() {\r\n    return this.queue.shift();\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\r\n    this.queue[method](el);\r\n    this.processQueue();\r\n  }\r\n\r\n  protected _processQueue(item?: LazyLoadElementBase) {\r\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\r\n\r\n    //console.log('_processQueue start');\r\n    let added = 0;\r\n    do {\r\n      if(item) {\r\n        indexOfAndSplice(this.queue, item);\r\n      } else {\r\n        item = this.getItem();\r\n      }\r\n  \r\n      if(item) {\r\n        this.processItem(item);\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      item = null;\r\n      ++added;\r\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\r\n    //console.log('_processQueue end, added', added, this.queue.length);\r\n  }\r\n\r\n  public push(el: LazyLoadElementBase) {\r\n    this.addElement('push', el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElementBase) {\r\n    this.addElement('unshift', el);\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueIntersector extends LazyLoadQueueBase {\r\n  protected queue: Array<LazyLoadElement> = [];\r\n  protected inProcess: Set<LazyLoadElement> = new Set();\r\n\r\n  public intersector: VisibilityIntersector;\r\n  protected intersectorTimeout: number;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    super(parallelLimit);\r\n  }\r\n\r\n  public lock() {\r\n    super.lock();\r\n    this.intersector.lock();\r\n  }\r\n\r\n  public unlock() {\r\n    super.unlock();\r\n    this.intersector.unlock();\r\n  }\r\n\r\n  public unlockAndRefresh() {\r\n    super.unlock();\r\n    this.intersector.unlockAndRefresh();\r\n  }\r\n\r\n  public clear() {\r\n    super.clear();\r\n    this.intersector.disconnect();\r\n  }\r\n\r\n  public refresh() {\r\n    this.intersector.refresh();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElement) {\r\n    return item.load(item.div);\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\r\n    const item = this.queue.find(i => i.div === el.div && i.load === el.load);\r\n    if(item) {\r\n      return false;\r\n    } else {\r\n      for(const item of this.inProcess) {\r\n        if(item.div === el.div && item.load === el.load) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.queue[method](el);\r\n    return true;\r\n  }\r\n\r\n  protected setProcessQueueTimeout() {\r\n    if(!this.intersectorTimeout) {\r\n      this.intersectorTimeout = window.setTimeout(() => {\r\n        this.intersectorTimeout = 0;\r\n        this.processQueue();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  public push(el: LazyLoadElement) {\r\n    super.push(el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElement) {\r\n    super.unshift(el);\r\n  }\r\n\r\n  public unobserve(el: HTMLElement) {\r\n    findAndSpliceAll(this.queue, (i) => i.div === el);\r\n\r\n    this.intersector.unobserve(el);\r\n  }\r\n}\r\n\r\nexport default class LazyLoadQueue extends LazyLoadQueueIntersector {\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector(this.onVisibilityChange);\r\n  }\r\n\r\n  private onVisibilityChange = (target: HTMLElement, visible: boolean) => {\r\n    if(visible) {\r\n      /* if(DEBUG) {\r\n        this.log('isIntersecting', target);\r\n      } */\r\n\r\n      // need for set element first if scrolled\r\n      findAndSpliceAll(this.queue, (i) => i.div === target).forEach(item => {\r\n        item.wasSeen = true;\r\n        this.queue.unshift(item);\r\n        //this.processQueue(item);\r\n      });\r\n\r\n      this.setProcessQueueTimeout();\r\n    }\r\n  };\r\n\r\n  protected getItem() {\r\n    return this.queue.findAndSplice(item => item.wasSeen);\r\n  }\r\n\r\n  public async processItem(item: LazyLoadElement) {\r\n    await super.processItem(item);\r\n    this.intersector.unobserve(item.div);\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\r\n    const inserted = super.addElement(method, el);\r\n\r\n    if(!inserted) return false;\r\n\r\n    this.intersector.observe(el.div);\r\n    /* if(el.wasSeen) {\r\n      this.processQueue(el);\r\n    } else  */if(!el.hasOwnProperty('wasSeen')) {\r\n      el.wasSeen = false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueRepeat extends LazyLoadQueueIntersector {\r\n  private _queue: Map<HTMLElement, LazyLoadElement> = new Map();\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector((target, visible) => {\r\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\r\n      if(visible) {\r\n        const items = spliced.length ? spliced : [this._queue.get(target)];\r\n        items.forEach(item => {\r\n          this.queue.unshift(item || this._queue.get(target));\r\n        });\r\n      }\r\n  \r\n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\r\n      this.setProcessQueueTimeout();\r\n    });\r\n  }\r\n\r\n  public clear() {\r\n    super.clear();\r\n    this._queue.clear();\r\n  }\r\n\r\n  /* public async processItem(item: LazyLoadElement) {\r\n    //await super.processItem(item);\r\n    await LazyLoadQueueBase.prototype.processItem.call(this, item);\r\n\r\n    if(this.lazyLoadMedia.length) {\r\n      this.processQueue();\r\n    }\r\n  } */\r\n\r\n  public observe(el: LazyLoadElement) {\r\n    this._queue.set(el.div, el);\r\n    this.intersector.observe(el.div);\r\n  }\r\n}\r\n\r\nexport class LazyLoadQueueRepeat2 extends LazyLoadQueueIntersector {\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\r\n    super(parallelLimit);\r\n\r\n    this.intersector = new VisibilityIntersector((target, visible) => {\r\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\r\n      if(visible && spliced.length) {\r\n        spliced.forEach(item => {\r\n          this.queue.unshift(item);\r\n        });\r\n      }\r\n  \r\n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\r\n      this.setProcessQueueTimeout();\r\n    });\r\n  }\r\n\r\n  public observe(el: HTMLElement) {\r\n    this.intersector.observe(el);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { bufferConcats } from '../../helpers/bytes';\nimport { add_, bigInt2str, cmp, leftShift_, str2bigInt } from '../../vendor/leemon';\n\n                       \n             \n                                                 \n\n                                                                           \n                                                                                 \n                                                                                             \n                                               \n                                                                          \n                                                              \n                \n \n          \n\nexport function isObject(object: any) {\n  return typeof(object) === 'object' && object !== null;\n}\n\n/* export function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n} */\n\n/* export function bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10);\n} */\n\n/* export function base64ToBlob(base64str: string, mimeType: string) {\n  var sliceSize = 1024;\n  var byteCharacters = atob(base64str);\n  var bytesLength = byteCharacters.length;\n  var slicesCount = Math.ceil(bytesLength / sliceSize);\n  var byteArrays = new Array(slicesCount);\n\n  for(var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    var begin = sliceIndex * sliceSize;\n    var end = Math.min(begin + sliceSize, bytesLength);\n\n    var bytes = new Array(end - begin);\n    for(var offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n\n  return blobConstruct(byteArrays, mimeType);\n}\n\nexport function dataUrlToBlob(url: string) {\n  // var name = 'b64blob ' + url.length\n  // console.time(name)\n  var urlParts = url.split(',');\n  var base64str = urlParts[1];\n  var mimeType = urlParts[0].split(':')[1].split(';')[0];\n  var blob = base64ToBlob(base64str, mimeType);\n  // console.timeEnd(name)\n  return blob;\n} */\n\nexport function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n\n/* export function bytesFromBigInt(bigInt: BigInteger, len?: number) {\n  var bytes = bigInt.toByteArray();\n\n  if(len && bytes.length < len) {\n    var padding = [];\n    for(var i = 0, needPadding = len - bytes.length; i < needPadding; i++) {\n      padding[i] = 0;\n    }\n    if(bytes instanceof ArrayBuffer) {\n      bytes = bufferConcat(padding, bytes);\n    } else {\n      bytes = padding.concat(bytes);\n    }\n  } else {\n    while (!bytes[0] && (!len || bytes.length > len)) {\n      bytes = bytes.slice(1);\n    }\n  }\n\n  return bytes;\n} */\n\nexport function longFromInts(high: number, low: number): string {\n  //let perf = performance.now();\n  //let str = bigint(high).shiftLeft(32).add(bigint(low)).toString(10);\n  //console.log('longFromInts jsbn', performance.now() - perf);\n  high = intToUint(high);\n  low = intToUint(low);\n  \n  //perf = performance.now();\n  const bigInt = str2bigInt(high.toString(16), 16, 32);//int2bigInt(high, 64, 64);\n  //console.log('longFromInts construct high', bigint(high).toString(10), bigInt2str(bigInt, 10));\n  leftShift_(bigInt, 32);\n  //console.log('longFromInts shiftLeft', bigint(high).shiftLeft(32).toString(10), bigInt2str(bigInt, 10));\n  add_(bigInt, str2bigInt(low.toString(16), 16, 32));\n  const _str = bigInt2str(bigInt, 10);\n\n  //console.log('longFromInts leemon', performance.now() - perf);\n\n  //console.log('longFromInts', high, low, str, _str, str === _str);\n\n  return _str;\n}\n\nexport function sortLongsArray(arr: string[]) {\n  return arr.map(long => {\n    return str2bigInt(long, 10);\n  }).sort((a, b) => {\n    return cmp(a, b);\n  }).map(bigInt => {\n    return bigInt2str(bigInt, 10);\n  });\n}\n\nexport function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T, \n  blockSize: number = 16, \n  zeroes?: boolean, \n  blockSizeAsTotalLength = false, \n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    ////console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      padding.randomize();\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport class WindowSize {\n  public width = 0;\n  public height = 0;\n\n  constructor() {\n    // @ts-ignore\n    const w: any = 'visualViewport' in window ? window.visualViewport : window;\n    const set = () => {\n      this.width = w.width || w.innerWidth;\n      this.height = w.height || w.innerHeight;\n    };\n    w.addEventListener('resize', set);\n    set();\n  }\n}\n\nconst windowSize = new WindowSize();\nexport default windowSize;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string) {\r\n  const span = document.createElement('span');\r\n  span.innerHTML = html;\r\n  return span;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { fontFamily } from \"../../components/middleEllipsis\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport { deepEqual } from \"../../helpers/object\";\r\nimport { convertInputKeyToKey } from \"../../helpers/string\";\r\nimport { IS_MOBILE } from \"../../environment/userAgent\";\r\nimport { InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update } from \"../../layer\";\r\nimport I18n from \"../langPack\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport webPushApiManager, { PushSubscriptionNotify } from \"../mtproto/webPushApiManager\";\r\nimport rootScope from \"../rootScope\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport appRuntimeManager from \"./appRuntimeManager\";\r\nimport appStateManager from \"./appStateManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\n\r\ntype MyNotification = Notification & {\r\n  hidden?: boolean,\r\n  show?: () => void,\r\n};\r\n\r\nexport type NotifyOptions = Partial<{\r\n  tag: string;\r\n  image: string;\r\n  key: string;\r\n  title: string;\r\n  message: string;\r\n  silent: boolean;\r\n  onclick: () => void;\r\n}>;\r\n\r\nexport type NotificationSettings = {\r\n  nodesktop: boolean,\r\n  volume: number,\r\n  novibrate: boolean,\r\n  nopreview: boolean,\r\n  nopush: boolean,\r\n  nosound: boolean\r\n};\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager {\r\n  private notificationsUiSupport: boolean;\r\n  private notificationsShown: {[key: string]: MyNotification | true} = {};\r\n  private notificationIndex = 0;\r\n  private notificationsCount = 0;\r\n  private soundsPlayed: {[tag: string]: number} = {};\r\n  private vibrateSupport = !!navigator.vibrate;\r\n  private nextSoundAt: number;\r\n  private prevSoundVolume: number;\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  //private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n  private faviconEl: HTMLLinkElement = document.head.querySelector('link[rel=\"icon\"]');\r\n\r\n  private titleBackup = document.title;\r\n  private titleChanged = false;\r\n  private titleInterval: number;\r\n  private prevFavicon: string;\r\n  private stopped = false;\r\n\r\n  private settings: NotificationSettings = {} as any;\r\n\r\n  private registeredDevice: any;\r\n  private pushInited = false;\r\n\r\n  private topMessagesDeferred: CancellablePromise<void>;\r\n\r\n  private notifySoundEl: HTMLElement;\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    navigator.vibrate = navigator.vibrate || navigator.mozVibrate || navigator.webkitVibrate;\r\n\r\n    this.notificationsUiSupport = ('Notification' in window) || ('mozNotification' in navigator);\r\n\r\n    this.topMessagesDeferred = deferredPromise<void>();\r\n\r\n    this.notifySoundEl = document.createElement('div');\r\n    this.notifySoundEl.id = 'notify-sound';\r\n    document.body.append(this.notifySoundEl);\r\n\r\n    rootScope.addEventListener('instance_deactivated', () => {\r\n      this.stop();\r\n    });\r\n\r\n    rootScope.addEventListener('instance_activated', () => {\r\n      if(this.stopped) {\r\n        this.start();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('idle', (newVal) => {\r\n      if(this.stopped) {\r\n        return;\r\n      }\r\n\r\n      if(!newVal) {\r\n        this.clear();\r\n      }\r\n\r\n      this.toggleToggler();\r\n    });\r\n\r\n    rootScope.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && appPeersManager.getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId, \r\n          settings: update.notify_settings\r\n        });\r\n        rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('push_init', (tokenData) => {\r\n      this.pushInited = true;\r\n      if(!this.settings.nodesktop && !this.settings.nopush) {\r\n        if(tokenData) {\r\n          this.registerDevice(tokenData);\r\n        } else {\r\n          webPushApiManager.subscribe();\r\n        }\r\n      } else {\r\n        this.unregisterDevice(tokenData);\r\n      }\r\n    });\r\n    rootScope.addEventListener('push_subscribe', (tokenData) => {\r\n      this.registerDevice(tokenData);\r\n    });\r\n    rootScope.addEventListener('push_unsubscribe', (tokenData) => {\r\n      this.unregisterDevice(tokenData);\r\n    });\r\n\r\n    rootScope.addEventListener('dialogs_multiupdate', () => {\r\n      //unregisterTopMsgs()\r\n      this.topMessagesDeferred.resolve();\r\n    }, {once: true});\r\n\r\n    rootScope.addEventListener('push_notification_click', (notificationData) => {\r\n      if(notificationData.action === 'push_settings') {\r\n        /* this.topMessagesDeferred.then(() => {\r\n          $modal.open({\r\n            templateUrl: templateUrl('settings_modal'),\r\n            controller: 'SettingsModalController',\r\n            windowClass: 'settings_modal_window mobile_modal',\r\n            backdrop: 'single'\r\n          })\r\n        }); */\r\n        return;\r\n      }\r\n\r\n      if(notificationData.action === 'mute1d') {\r\n        apiManager.invokeApi('account.updateDeviceLocked', {\r\n          period: 86400\r\n        }).then(() => {\r\n          // var toastData = toaster.pop({\r\n          //   type: 'info',\r\n          //   body: _('push_action_mute1d_success'),\r\n          //   bodyOutputType: 'trustedHtml',\r\n          //   clickHandler: () => {\r\n          //     toaster.clear(toastData)\r\n          //   },\r\n          //   showCloseButton: false\r\n          // })\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      const peerId = notificationData.custom && notificationData.custom.peerId.toPeerId();\r\n      console.log('click', notificationData, peerId);\r\n      if(peerId) {\r\n        this.topMessagesDeferred.then(() => {\r\n          if(notificationData.custom.channel_id &&\r\n              !appChatsManager.hasChat(notificationData.custom.channel_id)) {\r\n            return;\r\n          }\r\n\r\n          if(peerId.isUser() && !appUsersManager.hasUser(peerId)) {\r\n            return;\r\n          }\r\n\r\n          rootScope.dispatchEvent('history_focus', {\r\n            peerId,\r\n            mid: +notificationData.custom.msg_id\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private toggleToggler(enable = rootScope.idle.isIDLE) {\r\n    if(IS_MOBILE) return;\r\n\r\n    const resetTitle = () => {\r\n      this.titleChanged = false;\r\n      document.title = this.titleBackup;\r\n      this.setFavicon();\r\n    };\r\n\r\n    window.clearInterval(this.titleInterval);\r\n    this.titleInterval = 0;\r\n\r\n    if(!enable) {\r\n      resetTitle();\r\n    } else {\r\n      this.titleInterval = window.setInterval(() => {\r\n        const count = this.notificationsCount;\r\n        if(!count) {\r\n          this.toggleToggler(false);\r\n        } else if(this.titleChanged) {\r\n          resetTitle();\r\n        } else {\r\n          this.titleChanged = true;\r\n          document.title = I18n.format('Notifications.Count', true, [count]);\r\n          //this.setFavicon('assets/img/favicon_unread.ico');\r\n\r\n          // fetch('assets/img/favicon.ico')\r\n          // .then(res => res.blob())\r\n          // .then(blob => {\r\n            // const img = document.createElement('img');\r\n            // img.src = URL.createObjectURL(blob);\r\n\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = 32 * window.devicePixelRatio;\r\n            canvas.height = canvas.width;\r\n  \r\n            const ctx = canvas.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI, false);\r\n            ctx.fillStyle = '#3390ec';\r\n            ctx.fill();\r\n\r\n            let fontSize = 24;\r\n            let str = '' + count;\r\n            if(count < 10) {\r\n              fontSize = 22;\r\n            } else if(count < 100) {\r\n              fontSize = 20;\r\n            } else {\r\n              str = '99+';\r\n              fontSize = 16;\r\n            }\r\n\r\n            fontSize *= window.devicePixelRatio;\r\n            \r\n            ctx.font = `700 ${fontSize}px ${fontFamily}`;\r\n            ctx.textBaseline = 'middle';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillText(str, canvas.width / 2, canvas.height * .5625);\r\n\r\n            /* const ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height); */\r\n  \r\n            this.setFavicon(canvas.toDataURL());\r\n          // });\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  public updateLocalSettings = () => {\r\n    Promise.all(['notify_nodesktop', 'notify_volume', 'notify_novibrate', 'notify_nopreview', 'notify_nopush'].map(k => stateStorage.get(k as any)))\r\n    .then((updSettings) => {\r\n      this.settings.nodesktop = updSettings[0];\r\n      this.settings.volume = updSettings[1] === undefined ? 0.5 : updSettings[1];\r\n      this.settings.novibrate = updSettings[2];\r\n      this.settings.nopreview = updSettings[3];\r\n      this.settings.nopush = updSettings[4];\r\n\r\n      if(this.pushInited) {\r\n        const needPush = !this.settings.nopush && !this.settings.nodesktop && webPushApiManager.isAvailable || false;\r\n        const hasPush = this.registeredDevice !== false;\r\n        if(needPush !== hasPush) {\r\n          if(needPush) {\r\n            webPushApiManager.subscribe();\r\n          } else {\r\n            webPushApiManager.unsubscribe();\r\n          }\r\n        }\r\n      }\r\n\r\n      webPushApiManager.setSettings(this.settings);\r\n    });\r\n\r\n    appStateManager.getState().then(state => {\r\n      this.settings.nosound = !state.settings.notifications.sound;\r\n    });\r\n  }\r\n\r\n  public getLocalSettings() {\r\n    return this.settings;\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then(settings => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId, \r\n        settings\r\n      });\r\n      \r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    //this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then(value => {\r\n      if(value) {\r\n        apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings', \r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          }, \r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings',\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifyExceptions() {\r\n    apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n    .then((updates) => {\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then(value => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private setFavicon(href: string = 'assets/img/favicon.ico') {\r\n    if(this.prevFavicon === href) {\r\n      return;\r\n    }\r\n\r\n    const link = this.faviconEl.cloneNode() as HTMLLinkElement;\r\n    link.href = href;\r\n    this.faviconEl.parentNode.replaceChild(link, this.faviconEl);\r\n    this.faviconEl = link;\r\n\r\n    this.prevFavicon = href;\r\n  }\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId, \r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n    \r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n    }\r\n\r\n    //rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      ((peerNotifySettings.mute_until * 1000) > tsNow() || peerNotifySettings.silent);\r\n  }\r\n\r\n  public getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  public getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    //if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(let i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === rootScope.myId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n\r\n  public start() {\r\n    this.updateLocalSettings();\r\n    rootScope.addEventListener('settings_updated', this.updateLocalSettings);\r\n    webPushApiManager.start();\r\n\r\n    if(!this.notificationsUiSupport) {\r\n      return false;\r\n    }\r\n\r\n    if('Notification' in window && Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n      window.addEventListener('click', this.requestPermission);\r\n    }\r\n\r\n    try {\r\n      if('onbeforeunload' in window) {\r\n        window.addEventListener('beforeunload', this.clear);\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  private stop() {\r\n    this.clear();\r\n    window.clearInterval(this.titleInterval);\r\n    this.titleInterval = 0;\r\n    this.setFavicon();\r\n    this.stopped = true;\r\n  }\r\n\r\n  private requestPermission = () => {\r\n    Notification.requestPermission();\r\n    window.removeEventListener('click', this.requestPermission);\r\n  };\r\n\r\n  public notify(data: NotifyOptions) {\r\n    //console.log('notify', data, rootScope.idle.isIDLE, this.notificationsUiSupport, this.stopped);\r\n    \r\n    if(this.stopped) {\r\n      return;\r\n    }\r\n\r\n    // FFOS Notification blob src bug workaround\r\n    /* if(Config.Navigator.ffos && !Config.Navigator.ffos2p) {\r\n      data.image = 'https://telegram.org/img/t_logo.png'\r\n    }\r\n    else if (data.image && !angular.isString(data.image)) {\r\n      if (Config.Navigator.ffos2p) {\r\n        FileManager.getDataUrl(data.image, 'image/jpeg').then(function (url) {\r\n          data.image = url\r\n          notify(data)\r\n        })\r\n        return false\r\n      } else {\r\n        data.image = FileManager.getUrl(data.image, 'image/jpeg')\r\n      }\r\n    }\r\n    else */ if(!data.image) {\r\n      data.image = 'assets/img/logo_filled_rounded.png';\r\n    }\r\n    // console.log('notify image', data.image)\r\n\r\n    this.notificationsCount++;\r\n    if(!this.titleInterval) {\r\n      this.toggleToggler();\r\n    }\r\n\r\n    const idx = ++this.notificationIndex;\r\n    const key = data.key || 'k' + idx;\r\n    this.notificationsShown[key] = true;\r\n\r\n    const now = tsNow();\r\n    if(this.settings.volume > 0 && !this.settings.nosound/* &&\r\n      (\r\n        !data.tag ||\r\n        !this.soundsPlayed[data.tag] ||\r\n        now > this.soundsPlayed[data.tag] + 60000\r\n      ) */\r\n    ) {\r\n      this.testSound(this.settings.volume);\r\n      this.soundsPlayed[data.tag] = now;\r\n    }\r\n\r\n    if(!this.notificationsUiSupport ||\r\n      'Notification' in window && Notification.permission !== 'granted') {\r\n      return false;\r\n    }\r\n\r\n    if(this.settings.nodesktop) {\r\n      if(this.vibrateSupport && !this.settings.novibrate) {\r\n        navigator.vibrate([200, 100, 200]);\r\n        return;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let notification: MyNotification;\r\n\r\n    if('Notification' in window) {\r\n      try {\r\n        if(data.tag) {\r\n          for(let i in this.notificationsShown) {\r\n            const notification = this.notificationsShown[i];\r\n            if(typeof(notification) !== 'boolean' && notification.tag === data.tag) {\r\n              notification.hidden = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        notification = new Notification(data.title, {\r\n          icon: data.image || '',\r\n          body: data.message || '',\r\n          tag: data.tag || '',\r\n          silent: data.silent || false\r\n        });\r\n\r\n        //console.log('notify constructed notification');\r\n      } catch(e) {\r\n        this.notificationsUiSupport = false;\r\n        webPushApiManager.setLocalNotificationsDisabled();\r\n        return;\r\n      }\r\n    } /* else if('mozNotification' in navigator) {\r\n      notification = navigator.mozNotification.createNotification(data.title, data.message || '', data.image || '')\r\n    } else if(notificationsMsSiteMode) {\r\n      window.external.msSiteModeClearIconOverlay()\r\n      window.external.msSiteModeSetIconOverlay('img/icons/icon16.png', data.title)\r\n      window.external.msSiteModeActivate()\r\n      notification = {\r\n        index: idx\r\n      }\r\n    } */ else {\r\n      return;\r\n    }\r\n\r\n    notification.onclick = () => {\r\n      notification.close();\r\n      appRuntimeManager.focus();\r\n      this.clear();\r\n      if(data.onclick) {\r\n        data.onclick();\r\n      }\r\n    };\r\n\r\n    notification.onclose = () => {\r\n      if(!notification.hidden) {\r\n        delete this.notificationsShown[key];\r\n        this.clear();\r\n      }\r\n    };\r\n\r\n    if(notification.show) {\r\n      notification.show();\r\n    }\r\n    this.notificationsShown[key] = notification;\r\n\r\n    if(!IS_MOBILE) {\r\n      setTimeout(() => {\r\n        this.hide(key);\r\n      }, 8000);\r\n    }\r\n  }\r\n\r\n  public testSound(volume: number) {\r\n    const now = tsNow();\r\n    if(this.nextSoundAt && now < this.nextSoundAt && this.prevSoundVolume === volume) {\r\n      return;\r\n    }\r\n\r\n    this.nextSoundAt = now + 1000;\r\n    this.prevSoundVolume = volume;\r\n    const filename = 'assets/audio/notification.mp3';\r\n    const audio = document.createElement('audio');\r\n    audio.autoplay = true;\r\n    audio.setAttribute('mozaudiochannel', 'notification');\r\n    audio.volume = volume;\r\n    audio.innerHTML = `\r\n      <source src=\"${filename}\" type=\"audio/mpeg\" />\r\n      <embed hidden=\"true\" autostart=\"true\" loop=\"false\" volume=\"${volume * 100}\" src=\"${filename}\" />\r\n    `;\r\n    this.notifySoundEl.append(audio);\r\n\r\n    audio.addEventListener('ended', () => {\r\n      audio.remove();\r\n    }, {once: true});\r\n  }\r\n\r\n  public cancel(key: string) {\r\n    const notification = this.notificationsShown[key];\r\n    if(notification) {\r\n      if(this.notificationsCount > 0) {\r\n        --this.notificationsCount;\r\n      }\r\n\r\n      try {\r\n        if(typeof(notification) !== 'boolean' && notification.close) {\r\n          notification.hidden = true;\r\n          notification.close();\r\n        }/*  else if(notificationsMsSiteMode &&\r\n          notification.index === notificationIndex) {\r\n          window.external.msSiteModeClearIconOverlay()\r\n        } */\r\n      } catch(e) {}\r\n\r\n      delete this.notificationsShown[key];\r\n    }\r\n  }\r\n\r\n  private hide(key: string) {\r\n    const notification = this.notificationsShown[key];\r\n    if(notification && typeof(notification) !== 'boolean') {\r\n      try {\r\n        if(notification.close) {\r\n          notification.hidden = true;\r\n          notification.close();\r\n        }\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n  public soundReset(tag: string) {\r\n    delete this.soundsPlayed[tag];\r\n  }\r\n\r\n  public clear() {\r\n    /* if(notificationsMsSiteMode) {\r\n      window.external.msSiteModeClearIconOverlay()\r\n    } else { */\r\n      for(const i in this.notificationsShown) {\r\n        const notification = this.notificationsShown[i];\r\n        try {\r\n          if(typeof(notification) !== 'boolean' && notification.close) {\r\n            notification.close();\r\n          }\r\n        } catch(e) {}\r\n      }\r\n    /* } */\r\n    this.notificationsShown = {};\r\n    this.notificationsCount = 0;\r\n\r\n    webPushApiManager.hidePushNotifications();\r\n  }\r\n\r\n  private registerDevice(tokenData: PushSubscriptionNotify) {\r\n    if(this.registeredDevice && deepEqual(this.registeredDevice, tokenData)) {\r\n      return false;\r\n    }\r\n\r\n    apiManager.invokeApi('account.registerDevice', {\r\n      token_type: tokenData.tokenType,\r\n      token: tokenData.tokenValue,\r\n      other_uids: [],\r\n      app_sandbox: false,\r\n      secret: new Uint8Array()\r\n    }).then(() => {\r\n      this.registeredDevice = tokenData;\r\n    }, (error) => {\r\n      error.handled = true;\r\n    });\r\n  }\r\n\r\n  private unregisterDevice(tokenData: PushSubscriptionNotify) {\r\n    if(!this.registeredDevice) {\r\n      return false;\r\n    }\r\n\r\n    apiManager.invokeApi('account.unregisterDevice', {\r\n      token_type: tokenData.tokenType,\r\n      token: tokenData.tokenValue,\r\n      other_uids: []\r\n    }).then(() => {\r\n      this.registeredDevice = false;\r\n    }, (error) => {\r\n      error.handled = true;\r\n    });\r\n  }\r\n\r\n  public getVibrateSupport() {\r\n    return this.vibrateSupport\r\n  }\r\n}\r\n\r\nconst appNotificationsManager = new AppNotificationsManager();\r\nMOUNT_CLASS_TO.appNotificationsManager = appNotificationsManager;\r\nexport default appNotificationsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\n\nexport const loadedURLs: {[url: string]: boolean} = {};\nconst set = (elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, url: string) => {\n  if(elem instanceof HTMLImageElement || elem instanceof HTMLVideoElement) elem.src = url;\n  else if(elem instanceof SVGImageElement) elem.setAttributeNS(null, 'href', url);\n  else elem.style.backgroundImage = 'url(' + url + ')';\n};\n\n// проблема функции в том, что она не подходит для ссылок, пригодна только для blob'ов, потому что обычным ссылкам нужен 'load' каждый раз.\nexport default function renderImageFromUrl(\n  elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, \n  url: string, \n  callback?: (err?: Event) => void, \n  useCache = true\n) {\n  if(!url) {\n    console.error('renderImageFromUrl: no url?', elem, url);\n    callback && callback();\n    return;\n  }\n\n  if(((loadedURLs[url]/*  && false */) && useCache) || elem instanceof HTMLVideoElement) {\n    if(elem) {\n      set(elem, url);\n    }\n    \n    callback && callback();\n    // callback && getHeavyAnimationPromise().then(() => callback());\n  } else {\n    const isImage = elem instanceof HTMLImageElement;\n    const loader = isImage ? elem as HTMLImageElement : new Image();\n    //const loader = new Image();\n    loader.src = url;\n    //let perf = performance.now();\n    loader.addEventListener('load', () => {\n      if(!isImage && elem) {\n        set(elem, url);\n      }\n\n      loadedURLs[url] = true;\n      //console.log('onload:', url, performance.now() - perf);\n      // TODO: переделать прогрузки аватаров до начала анимации, иначе с этим ожиданием они неприятно появляются\n      // callback && getHeavyAnimationPromise().then(() => callback());\n      callback && callback();\n    }, {once: true});\n\n    if(callback) {\n      loader.addEventListener('error', callback);\n    }\n  }\n}\n\nexport function renderImageFromUrlPromise(elem: Parameters<typeof renderImageFromUrl>[0], url: string, useCache?: boolean) {\n  return new Promise((resolve) => {\n    renderImageFromUrl(elem, url, resolve, useCache);\n  });\n}\n","export default function assumeType<T>(x: unknown): asserts x is T {\r\n  return; // ¯\\_(ツ)_/¯\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport class AppMessagesIdsManager {\r\n  private static MESSAGE_ID_INCREMENT = 0x10000;\r\n  private static MESSAGE_ID_OFFSET = 0xFFFFFFFF;\r\n\r\n  private tempNum = 0;\r\n\r\n  public generateMessageId(messageId: number, temp = false) {\r\n    const q = AppMessagesIdsManager.MESSAGE_ID_OFFSET;\r\n    const num = temp ? ++this.tempNum : 0;\r\n    if(messageId >= q) {\r\n      if(temp) {\r\n        return messageId + (num & (AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1));\r\n      }\r\n\r\n      return messageId;\r\n    }\r\n\r\n    return q + (messageId * AppMessagesIdsManager.MESSAGE_ID_INCREMENT + (num & (AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1)));\r\n  }\r\n\r\n  /**\r\n   * * will ignore outgoing offset\r\n   */\r\n  public getServerMessageId(messageId: number) {\r\n    return this.clearMessageId(messageId, true);\r\n  }\r\n\r\n  public clearMessageId(messageId: number, toServer?: boolean) {\r\n    const q = AppMessagesIdsManager.MESSAGE_ID_OFFSET;\r\n    if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\r\n      return messageId;\r\n    }\r\n\r\n    const l = AppMessagesIdsManager.MESSAGE_ID_INCREMENT - 1;\r\n    const used = messageId & l;\r\n    if(used !== l) {\r\n      messageId -= used + 1;\r\n    }\r\n\r\n    return toServer ? (messageId - q) / AppMessagesIdsManager.MESSAGE_ID_INCREMENT : messageId;\r\n  }\r\n\r\n  public incrementMessageId(messageId: number, increment: number) {\r\n    return this.generateMessageId(this.getServerMessageId(messageId) + increment);\r\n  }\r\n}\r\n\r\nconst appMessagesIdsManager = new AppMessagesIdsManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appMessagesIdsManager = appMessagesIdsManager);\r\nexport default appMessagesIdsManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { CancellablePromise } from \"../helpers/cancellablePromise\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\n\r\nconst TRANSITION_TIME = 200;\r\n\r\nexport default class ProgressivePreloader {\r\n  public preloader: HTMLDivElement;\r\n  public circle: SVGCircleElement;\r\n  private cancelSvg: SVGSVGElement;\r\n  private downloadSvg: HTMLElement;\r\n  \r\n  private tempId = 0;\r\n  public detached = true;\r\n\r\n  public promise: CancellablePromise<any> = null;\r\n\r\n  public isUpload = false;\r\n  private cancelable = true;\r\n  private streamable = false;\r\n  private tryAgainOnFail = true;\r\n  private attachMethod: 'append' | 'prepend' = 'append';\r\n\r\n  public loadFunc: (e?: Event) => {download: CancellablePromise<any>};\r\n\r\n  public totalLength: number;\r\n\r\n  constructor(options?: Partial<{\r\n    isUpload: ProgressivePreloader['isUpload'],\r\n    cancelable: ProgressivePreloader['cancelable'], \r\n    streamable: ProgressivePreloader['streamable'], \r\n    tryAgainOnFail: ProgressivePreloader['tryAgainOnFail'],\r\n    attachMethod: ProgressivePreloader['attachMethod']\r\n  }>) {\r\n    if(options) {\r\n      safeAssign(this, options);\r\n    }\r\n  }\r\n\r\n  public constructContainer(options: Partial<{\r\n    color: 'transparent',\r\n    bold: boolean\r\n  }> = {}) {\r\n    if(!this.preloader) {\r\n      this.preloader = document.createElement('div');\r\n      this.preloader.classList.add('preloader-container');\r\n\r\n      if(options.color) {\r\n        this.preloader.classList.add('preloader-' + options.color);\r\n      }\r\n\r\n      if(options.bold) {\r\n        this.preloader.classList.add('preloader-bold');\r\n      }\r\n  \r\n      if(this.streamable) {\r\n        this.preloader.classList.add('preloader-streamable');\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructDownloadIcon() {\r\n    this.constructContainer();\r\n  }\r\n\r\n  public construct() {\r\n    this.construct = null;\r\n\r\n    this.constructContainer();\r\n    \r\n    this.preloader.innerHTML = `\r\n    <div class=\"you-spin-me-round\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"${this.streamable ? '25 25 50 50' : '27 27 54 54'}\">\r\n    <circle class=\"preloader-path-new\" cx=\"${this.streamable ? '50' : '54'}\" cy=\"${this.streamable ? '50' : '54'}\" r=\"${this.streamable ? 19 : 24}\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n    </svg>\r\n    </div>`;\r\n\r\n    if(this.streamable) {\r\n      this.totalLength = 118.61124420166016;\r\n    } else {\r\n      this.totalLength = 149.82473754882812;\r\n    }\r\n\r\n    if(this.cancelable) {\r\n      this.preloader.innerHTML += `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-close\" viewBox=\"0 0 24 24\">\r\n        <g fill=\"none\" fill-rule=\"evenodd\">\r\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\r\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5.20970461,5.38710056 L5.29289322,5.29289322 C5.65337718,4.93240926 6.22060824,4.90467972 6.61289944,5.20970461 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3466228,19.0675907 17.7793918,19.0953203 17.3871006,18.7902954 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 L5.29289322,5.29289322 L5.20970461,5.38710056 Z\"/>\r\n        </g>\r\n      </svg>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-download\" viewBox=\"0 0 24 24\">\r\n        <g fill=\"none\" fill-rule=\"evenodd\">\r\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\r\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z\"/>\r\n        </g>\r\n      </svg>`;\r\n\r\n      this.downloadSvg = this.preloader.lastElementChild as HTMLElement;\r\n      this.cancelSvg = this.downloadSvg.previousElementSibling as any;\r\n    } else {\r\n      this.preloader.classList.add('preloader-swing');\r\n    }\r\n    \r\n    this.circle = this.preloader.firstElementChild.firstElementChild.firstElementChild as SVGCircleElement;\r\n\r\n    if(this.cancelable) {\r\n      attachClickEvent(this.preloader, this.onClick);\r\n    }\r\n  }\r\n\r\n  public onClick = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(this.preloader.classList.contains('manual')) {\r\n      if(this.loadFunc) {\r\n        this.loadFunc(e);\r\n      }\r\n    } else {\r\n      if(this.promise && this.promise.cancel) {\r\n        this.promise.cancel();\r\n      }\r\n    }\r\n  };\r\n\r\n  public setDownloadFunction(func: ProgressivePreloader['loadFunc']) {\r\n    this.loadFunc = func;\r\n  }\r\n\r\n  public setManual() {\r\n    this.preloader.classList.add('manual');\r\n    this.setProgress(0);\r\n  }\r\n\r\n  public attachPromise(promise: CancellablePromise<any>) {\r\n    if(this.isUpload && this.promise) return;\r\n\r\n    this.promise = promise;\r\n\r\n    const tempId = --this.tempId;\r\n    const startTime = Date.now();\r\n\r\n    const onEnd = (err: Error) => {\r\n      promise.notify = promise.notifyAll = null;\r\n\r\n      if(tempId !== this.tempId) {\r\n        return;\r\n      }\r\n\r\n      const elapsedTime = Date.now() - startTime;\r\n\r\n      //console.log('[PP]: end', this.detached, performance.now());\r\n\r\n      if(!err && this.cancelable) {\r\n        this.setProgress(100);\r\n\r\n        const delay = TRANSITION_TIME * 0.75;\r\n\r\n        if(elapsedTime < delay) {\r\n          this.detach();\r\n        } else {\r\n          setTimeout(() => { // * wait for transition complete\r\n            if(tempId === this.tempId) {\r\n              this.detach();\r\n            }\r\n          }, delay);\r\n        }\r\n      } else {\r\n        if(this.tryAgainOnFail) {\r\n          this.attach(this.preloader.parentElement);\r\n          fastRaf(() => {\r\n            this.setManual();\r\n          });\r\n        } else {\r\n          this.detach();\r\n        }\r\n      }\r\n      \r\n      this.promise = promise = null;\r\n    };\r\n    \r\n    promise\r\n    .then(() => onEnd(null))\r\n    .catch((err) => onEnd(err));\r\n\r\n    if(promise.addNotifyListener) {\r\n      promise.addNotifyListener((details: {done: number, total: number}) => {\r\n        /* if(details.done >= details.total) {\r\n          onEnd();\r\n        } */\r\n\r\n        if(tempId !== this.tempId) return;\r\n\r\n        //console.log('preloader download', promise, details);\r\n        const percents = details.done / details.total * 100;\r\n        this.setProgress(percents);\r\n      });\r\n    }\r\n  }\r\n\r\n  public attach(elem: Element, reset = false, promise?: CancellablePromise<any>) {\r\n    if(this.construct) {\r\n      this.construct();\r\n    }\r\n\r\n    if(this.preloader.parentElement) {\r\n      this.preloader.classList.remove('manual');\r\n    }\r\n\r\n    this.detached = false;\r\n\r\n    if(promise/*  && false */) {\r\n      this.attachPromise(promise);\r\n    }\r\n\r\n    if(this.detached || this.preloader.parentElement !== elem) {\r\n      const useRafs = isInDOM(this.preloader) ? 1 : 2;\r\n      if(this.preloader.parentElement !== elem) {\r\n        elem[this.attachMethod](this.preloader);\r\n      }\r\n\r\n      SetTransition(this.preloader, 'is-visible', true, TRANSITION_TIME, undefined, useRafs);\r\n    }\r\n\r\n    if(this.cancelable && reset) {\r\n      this.setProgress(0);\r\n    }\r\n  }\r\n  \r\n  public detach() {\r\n    if(this.detached) {\r\n      return;\r\n    }\r\n    //return;\r\n\r\n    this.detached = true;\r\n\r\n    //return;\r\n    \r\n    if(this.preloader && this.preloader.parentElement) {\r\n      /* setTimeout(() =>  *///fastRaf(() => {\r\n        /* if(!this.detached) return;\r\n        this.detached = true; */\r\n\r\n        // fastRaf(() => {\r\n          //console.log('[PP]: detach after rAF', this.detached, performance.now());\r\n\r\n          // if(!this.detached || !this.preloader.parentElement) {\r\n          //   return;\r\n          // }\r\n\r\n          SetTransition(this.preloader, 'is-visible', false, TRANSITION_TIME, () => {\r\n            this.preloader.remove();\r\n          }, 1);\r\n        // });\r\n      //})/* , 5e3) */;\r\n    }\r\n  }\r\n  \r\n  public setProgress(percents: number) {\r\n    if(!this.totalLength && !isInDOM(this.circle)) {\r\n      return;\r\n    }\r\n    \r\n    if(percents === 0) {\r\n      this.circle.style.strokeDasharray = '';\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      if(!this.totalLength) {\r\n        this.totalLength = this.circle.getTotalLength();\r\n      }\r\n\r\n      //console.log('setProgress', (percents / 100 * totalLength));\r\n      this.circle.style.strokeDasharray = '' + Math.max(5, percents / 100 * this.totalLength) + ', ' + this.totalLength;\r\n    } catch(err) {}\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { makeMediaSize, MediaSize } from \"./mediaSizes\";\r\nimport { pause } from \"./schedulers/pause\";\r\nimport { IS_APPLE_MOBILE } from \"../environment/userAgent\";\r\n\r\nexport function scaleMediaElement(options: {\r\n  media: CanvasImageSource, \r\n  mediaSize: MediaSize, \r\n  boxSize: MediaSize, \r\n  quality?: number,\r\n  mimeType?: 'image/jpeg' | 'image/png'\r\n}): Promise<{blob: Blob, size: MediaSize}> {\r\n  return new Promise((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    const size = options.mediaSize.aspectFitted(options.boxSize);\r\n    canvas.width = size.width * window.devicePixelRatio;\r\n    canvas.height = size.height * window.devicePixelRatio;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(options.media, 0, 0, canvas.width, canvas.height);\r\n    canvas.toBlob(blob => {\r\n      resolve({blob, size});\r\n    }, options.mimeType ?? 'image/jpeg', options.quality ?? 1);\r\n  });\r\n}\r\n\r\nexport function preloadVideo(url: string): Promise<HTMLVideoElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const video = document.createElement('video');\r\n    video.volume = 0;\r\n    video.addEventListener('loadedmetadata', () => resolve(video), {once: true});\r\n    video.addEventListener('error', reject, {once: true});\r\n    video.src = url;\r\n  });\r\n}\r\n\r\nexport function createPosterFromMedia(media: HTMLVideoElement | HTMLImageElement) {\r\n  let width: number, height: number;\r\n  if(media instanceof HTMLVideoElement) {\r\n    width = media.videoWidth;\r\n    height = media.videoHeight;\r\n  } else {\r\n    width = media.naturalWidth;\r\n    height = media.naturalHeight;\r\n  }\r\n\r\n  return scaleMediaElement({\r\n    media, \r\n    mediaSize: makeMediaSize(width, height), \r\n    boxSize: makeMediaSize(320, 240),\r\n    quality: .9\r\n  });\r\n}\r\n\r\nexport function createPosterFromVideo(video: HTMLVideoElement): ReturnType<typeof scaleMediaElement> {\r\n  return new Promise((resolve, reject) => {\r\n    video.onseeked = () => {\r\n      video.onseeked = () => {\r\n        createPosterFromMedia(video).then(resolve);\r\n\r\n        video.onseeked = undefined;\r\n      };\r\n\r\n      video.currentTime = 0;\r\n    };\r\n    \r\n    video.onerror = reject;\r\n    video.currentTime = Math.min(video.duration, 1);\r\n  });\r\n}\r\n\r\nexport async function createPosterForVideo(url: string) {\r\n  const video = await preloadVideo(url);\r\n\r\n  return Promise.race([\r\n    pause(2000) as Promise<undefined>,\r\n    createPosterFromVideo(video),\r\n  ]);\r\n}\r\n\r\nexport function onMediaLoad(media: HTMLMediaElement, readyState = media.HAVE_METADATA, useCanplayOnIos?: boolean) {\r\n  return new Promise<void>((resolve) => {\r\n    if(media.readyState >= readyState) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    media.addEventListener(IS_APPLE_MOBILE && !useCanplayOnIos ? 'loadeddata' : 'canplay', () => resolve(), {once: true});\r\n  });\r\n}\r\n\r\nexport async function getFilesFromEvent(e: ClipboardEvent | DragEvent, onlyTypes = false): Promise<any[]> {\r\n  const files: any[] = [];\r\n\r\n  const scanFiles = async(entry: any, item: DataTransferItem) => {\r\n    if(entry.isDirectory) {\r\n      const directoryReader = entry.createReader();\r\n      await new Promise<void>((resolve, reject) => {\r\n        directoryReader.readEntries(async(entries: any) => {\r\n          for(const entry of entries) {\r\n            await scanFiles(entry, item);\r\n          }\r\n\r\n          resolve();\r\n        });\r\n      });\r\n    } else if(entry) {\r\n      if(onlyTypes) {\r\n        files.push(entry.type);\r\n      } else {\r\n        const itemFile = item.getAsFile(); // * Safari can't handle entry.file with pasting\r\n        const file = entry instanceof File ? \r\n          entry : \r\n          (\r\n            entry instanceof DataTransferItem ? \r\n              entry.getAsFile() : \r\n              await new Promise((resolve, reject) => entry.file(resolve, (err: any) => resolve(itemFile)))\r\n          );\r\n\r\n        /* if(!onlyTypes) {\r\n          console.log('getFilesFromEvent: got file', item, file);\r\n        } */\r\n\r\n        if(!file) return;\r\n        files.push(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  if(e instanceof DragEvent && e.dataTransfer.files && !e.dataTransfer.items) {\r\n    for(let i = 0; i < e.dataTransfer.files.length; i++) {\r\n      const file = e.dataTransfer.files[i];\r\n      files.push(onlyTypes ? file.type : file);\r\n    }\r\n  } else {\r\n    // @ts-ignore\r\n    const items = (e.dataTransfer || e.clipboardData || e.originalEvent.clipboardData).items;\r\n\r\n    const promises: Promise<any>[] = [];\r\n    for(let i = 0; i < items.length; ++i) {\r\n      const item: DataTransferItem = items[i];\r\n      if(item.kind === 'file') {\r\n        const entry = (onlyTypes ? item : item.webkitGetAsEntry()) || item.getAsFile();\r\n        promises.push(scanFiles(entry, item));\r\n      }\r\n    }\r\n    \r\n    await Promise.all(promises);\r\n  }\r\n\r\n  /* if(!onlyTypes) {\r\n    console.log('getFilesFromEvent: got files:', e, files);\r\n  } */\r\n  \r\n  return files;\r\n}\r\n\r\nexport function requestFile(accept?: string) {\r\n  const input = document.createElement('input');\r\n  input.type = 'file';\r\n  input.style.display = 'none';\r\n\r\n  if(accept) {\r\n    input.accept = accept;\r\n  }\r\n\r\n  document.body.append(input);\r\n\r\n  const promise = new Promise<File>((resolve, reject) => {\r\n    input.addEventListener('change', (e: any) => {\r\n      const file: File = e.target.files[0];\r\n      if(!file) {\r\n        reject('NO_FILE_SELECTED');\r\n        return;\r\n      }\r\n  \r\n      resolve(file);\r\n    }, {once: true});\r\n  }).finally(() => {\r\n    input.remove();\r\n  });\r\n\r\n  input.click();\r\n\r\n  return promise;\r\n}\r\n","'use strict'\n//@flow\n\n/** * * * * * * * * * *\n * Big Integer Library *\n * Created 2000        *\n * Leemon Baird        *\n * www.leemon.com      *\n * * * * * * * * * * * */\n\n////////////////////////////////////////////////////////////////////////////////////////\n// These functions are designed to avoid frequent dynamic memory allocation in the inner loop.\n// For most functions, if it needs a BigInt as a local variable it will actually use\n// a global, and will only allocate to it only when it's not the right size.  This ensures\n// that when a function is called repeatedly with same-sized parameters, it only allocates\n// memory on the first call.\n//\n// Note that for cryptographic purposes, the calls to Math.random() must\n// be replaced with calls to a better pseudorandom number generator.\n//\n// In the following, \"bigInt\" means a bigInt with at least one leading zero element,\n// and \"integer\" means a nonnegative integer less than radix.  In some cases, integer\n// can be negative.  Negative bigInts are 2s complement.\n//\n// The following functions do not modify their inputs.\n// Those returning a bigInt, string, or Array will dynamically allocate memory for that value.\n// Those returning a boolean will return the integer 0 (false) or 1 (true).\n// Those returning boolean or int will not allocate memory except possibly on the first\n// time they're called with a given parameter size.\n//\n// bigInt  add(x,y)               //return (x+y) for bigInts x and y.\n// bigInt  addInt(x,n)            //return (x+n) where x is a bigInt and n is an integer.\n// string  bigInt2str(x,base)     //return a string form of bigInt x in a given base, with 2 <= base <= 95\n// int     bitSize(x)             //return how many bits long the bigInt x is, not counting leading zeros\n// bigInt  dup(x)                 //return a copy of bigInt x\n// boolean equals(x,y)            //is the bigInt x equal to the bigint y?\n// boolean equalsInt(x,y)         //is bigint x equal to integer y?\n// bigInt  expand(x,n)            //return a copy of x with at least n elements, adding leading zeros if needed\n// Array   findPrimes(n)          //return array of all primes less than integer n\n// bigInt  GCD(x,y)               //return greatest common divisor of bigInts x and y (each with same number of elements).\n// boolean greater(x,y)           //is x>y?  (x and y are nonnegative bigInts)\n// boolean greaterShift(x,y,shift)//is (x <<(shift*bpe)) > y?\n// bigInt  int2bigInt(t,n,m)      //return a bigInt equal to integer t, with at least n bits and m array elements\n// bigInt  inverseMod(x,n)        //return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\n// int     inverseModInt(x,n)     //return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\n// boolean isZero(x)              //is the bigInt x equal to zero?\n// boolean millerRabin(x,b)       //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is bigInt, 1<b<x)\n// boolean millerRabinInt(x,b)    //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is int,    1<b<x)\n// bigInt  mod(x,n)               //return a new bigInt equal to (x mod n) for bigInts x and n.\n// int     modInt(x,n)            //return x mod n for bigInt x and integer n.\n// bigInt  mult(x,y)              //return x*y for bigInts x and y. This is faster when y<x.\n// bigInt  multMod(x,y,n)         //return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\n// boolean negative(x)            //is bigInt x negative?\n// bigInt  powMod(x,y,n)          //return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\n// bigInt  randBigInt(n,s)        //return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n// bigInt  randTruePrime(k)       //return a new, random, k-bit, true prime bigInt using Maurer's algorithm.\n// bigInt  randProbPrime(k)       //return a new, random, k-bit, probable prime bigInt (probability it's composite less than 2^-80).\n// bigInt  str2bigInt(s,b,n,m)    //return a bigInt for number represented in string s in base b with at least n bits and m array elements\n// bigInt  sub(x,y)               //return (x-y) for bigInts x and y.  Negative answers will be 2s complement\n// bigInt  trim(x,k)              //return a copy of x with exactly k leading zero elements\n//\n//\n// The following functions each have a non-underscored version, which most users should call instead.\n// These functions each write to a single parameter, and the caller is responsible for ensuring the array\n// passed in is large enough to hold the result.\n//\n// void    addInt_(x,n)          //do x=x+n where x is a bigInt and n is an integer\n// void    add_(x,y)             //do x=x+y for bigInts x and y\n// void    copy_(x,y)            //do x=y on bigInts x and y\n// void    copyInt_(x,n)         //do x=n on bigInt x and integer n\n// void    GCD_(x,y)             //set x to the greatest common divisor of bigInts x and y, (y is destroyed).  (This never overflows its array).\n// boolean inverseMod_(x,n)      //do x=x**(-1) mod n, for bigInts x and n. Returns 1 (0) if inverse does (doesn't) exist\n// void    mod_(x,n)             //do x=x mod n for bigInts x and n. (This never overflows its array).\n// void    mult_(x,y)            //do x=x*y for bigInts x and y.\n// void    multMod_(x,y,n)       //do x=x*y  mod n for bigInts x,y,n.\n// void    powMod_(x,y,n)        //do x=x**y mod n, where x,y,n are bigInts (n is odd) and ** is exponentiation.  0**0=1.\n// void    randBigInt_(b,n,s)    //do b = an n-bit random BigInt. if s=1, then nth bit (most significant bit) is set to 1. n>=1.\n// void    randTruePrime_(ans,k) //do ans = a random k-bit true random prime (not just probable prime) with 1 in the msb.\n// void    sub_(x,y)             //do x=x-y for bigInts x and y. Negative answers will be 2s complement.\n//\n// The following functions do NOT have a non-underscored version.\n// They each write a bigInt result to one or more parameters.  The caller is responsible for\n// ensuring the arrays passed in are large enough to hold the results.\n//\n// void addShift_(x,y,ys)       //do x=x+(y<<(ys*bpe))\n// void carry_(x)               //do carries and borrows so each element of the bigInt x fits in bpe bits.\n// void divide_(x,y,q,r)        //divide x by y giving quotient q and remainder r\n// int  divInt_(x,n)            //do x=floor(x/n) for bigInt x and integer n, and return the remainder. (This never overflows its array).\n// void eGCD_(x,y,d,a,b)        //sets a,b,d to positive bigInts such that d = GCD_(x,y) = a*x-b*y\n// void halve_(x)               //do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement.  (This never overflows its array).\n// void leftShift_(x,n)         //left shift bigInt x by n bits.  n<bpe.\n// void linComb_(x,y,a,b)       //do x=a*x+b*y for bigInts x and y and integers a and b\n// void linCombShift_(x,y,b,ys) //do x=x+b*(y<<(ys*bpe)) for bigInts x and y, and integers b and ys\n// void mont_(x,y,n,np)         //Montgomery multiplication (see comments where the function is defined)\n// void multInt_(x,n)           //do x=x*n where x is a bigInt and n is an integer.\n// void rightShift_(x,n)        //right shift bigInt x by n bits.  0 <= n < bpe. (This never overflows its array).\n// void squareMod_(x,n)         //do x=x*x  mod n for bigInts x,n\n// void subShift_(x,y,ys)       //do x=x-(y<<(ys*bpe)). Negative answers will be 2s complement.\n//\n// The following functions are based on algorithms from the _Handbook of Applied Cryptography_\n//    powMod_()           = algorithm 14.94, Montgomery exponentiation\n//    eGCD_,inverseMod_() = algorithm 14.61, Binary extended GCD_\n//    GCD_()              = algorothm 14.57, Lehmer's algorithm\n//    mont_()             = algorithm 14.36, Montgomery multiplication\n//    divide_()           = algorithm 14.20  Multiple-precision division\n//    squareMod_()        = algorithm 14.16  Multiple-precision squaring\n//    randTruePrime_()    = algorithm  4.62, Maurer's algorithm\n//    millerRabin()       = algorithm  4.24, Miller-Rabin algorithm\n//\n// Profiling shows:\n//     randTruePrime_() spends:\n//         10% of its time in calls to powMod_()\n//         85% of its time in calls to millerRabin()\n//     millerRabin() spends:\n//         99% of its time in calls to powMod_()   (always with a base of 2)\n//     powMod_() spends:\n//         94% of its time in calls to mont_()  (almost always with x==y)\n//\n// This suggests there are several ways to speed up this library slightly:\n//     - convert powMod_ to use a Montgomery form of k-ary window (or maybe a Montgomery form of sliding window)\n//         -- this should especially focus on being fast when raising 2 to a power mod n\n//     - convert randTruePrime_() to use a minimum r of 1/3 instead of 1/2 with the appropriate change to the test\n//     - tune the parameters in randTruePrime_(), including c, m, and recLimit\n//     - speed up the single loop in mont_() that takes 95% of the runtime, perhaps by reducing checking\n//       within the loop when all the parameters are the same length.\n//\n// There are several ideas that look like they wouldn't help much at all:\n//     - replacing trial division in randTruePrime_() with a sieve (that speeds up something taking almost no time anyway)\n//     - increase bpe from 15 to 30 (that would help if we had a 32*32->64 multiplier, but not with JavaScript's 32*32->32)\n//     - speeding up mont_(x,y,n,np) when x==y by doing a non-modular, non-Montgomery square\n//       followed by a Montgomery reduction.  The intermediate answer will be twice as long as x, so that\n//       method would be slower.  This is unfortunate because the code currently spends almost all of its time\n//       doing mont_(x,x,...), both for randTruePrime_() and powMod_().  A faster method for Montgomery squaring\n//       would have a large impact on the speed of randTruePrime_() and powMod_().  HAC has a couple of poorly-worded\n//       sentences that seem to imply it's faster to do a non-modular square followed by a single\n//       Montgomery reduction, but that's obviously wrong.\n////////////////////////////////////////////////////////////////////////////////////////\n\nexport type Bool = 1 | 0\n\n//globals\nexport var bpe = 0 //bits stored per array element\nvar mask = 0 //AND this with an array element to chop it down to bpe bits\nvar radix = mask + 1 //equals 2^bpe.  A single 1 bit to the left of the last bit of mask.\n\n//the digits for converting to different bases\nvar digitsStr =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\\\\\'\"+-'\n\n//initialize the global variables\n\n//bpe=number of bits in the mantissa on this platform\nfor (bpe = 0; 1 << (bpe + 1) > 1 << bpe; bpe++);\nbpe >>= 1 //bpe=number of bits in one element of the array representing the bigInt\nmask = (1 << bpe) - 1 //AND the mask with an integer to get its bpe least significant bits\nradix = mask + 1 //2^bpe.  a single 1 bit to the left of the first bit of mask\nexport var one = int2bigInt(1, 1, 1) //constant used in powMod_()\nexport var zero = int2bigInt(0, 1, 1)\n\n//the following global variables are scratchpad memory to\n//reduce dynamic memory allocation in the inner loop\nvar t: number[] | number = new Array(0)\nvar ss = t //used in mult_()\nvar s0 = t //used in multMod_(), squareMod_()\n// var s1=t;    //used in powMod_(), multMod_(), squareMod_()\n// var s2=t;    //used in powMod_(), multMod_()\nvar s3 = t //used in powMod_()\nvar s4 = t,\n    s5 = t //used in mod_()\nvar s6 = t //used in bigInt2str()\nvar s7 = t //used in powMod_()\nvar T = t //used in GCD_()\nvar sa = t //used in mont_()\nvar mr_x1 = t,\n    mr_r = t,\n    mr_a = t, //used in millerRabin()\n    eg_v = t,\n    eg_u = t,\n    eg_A = t,\n    eg_B = t,\n    eg_C = t,\n    eg_D = t, //used in eGCD_(), inverseMod_()\n    //, md_q1=t, md_q2=t, md_q3=t, md_r=t, md_r1=t, md_r2=t, md_tt=t, //used in mod_()\n\n    primes = t,\n    pows = t,\n    s_i = t,\n    s_i2 = t,\n    s_R = t,\n    s_rm = t,\n    s_q = t,\n    s_n1 = t,\n    s_a = t,\n    s_r2 = t,\n    s_n = t,\n    s_b = t,\n    s_d = t,\n    s_x1 = t,\n    s_x2 = t,\n    s_aa = t, //used in randTruePrime_()\n    rpprb = t //used in randProbPrimeRounds() (which also uses \"primes\")\n\n////////////////////////////////////////////////////////////////////////////////////////\n\nvar k, buff\n\n/**\n * return array of all primes less than integer n\n *\n * @param {number} n\n * @returns {number[]}\n */\nexport function findPrimes(n: number): number[] {\n  var i, s, p, ans\n  s = new Array(n)\n  for (i = 0; i < n; i++) s[i] = 0\n  s[0] = 2\n  p = 0 //first p elements of s are primes, the rest are a sieve\n  for (; s[p] < n; ) {\n    //s[p] is the pth prime\n    for (\n      i = s[p] * s[p];\n      i < n;\n      i += s[p] //mark multiples of s[p]\n    )\n      s[i] = 1\n    p++\n    s[p] = s[p - 1] + 1\n    for (; s[p] < n && s[s[p]]; s[p]++); //find next prime (where s[p]==0)\n  }\n  ans = new Array(p)\n  for (i = 0; i < p; i++) ans[i] = s[i]\n  return ans\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x is a bigInt, and b is an integer, with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number} b\n * @returns {(0 | 1)}\n */\nexport function millerRabinInt(x: number[], b: number): Bool {\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copyInt_(mr_a, b)\n  return millerRabin(x, mr_a)\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x and b are bigInts with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number[]} b\n * @returns {(0 | 1)}\n */\nexport function millerRabin(x: number[], b: number[]): Bool {\n  var i, j, k, s\n\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copy_(mr_a, b)\n  copy_(mr_r, x)\n  copy_(mr_x1, x)\n\n  addInt_(mr_r, -1)\n  addInt_(mr_x1, -1)\n\n  //s=the highest power of two that divides mr_r\n  k = 0\n  for (i = 0; i < mr_r.length; i++)\n    for (j = 1; j < mask; j <<= 1)\n      if (x[i] & j) {\n        s = k < mr_r.length + bpe ? k : 0\n        i = mr_r.length\n        j = mask\n      } else k++\n\n  if (s) rightShift_(mr_r, s)\n\n  powMod_(mr_a, mr_r, x)\n\n  if (!equalsInt(mr_a, 1) && !equals(mr_a, mr_x1)) {\n    j = 1\n    //$off\n    while (j <= s - 1 && !equals(mr_a, mr_x1)) {\n      squareMod_(mr_a, x)\n      if (equalsInt(mr_a, 1)) {\n        return 0\n      }\n      j++\n    }\n    if (!equals(mr_a, mr_x1)) {\n      return 0\n    }\n  }\n  return 1\n}\n\n/**\n * returns how many bits long the bigInt is, not counting leading zeros.\n *\n * @param {number[]} x\n * @returns {number}\n */\nexport function bitSize(x: number[]): number {\n  var j, z, w\n  for (j = x.length - 1; x[j] == 0 && j > 0; j--);\n  for (z = 0, w = x[j]; w; w >>= 1, z++);\n  z += bpe * j\n  return z\n}\n\n/**\n * return a copy of x with at least n elements, adding leading zeros if needed\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\nexport function expand(x: number[], n: number): number[] {\n  var ans = int2bigInt(0, (x.length > n ? x.length : n) * bpe, 0)\n  copy_(ans, x)\n  return ans\n}\n\n/**\n * return a k-bit true random prime using Maurer's algorithm.\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\n/* export function randTruePrime(k: number): number[] {\n  var ans = int2bigInt(0, k, 0)\n  randTruePrime_(ans, k)\n  return trim(ans, 1)\n} */\n\n/**\n * return a k-bit random probable prime with probability of error < 2^-80\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\n/* export function randProbPrime(k: number): number[] {\n  if (k >= 600) return randProbPrimeRounds(k, 2) //numbers from HAC table 4.3\n  if (k >= 550) return randProbPrimeRounds(k, 4)\n  if (k >= 500) return randProbPrimeRounds(k, 5)\n  if (k >= 400) return randProbPrimeRounds(k, 6)\n  if (k >= 350) return randProbPrimeRounds(k, 7)\n  if (k >= 300) return randProbPrimeRounds(k, 9)\n  if (k >= 250) return randProbPrimeRounds(k, 12) //numbers from HAC table 4.4\n  if (k >= 200) return randProbPrimeRounds(k, 15)\n  if (k >= 150) return randProbPrimeRounds(k, 18)\n  if (k >= 100) return randProbPrimeRounds(k, 27)\n  return randProbPrimeRounds(k, 40) //number from HAC remark 4.26 (only an estimate)\n} */\n\n/**\n * return a k-bit probable random prime using n rounds of Miller Rabin\n * (after trial division with small primes)\n *\n * @export\n * @param {number} k\n * @param {number} n\n * @returns {number[]}\n */\n/* export function randProbPrimeRounds(k: number, n: number): number[] {\n  var ans, i, divisible, B\n  B = 30000 //B is largest prime to use in trial division\n  ans = int2bigInt(0, k, 0)\n\n  //optimization: try larger and smaller B to find the best limit.\n\n  if (primes.length === 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (rpprb.length !== ans.length) rpprb = dup(ans)\n\n  for (;;) {\n    //keep trying random values for ans until one appears to be prime\n    //optimization: pick a random number times L=2*3*5*...*p, plus a\n    //   random element of the list of all numbers in [0,L) not divisible by any prime up to p.\n    //   This can reduce the amount of random number generation.\n\n    randBigInt_(ans, k, 0) //ans = a random odd number to check\n    ans[0] |= 1\n    divisible = 0\n\n    //check ans for divisibility by small primes up to B\n    for (i = 0; i < primes.length && primes[i] <= B; i++)\n      if (modInt(ans, primes[i]) === 0 && !equalsInt(ans, primes[i])) {\n        divisible = 1\n        break\n      }\n\n    //optimization: change millerRabin so the base can be bigger than the number being checked, then eliminate the while here.\n\n    //do n rounds of Miller Rabin, with random bases less than ans\n    for (i = 0; i < n && !divisible; i++) {\n      randBigInt_(rpprb, k, 0)\n      while (\n        !greater(ans, rpprb) //pick a random rpprb that's < ans\n      )\n        randBigInt_(rpprb, k, 0)\n      if (!millerRabin(ans, rpprb)) divisible = 1\n    }\n\n    if (!divisible) return ans\n  }\n} */\n\n/**\n * return a new bigInt equal to (x mod n) for bigInts x and n.\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function mod(x: number[], n: number[]): number[] {\n  var ans = dup(x)\n  mod_(ans, n)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+n) where x is a bigInt and n is an integer.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\n/* export function addInt(x: number[], n: number): number[] {\n  var ans = expand(x, x.length + 1)\n  addInt_(ans, n)\n  return trim(ans, 1)\n} */\n\n/**\n * return x*y for bigInts x and y. This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function mult(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length + y.length)\n  mult_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.\n *\n * 0**0=1.\n *\n * Faster for odd n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function powMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  powMod_(\n    //this should work without the trim, but doesn't\n    ans,\n    trim(y, 2),\n    trim(n, 2),\n  )\n  return trim(ans, 1)\n}\n\n/**\n * Simple pow with no optimizations (in 40x times slower than jsbn's pow)\n * @param x bigInt\n * @param e\n */\nexport function pow(x: number[], e: number) {\n  let ans = dup(x);\n  e -= 1;\n  for(let i = 0; i < e; ++i) {\n    ans = mult(ans, x);\n  }\n  return trim(ans, 1);\n}\n\n/**\n * return (x-y) for bigInts x and y\n *\n * Negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function sub(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  sub_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+y) for bigInts x and y\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function add(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  add_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**(-1) mod n) for bigInts x and n.\n *\n * If no inverse exists, it returns null\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(number[] | null)}\n */\n/* export function inverseMod(x: number[], n: number[]): number[] | null {\n  var ans = expand(x, n.length)\n  var s = inverseMod_(ans, n)\n  return s ? trim(ans, 1) : null\n} */\n\n/**\n * return (x*y mod n) for bigInts x,y,n.\n *\n * For greater speed, let y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function multMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  multMod_(ans, y, n)\n  return trim(ans, 1)\n}\n\n/**\n * generate a k-bit true random prime using Maurer's algorithm, and put it into ans.\n *\n * The bigInt ans must be large enough to hold it.\n *\n * @export\n * @param {number[]} ans\n * @param {number} k\n * @return {void}\n */\n/* export function randTruePrime_(ans: number[], k: number): void {\n  var c, m, pm, dd, j, r, B, divisible, z, zz, recSize\n  var w\n  if (primes.length == 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (pows.length == 0) {\n    pows = new Array(512)\n    for (j = 0; j < 512; j++) {\n      pows[j] = Math.pow(2, j / 511 - 1)\n    }\n  }\n\n  //c and m should be tuned for a particular machine and value of k, to maximize speed\n  c = 0.1 //c=0.1 in HAC\n  m = 20 //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n  var recLimit = 20 //stop recursion when k <=recLimit.  Must have recLimit >= 2\n\n  if (s_i2.length != ans.length) {\n    s_i2 = dup(ans)\n    s_R = dup(ans)\n    s_n1 = dup(ans)\n    s_r2 = dup(ans)\n    s_d = dup(ans)\n    s_x1 = dup(ans) //TODO Seems like a bug in eslint, reports as unused\n    s_x2 = dup(ans)\n    s_b = dup(ans)\n    s_n = dup(ans)\n    s_i = dup(ans)\n    s_rm = dup(ans)\n    s_q = dup(ans)\n    s_a = dup(ans)\n    s_aa = dup(ans)\n  }\n\n  if (k <= recLimit) {\n    //generate small random primes by trial division up to its square root\n    pm = (1 << ((k + 2) >> 1)) - 1 //pm is binary number with all ones, just over sqrt(2^k)\n    copyInt_(ans, 0)\n    for (dd = 1; dd; ) {\n      dd = 0\n      ans[0] = 1 | (1 << (k - 1)) | Math.floor(Math.random() * (1 << k)) //random, k-bit, odd integer, with msb 1\n      for (j = 1; j < primes.length && (primes[j] & pm) == primes[j]; j++) {\n        //trial division by all primes 3...sqrt(2^k)\n        if (0 == ans[0] % primes[j]) {\n          dd = 1\n          break\n        }\n      }\n    }\n    carry_(ans)\n    return\n  }\n\n  B = c * k * k //try small primes up to B (or all the primes[] array if the largest is less than B).\n  if (k > 2 * m)\n    //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n    for (r = 1; k - k * r <= m; ) r = pows[Math.floor(Math.random() * 512)] //r=Math.pow(2,Math.random()-1);\n  else r = 0.5\n\n  //simulation suggests the more complex algorithm using r=.333 is only slightly faster.\n\n  recSize = Math.floor(r * k) + 1\n\n  randTruePrime_(s_q, recSize)\n  copyInt_(s_i2, 0)\n  s_i2[Math.floor((k - 2) / bpe)] |= 1 << ((k - 2) % bpe) //s_i2=2^(k-2)\n  divide_(s_i2, s_q, s_i, s_rm) //s_i=floor((2^(k-1))/(2q))\n\n  z = bitSize(s_i)\n\n  for (;;) {\n    for (;;) {\n      //generate z-bit numbers until one falls in the range [0,s_i-1]\n      randBigInt_(s_R, z, 0)\n      if (greater(s_i, s_R)) break\n    } //now s_R is in the range [0,s_i-1]\n    addInt_(s_R, 1) //now s_R is in the range [1,s_i]\n    add_(s_R, s_i) //now s_R is in the range [s_i+1,2*s_i]\n\n    copy_(s_n, s_q)\n    mult_(s_n, s_R)\n    multInt_(s_n, 2)\n    addInt_(s_n, 1) //s_n=2*s_R*s_q+1\n\n    copy_(s_r2, s_R)\n    multInt_(s_r2, 2) //s_r2=2*s_R\n\n    //check s_n for divisibility by small primes up to B\n    for (divisible = 0, j = 0; j < primes.length && primes[j] < B; j++)\n      if (modInt(s_n, primes[j]) == 0 && !equalsInt(s_n, primes[j])) {\n        divisible = 1\n        break\n      }\n\n    if (!divisible)\n      if (!millerRabinInt(s_n, 2))\n        //if it passes small primes check, then try a single Miller-Rabin base 2\n        //this line represents 75% of the total runtime for randTruePrime_\n        divisible = 1\n\n    if (!divisible) {\n      //if it passes that test, continue checking s_n\n      addInt_(s_n, -3)\n      for (j = s_n.length - 1; s_n[j] == 0 && j > 0; j--); //strip leading zeros\n      for (zz = 0, w = s_n[j]; w; w >>= 1, zz++);\n      zz += bpe * j //zz=number of bits in s_n, ignoring leading zeros\n      for (;;) {\n        //generate z-bit numbers until one falls in the range [0,s_n-1]\n        randBigInt_(s_a, zz, 0)\n        if (greater(s_n, s_a)) break\n      } //now s_a is in the range [0,s_n-1]\n      addInt_(s_n, 3) //now s_a is in the range [0,s_n-4]\n      addInt_(s_a, 2) //now s_a is in the range [2,s_n-2]\n      copy_(s_b, s_a)\n      copy_(s_n1, s_n)\n      addInt_(s_n1, -1)\n      powMod_(s_b, s_n1, s_n) //s_b=s_a^(s_n-1) modulo s_n\n      addInt_(s_b, -1)\n      if (isZero(s_b)) {\n        copy_(s_b, s_a)\n        powMod_(s_b, s_r2, s_n)\n        addInt_(s_b, -1)\n        copy_(s_aa, s_n)\n        copy_(s_d, s_b)\n        GCD_(s_d, s_n) //if s_b and s_n are relatively prime, then s_n is a prime\n        if (equalsInt(s_d, 1)) {\n          copy_(ans, s_aa)\n          return //if we've made it this far, then s_n is absolutely guaranteed to be prime\n        }\n      }\n    }\n  }\n} */\n\n/**\n * Return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n *\n * @export\n * @param {number} n\n * @param {number} s\n * @returns {number[]}\n */\n/* export function randBigInt(n: number, s: number): number[] {\n  var a, b\n  a = Math.floor((n - 1) / bpe) + 2 //# array elements to hold the BigInt with a leading 0 element\n  b = int2bigInt(0, 0, a)\n  randBigInt_(b, n, s)\n  return b\n} */\n\n/**\n * Set b to an n-bit random BigInt.  If s=1, then the most significant of those n bits is set to 1.\n *\n * Array b must be big enough to hold the result. Must have n>=1\n *\n * @export\n * @param {number[]} b\n * @param {number} n\n * @param {number} s\n * @return {void}\n */\n/* export function randBigInt_(b: number[], n: number, s: number): void {\n  var i, a\n  for (i = 0; i < b.length; i++) b[i] = 0\n  a = Math.floor((n - 1) / bpe) + 1 //# array elements to hold the BigInt\n  for (i = 0; i < a; i++) {\n    b[i] = Math.floor(Math.random() * (1 << (bpe - 1)))\n  }\n  b[a - 1] &= (2 << ((n - 1) % bpe)) - 1\n  if (s == 1) b[a - 1] |= 1 << ((n - 1) % bpe)\n} */\n\n/**\n * Return the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function GCD(x: number[], y: number[]): number[] {\n  var xc, yc\n  xc = dup(x)\n  yc = dup(y)\n  GCD_(xc, yc)\n  return xc\n}\n\n/**\n * set x to the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * y is destroyed.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n */\nexport function GCD_(x: number[], y: number[]): void {\n  var i: number, xp: number, yp: number, A: number, B, C: number, D: number, q, sing\n  var qp\n  if (T.length !== x.length) T = dup(x)\n\n  sing = 1\n  while (sing) {\n    //while y has nonzero elements other than y[0]\n    sing = 0\n    for (\n      i = 1;\n      i < y.length;\n      i++ //check if y has nonzero elements other than 0\n    )\n      if (y[i]) {\n        sing = 1\n        break\n      }\n    if (!sing) break //quit when y all zero elements except possibly y[0]\n\n    for (i = x.length; !x[i] && i >= 0; i--); //find most significant element of x\n    xp = x[i]\n    yp = y[i]\n    A = 1\n    B = 0\n    C = 0\n    D = 1\n    while (yp + C && yp + D) {\n      q = Math.floor((xp + A) / (yp + C))\n      qp = Math.floor((xp + B) / (yp + D))\n      if (q != qp) break\n      t = A - q * C\n      A = C\n      C = t //  do (A,B,xp, C,D,yp) = (C,D,yp, A,B,xp) - q*(0,0,0, C,D,yp)\n      t = B - q * D\n      B = D\n      D = t\n      t = xp - q * yp\n      xp = yp\n      yp = t\n    }\n    if (B) {\n      copy_(T, x)\n      linComb_(x, y, A, B) //x=A*x+B*y\n      linComb_(y, T, D, C) //y=D*y+C*T\n    } else {\n      mod_(x, y)\n      copy_(T, x)\n      copy_(x, y)\n      copy_(y, T)\n    }\n  }\n  if (y[0] === 0) return\n  t = modInt(x, y[0])\n  copyInt_(x, y[0])\n  y[0] = t\n  while (y[0]) {\n    x[0] %= y[0]\n    t = x[0]\n    x[0] = y[0]\n    y[0] = t\n  }\n}\n\n/**\n * do x=x**(-1) mod n, for bigInts x and n.\n *\n * If no inverse exists, it sets x to zero and returns 0, else it returns 1.\n * The x array must be at least as large as the n array.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(0 | 1)}\n */\n/* export function inverseMod_(x: number[], n: number[]): Bool {\n  var k = 1 + 2 * Math.max(x.length, n.length)\n\n  if (!(x[0] & 1) && !(n[0] & 1)) {\n    //if both inputs are even, then inverse doesn't exist\n    copyInt_(x, 0)\n    return 0\n  }\n\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_v = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n\n  copy_(eg_u, x)\n  copy_(eg_v, n)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while eg_u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if eg_A==eg_B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, n)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(eg_v[0] & 1)) {\n      //while eg_v is even\n      halve_(eg_v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if eg_C==eg_D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, n)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(eg_v, eg_u)) {\n      //eg_v <= eg_u\n      sub_(eg_u, eg_v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //eg_v > eg_u\n      sub_(eg_v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n\n    if (equalsInt(eg_u, 0)) {\n      while (\n        negative(eg_C) //make sure answer is nonnegative\n      )\n        add_(eg_C, n)\n      copy_(x, eg_C)\n\n      if (!equalsInt(eg_v, 1)) {\n        //if GCD_(x,n)!=1, then there is no inverse\n        copyInt_(x, 0)\n        return 0\n      }\n      return 1\n    }\n  }\n} */\n\n/**\n * return x**(-1) mod n, for integers x and n.\n *\n * Return 0 if there is no inverse\n *\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nexport function inverseModInt(x: number, n: number): number {\n  var a = 1,\n      b = 0,\n      t\n  for (;;) {\n    if (x === 1) return a\n    if (x === 0) return 0\n    b -= a * Math.floor(n / x)\n    //$off\n    n %= x\n\n    if (n === 1) return b //to avoid negatives, change this b to n-b, and each -= to +=\n    if (n === 0) return 0\n    a -= b * Math.floor(x / n)\n    //$off\n    x %= n\n  }\n  /*::\n  declare var never: empty\n  return never\n  */\n}\n\n//this deprecated function is for backward compatibility only.\n/* function inverseModInt_(x: number, n: number) {\n  return inverseModInt(x, n)\n} */\n\n/**\n * Given positive bigInts x and y, change the bigints v, a, and b to positive bigInts such that:\n *\n *      v = GCD_(x,y) = a*x-b*y\n *\n * The bigInts v, a, b, must have exactly as many elements as the larger of x and y.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} v\n * @param {number[]} a\n * @param {number[]} b\n * @return {void}\n */\nexport function eGCD_(\n  x: number[],\n  y: number[],\n  v: number[],\n  a: number[],\n  b: number[],\n): void {\n  var g = 0\n  var k = Math.max(x.length, y.length)\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n  while (!(x[0] & 1) && !(y[0] & 1)) {\n    //while x and y both even\n    halve_(x)\n    halve_(y)\n    g++\n  }\n  copy_(eg_u, x)\n  copy_(v, y)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if A==B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, y)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(v[0] & 1)) {\n      //while v is even\n      halve_(v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if C==D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, y)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(v, eg_u)) {\n      //v<=u\n      sub_(eg_u, v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //v>u\n      sub_(v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n    if (equalsInt(eg_u, 0)) {\n      while (negative(eg_C)) {\n        //make sure a (C) is nonnegative\n        add_(eg_C, y)\n        sub_(eg_D, x)\n      }\n      multInt_(eg_D, -1) ///make sure b (D) is nonnegative\n      copy_(a, eg_C)\n      copy_(b, eg_D)\n      leftShift_(v, g)\n      return\n    }\n  }\n}\n\n/**\n * is bigInt x negative?\n *\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function negative(x: number[]) {\n  //TODO Flow Bool type inference\n  return (x[x.length - 1] >> (bpe - 1)) & 1\n}\n\n/**\n * is (x << (shift*bpe)) > y?\n *\n * x and y are nonnegative bigInts\n * shift is a nonnegative integer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} shift\n * @returns {(1 | 0)}\n */\nexport function greaterShift(x: number[], y: number[], shift: number): Bool {\n  var i,\n      kx = x.length,\n      ky = y.length\n  k = kx + shift < ky ? kx + shift : ky\n  for (i = ky - 1 - shift; i < kx && i >= 0; i++) if (x[i] > 0) return 1 //if there are nonzeros in x to the left of the first column of y, then x is bigger\n  for (i = kx - 1 + shift; i < ky; i++) if (y[i] > 0) return 0 //if there are nonzeros in y to the left of the first column of x, then x is not bigger\n  for (i = k - 1; i >= shift; i--)\n    if (x[i - shift] > y[i]) return 1\n    else if (x[i - shift] < y[i]) return 0\n  return 0\n}\n\n/**\n * is x > y?\n *\n * x and y both nonnegative\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function greater(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n\n  for (i = x.length; i < y.length; i++) if (y[i]) return 0 //y has more digits\n\n  for (i = y.length; i < x.length; i++) if (x[i]) return 1 //x has more digits\n\n  for (i = k - 1; i >= 0; i--)\n    if (x[i] > y[i]) return 1\n    else if (x[i] < y[i]) return 0\n  return 0\n}\n\n/**\n * divide x by y giving quotient q and remainder r.\n *\n *     q = floor(x/y)\n *     r = x mod y\n *\n * All 4 are bigints.\n *\n * * x must have at least one leading zero element.\n * * y must be nonzero.\n * * q and r must be arrays that are exactly the same length as x. (Or q can have more).\n * * Must have x.length >= y.length >= 2.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} q\n * @param {number[]} r\n * @return {void}\n */\nexport function divide_(\n  x: number[],\n  y: number[],\n  q: number[],\n  r: number[],\n): void {\n  var kx, ky\n  var i, j, y1, y2, c, a, b\n  copy_(r, x)\n  for (ky = y.length; y[ky - 1] === 0; ky--); //ky is number of elements in y, not including leading zeros\n\n  //normalize: ensure the most significant element of y has its highest bit set\n  b = y[ky - 1]\n  for (a = 0; b; a++) b >>= 1\n  a = bpe - a //a is how many bits to shift so that the high order bit of y is leftmost in its array element\n  leftShift_(y, a) //multiply both by 1<<a now, then divide both by that at the end\n  leftShift_(r, a)\n\n  //Rob Visser discovered a bug: the following line was originally just before the normalization.\n  for (kx = r.length; r[kx - 1] === 0 && kx > ky; kx--); //kx is number of elements in normalized x, not including leading zeros\n\n  copyInt_(q, 0) // q=0\n  while (!greaterShift(y, r, kx - ky)) {\n    // while (leftShift_(y,kx-ky) <= r) {\n    subShift_(r, y, kx - ky) //   r=r-leftShift_(y,kx-ky)\n    q[kx - ky]++ //   q[kx-ky]++;\n  } // }\n\n  for (i = kx - 1; i >= ky; i--) {\n    if (r[i] == y[ky - 1]) q[i - ky] = mask\n    else q[i - ky] = Math.floor((r[i] * radix + r[i - 1]) / y[ky - 1])\n\n    //The following for(;;) loop is equivalent to the commented while loop,\n    //except that the uncommented version avoids overflow.\n    //The commented loop comes from HAC, which assumes r[-1]==y[-1]==0\n    //  while (q[i-ky]*(y[ky-1]*radix+y[ky-2]) > r[i]*radix*radix+r[i-1]*radix+r[i-2])\n    //    q[i-ky]--;\n    for (;;) {\n      y2 = (ky > 1 ? y[ky - 2] : 0) * q[i - ky]\n      c = y2 >> bpe\n      y2 = y2 & mask\n      y1 = c + q[i - ky] * y[ky - 1]\n      c = y1 >> bpe\n      y1 = y1 & mask\n\n      if (\n        c == r[i]\n          ? y1 == r[i - 1] ? y2 > (i > 1 ? r[i - 2] : 0) : y1 > r[i - 1]\n          : c > r[i]\n      )\n        q[i - ky]--\n      else break\n    }\n\n    linCombShift_(r, y, -q[i - ky], i - ky) //r=r-q[i-ky]*leftShift_(y,i-ky)\n    if (negative(r)) {\n      addShift_(r, y, i - ky) //r=r+leftShift_(y,i-ky)\n      q[i - ky]--\n    }\n  }\n\n  rightShift_(y, a) //undo the normalization step\n  rightShift_(r, a) //undo the normalization step\n}\n\n/**\n * do carries and borrows so each element of the bigInt x fits in bpe bits.\n *\n * @param {number[]} x\n */\nexport function carry_(x: number[]): void {\n  var i, k, c, b\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * return x mod n for bigInt x and integer n.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number}\n */\nexport function modInt(x: number[], n: number): number {\n  var i,\n      c = 0\n  for (i = x.length - 1; i >= 0; i--) c = (c * radix + x[i]) % n\n  return c\n}\n\n/**\n * convert the integer t into a bigInt with at least the given number of bits.\n * the returned array stores the bigInt in bpe-bit chunks, little endian (buff[0] is least significant word)\n * Pad the array with leading zeros so that it has at least minSize elements.\n *\n * There will always be at least one leading 0 element.\n *\n * @export\n * @param {number} t\n * @param {number} bits\n * @param {number} minSize\n * @returns {number[]}\n */\nexport function int2bigInt(t: number, bits: number, minSize: number): number[] {\n  var i, k\n  k = Math.ceil(bits / bpe) + 1\n  k = minSize > k ? minSize : k\n  var buff = new Array(k)\n  copyInt_(buff, t)\n  return buff\n}\n\n/**\n * return the bigInt given a string representation in a given base.\n * Pad the array with leading zeros so that it has at least minSize elements.\n * If base=-1, then it reads in a space-separated list of array elements in decimal.\n *\n * The array will always have at least one leading zero, unless base=-1.\n *\n * @export\n * @param {string} s\n * @param {number} base\n * @param {number} [minSize]\n * @returns {number[]}\n */\nexport function str2bigInt(\n  s: string,\n  base: number,\n  minSize?: number,\n): number[] {\n  var d, i, x, y, kk\n  var k = s.length\n  if (base === -1) {\n    //comma-separated list of array elements in decimal\n    x = new Array(0)\n    for (;;) {\n      y = new Array(x.length + 1)\n      for (i = 0; i < x.length; i++) y[i + 1] = x[i]\n      y[0] = parseInt(s, 10) //TODO PERF Should we replace that with ~~ (not not)? https://jsperf.com/number-vs-parseint-vs-plus/7\n      x = y\n      d = s.indexOf(',', 0)\n      if (d < 1) break\n      //$off\n      s = s.substring(d + 1)\n      if (s.length == 0) break\n    }\n    //$off\n    if (x.length < minSize) {\n      //$off\n      y = new Array(minSize)\n      copy_(y, x)\n      return y\n    }\n    return x\n  }\n\n  x = int2bigInt(0, base * k, 0)\n  for (i = 0; i < k; i++) {\n    d = digitsStr.indexOf(s.substring(i, i + 1), 0)\n    if (base <= 36 && d >= 36)\n      //convert lowercase to uppercase if base<=36\n      d -= 26\n    if (d >= base || d < 0) {\n      //stop at first illegal character\n      break\n    }\n    multInt_(x, base)\n    addInt_(x, d)\n  }\n\n  for (k = x.length; k > 0 && !x[k - 1]; k--); //strip off leading zeros\n  //$off\n  k = minSize > k + 1 ? minSize : k + 1\n  //$off\n  y = new Array(k)\n  //$off\n  kk = k < x.length ? k : x.length\n  //$off\n  for (i = 0; i < kk; i++) y[i] = x[i]\n  //$off\n  for (; i < k; i++) y[i] = 0\n  return y\n}\n\n//return the bigInt given a string representation in a given base.\n//Pad the array with leading zeros so that it has at least minSize elements.\n//If base=-1, then it reads in a space-separated list of array elements in decimal.\n//The array will always have at least one leading zero, unless base=-1.\n// function str2bigInt(s,b,minSize) {\n//   var d, i, j, base, str, x, y, kk;\n//   if (typeof b === 'string') {\n//           base = b.length;\n//           str = b;\n//   } else {\n//           base = b;\n//           str = digitsStr;\n//   }\n//   var k=s.length;\n//   if (base==-1) { //comma-separated list of array elements in decimal\n//       x=new Array(0);\n//       for (;;) {\n//           y=new Array(x.length+1);\n//           for (i=0;i<x.length;i++)\n//               y[i+1]=x[i];\n//           y[0]=parseInt(s,10);\n//           x=y;\n//           d=s.indexOf(',',0);\n//           if (d<1)\n//               break;\n//           s=s.substring(d+1);\n//           if (s.length==0)\n//               break;\n//       }\n//       if (x.length<minSize) {\n//           y=new Array(minSize);\n//           copy_(y,x);\n//           return y;\n//       }\n//       return x;\n//   }\n\n//   x=int2bigInt(0,base*k,0);\n// for (i=0;i<k;i++) {\n//   d=str.indexOf(s.substring(i,i+1),0);\n//   if (base<=36 && d>=36) { //convert lowercase to uppercase if base<=36\n//       d-=26;\n//   }\n//   if (d>=base || d<0) {   //ignore illegal characters\n//   continue;\n//       }\n//       multInt_(x,base);\n//       addInt_(x,d);\n//   }\n\n//   for (k=x.length;k>0 && !x[k-1];k--); //strip off leading zeros\n//   k=minSize>k+1 ? minSize : k+1;\n//   y=new Array(k);\n//   kk=k<x.length ? k : x.length;\n//   for (i=0;i<kk;i++)\n//       y[i]=x[i];\n//   for (;i<k;i++)\n//       y[i]=0;\n//   return y;\n// }\n\n/**\n * is bigint x equal to integer y?\n *\n * y must have less than bpe bits\n *\n * @export\n * @param {number[]} x\n * @param {number} y\n * @returns {(1 | 0)}\n */\nexport function equalsInt(x: number[], y: number): Bool {\n  var i\n  if (x[0] != y) return 0\n  for (i = 1; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * are bigints x and y equal?\n *\n * this works even if x and y are different lengths and have arbitrarily many leading zeros\n *\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function equals(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) if (x[i] !== y[i]) return 0\n  if (x.length > y.length) {\n    for (; i < x.length; i++) if (x[i]) return 0\n  } else {\n    for (; i < y.length; i++) if (y[i]) return 0\n  }\n  return 1\n}\n\n/**\n * is the bigInt x equal to zero?\n *\n * @export\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function isZero(x: number[]): Bool {\n  var i\n  for (i = 0; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * Convert a bigInt into a string in a given base, from base 2 up to base 95.\n *\n * Base -1 prints the contents of the array representing the number.\n *\n * @export\n * @param {number[]} x\n * @param {number} base\n * @returns {string}\n */\nexport function bigInt2str(x: number[], base: number): string {\n  var i,\n      t,\n      s = ''\n\n  if (s6.length !== x.length) s6 = dup(x)\n  else copy_(s6, x)\n\n  if (base === -1) {\n    //return the list of array contents\n    for (i = x.length - 1; i > 0; i--) s += x[i] + ','\n    s += x[0]\n  } else {\n    //return it in the given base\n    while (!isZero(s6)) {\n      t = divInt_(s6, base) //t=s6 % base; s6=floor(s6/base);\n      s = digitsStr.substring(t, t + 1) + s\n    }\n  }\n  if (s.length === 0) s = '0'\n  return s\n}\n\n/**\n * Convert a bigInt into bytes\n * @param x bigInt\n * @param littleEndian byte order by default\n */\nexport function bigInt2bytes(x: number[], littleEndian = true) {\n  if(s6.length !== x.length) s6 = dup(x);\n  else copy_(s6, x);\n\n  const out: number[] = [];\n\n  //console.log('bigInt2bytes');\n  while(!isZero(s6)) {\n    t = divInt_(s6, 256); //t=s6 % base; s6=floor(s6/base);\n    out.push(t);\n    //console.log('bigInt2bytes', t);\n  }\n\n  if(littleEndian) {\n    out.reverse();\n  }\n\n  //console.log('bigInt2bytes', out);\n\n  return out;\n}\n\n/**\n * Compare two bigInts and return -1 if x is less, 0 if equals, 1 if greater\n * @param x bigInt\n * @param y bigInt\n */\nexport function cmp(x: number[], y: number[]) {\n  return greater(x, y) ? 1 : (equals(x, y) ? 0 : -1);\n}\n\n/* Object.assign(self, {\n  cmp,\n  str2bigInt,\n  int2bigInt,\n  bigInt2str,\n  one,\n  divide_,\n  divInt_,\n  dup,\n  negative\n}); */\n\n/**\n * Returns a duplicate of bigInt x\n *\n * @export\n * @param {number[]} x\n * @returns {number[]}\n */\nexport function dup(x: number[]): number[] {\n  var i\n  buff = Array(x.length)\n  copy_(buff, x)\n  return buff\n}\n\n/**\n * do x=y on bigInts x and y.\n *\n * x must be an array at least as big as y (not counting the leading zeros in y).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {void}\n */\nexport function copy_(x: number[], y: number[]): void {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) x[i] = y[i]\n  for (i = k; i < x.length; i++) x[i] = 0\n}\n\n/**\n * do x=y on bigInt x and integer y.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function copyInt_(x: number[], n: number): void {\n  var i, c\n  var len = x.length //TODO .length in for loop have perfomance costs. Bench this\n  for (c = n, i = 0; i < len; i++) {\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function addInt_(x: number[], n: number): void {\n  var i, k, c, b\n  x[0] += n\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n    if (!c) return //stop carrying as soon as the carry is zero\n  }\n}\n\n/**\n * right shift bigInt x by n bits.\n *\n *     0 <= n < bpe.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n */\nexport function rightShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = 0;\n      i < x.length - k;\n      i++ //right shift x by k elements\n    )\n      x[i] = x[i + k]\n    for (; i < x.length; i++) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - n)) | (x[i] >> n))\n  }\n  x[i] >>= n\n}\n\n/**\n * do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement\n *\n * @param {number[]} x\n * @returns {void}\n */\nexport function halve_(x: number[]): void {\n  var i\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - 1)) | (x[i] >> 1))\n  }\n  x[i] = (x[i] >> 1) | (x[i] & (radix >> 1)) //most significant bit stays the same\n}\n\n/**\n * left shift bigInt x by n bits\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function leftShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = x.length;\n      i >= k;\n      i-- //left shift x by k elements\n    )\n      x[i] = x[i - k]\n    for (; i >= 0; i--) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  if (!n) return\n  for (i = x.length - 1; i > 0; i--) {\n    x[i] = mask & ((x[i] << n) | (x[i - 1] >> (bpe - n)))\n  }\n  x[i] = mask & (x[i] << n)\n}\n\n/**\n * do x=x*n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function multInt_(x: number[], n: number): void {\n  var i, k, c, b\n  if (!n) return\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i] * n\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * do x=floor(x/n) for bigInt x and integer n, and return the remainder\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number} remainder\n */\nexport function divInt_(x: number[], n: number): number {\n  var i,\n      r = 0,\n      s\n  for (i = x.length - 1; i >= 0; i--) {\n    s = r * radix + x[i]\n    x[i] = Math.floor(s / n)\n    r = s % n\n  }\n  return r\n}\n\n/**\n * do the linear combination x=a*x+b*y for bigInts x and y, and integers a and b.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} a\n * @param {number} b\n * @returns {void}\n */\nexport function linComb_(x: number[], y: number[], a: number, b: number): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  kk = x.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += a * x[i] + b * y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; i < kk; i++) {\n    c += a * x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do the linear combination x=a*x+b*(y<<(ys*bpe)) for bigInts x and y, and integers a, b and ys.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} b\n * @param {number} ys\n * @returns {void}\n */\nexport function linCombShift_(\n  x: number[],\n  y: number[],\n  b: number,\n  ys: number,\n): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + b * y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+(y<<(ys*bpe)) for bigInts x and y, and integer ys.\n *\n * x must be large enough to hold the answer.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function addShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-(y<<(ys*bpe)) for bigInts x and y, and integer ys\n *\n * x must be large enough to hold the answer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function subShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] - y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function sub_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] - y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function add_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] + y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x*y for bigInts x and y.\n *\n * This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function mult_(x: number[], y: number[]): void {\n  var i\n  if (ss.length != 2 * x.length) ss = new Array(2 * x.length)\n  copyInt_(ss, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(ss, x, y[i], i) //ss=1*ss+y[i]*(x<<(i*bpe))\n  copy_(x, ss)\n}\n\n/**\n * do x=x mod n for bigInts x and n\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function mod_(x: number[], n: number[]): void {\n  if (s4.length !== x.length) s4 = dup(x)\n  else copy_(s4, x)\n  if (s5.length !== x.length) s5 = dup(x)\n  divide_(s4, n, s5, x) //x = remainder of s4 / n\n}\n\n/**\n * do x=x*y mod n for bigInts x,y,n.\n *\n * for greater speed, let y<x.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function multMod_(x: number[], y: number[], n: number[]): void {\n  var i\n  if (s0.length != 2 * x.length) s0 = new Array(2 * x.length)\n  copyInt_(s0, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(s0, x, y[i], i) //s0=1*s0+y[i]*(x<<(i*bpe))\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * do x=x*x mod n for bigInts x,n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function squareMod_(x: number[], n: number[]): void {\n  var i, j, d, c, kx, kn, k\n  for (kx = x.length; kx > 0 && !x[kx - 1]; kx--); //ignore leading zeros in x\n  k = kx > n.length ? 2 * kx : 2 * n.length //k=# elements in the product, which is twice the elements in the larger of x and n\n  if (s0.length != k) s0 = new Array(k)\n  copyInt_(s0, 0)\n  for (i = 0; i < kx; i++) {\n    c = s0[2 * i] + x[i] * x[i]\n    s0[2 * i] = c & mask\n    c >>= bpe\n    for (j = i + 1; j < kx; j++) {\n      c = s0[i + j] + 2 * x[i] * x[j] + c\n      s0[i + j] = c & mask\n      c >>= bpe\n    }\n    s0[i + kx] = c\n  }\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * return x with exactly k leading zero elements\n *\n * @export\n * @param {number[]} x\n * @param {number} k\n * @returns {number[]}\n */\nexport function trim(x: number[], k: number): number[] {\n  var i, y\n  for (i = x.length; i > 0 && !x[i - 1]; i--);\n  y = new Array(i + k)\n  copy_(y, x)\n  return y\n}\n\n/**\n * do `x=x**y mod n`, where x,y,n are bigInts and `**` is exponentiation.  `0**0=1`.\n *\n * this is faster when n is odd.\n *\n * x usually needs to have as many elements as n.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function powMod_(x: number[], y: number[], n: number[]): void {\n  var k1, k2, kn, np\n  if (s7.length != n.length) s7 = dup(n)\n\n  //for even modulus, use a simple square-and-multiply algorithm,\n  //rather than using the more complex Montgomery algorithm.\n  if ((n[0] & 1) == 0) {\n    copy_(s7, x)\n    copyInt_(x, 1)\n    while (!equalsInt(y, 0)) {\n      if (y[0] & 1) multMod_(x, s7, n)\n      divInt_(y, 2)\n      squareMod_(s7, n)\n    }\n    return\n  }\n\n  //calculate np from n for the Montgomery multiplications\n  copyInt_(s7, 0)\n  for (kn = n.length; kn > 0 && !n[kn - 1]; kn--);\n  np = radix - inverseModInt(modInt(n, radix), radix)\n  s7[kn] = 1\n  multMod_(x, s7, n) // x = x * 2**(kn*bp) mod n\n\n  if (s3.length != x.length) s3 = dup(x)\n  else copy_(s3, x)\n  //$off\n  // @ts-ignore\n  for (k1 = y.length - 1; (k1 > 0) & !y[k1]; k1--); //k1=first nonzero element of y\n  if (y[k1] == 0) {\n    //anything to the 0th power is 1\n    copyInt_(x, 1)\n    return\n  }\n  for (k2 = 1 << (bpe - 1); k2 && !(y[k1] & k2); k2 >>= 1); //k2=position of first 1 bit in y[k1]\n  for (;;) {\n    if (!(k2 >>= 1)) {\n      //look at next bit of y\n      k1--\n      if (k1 < 0) {\n        mont_(x, one, n, np)\n        return\n      }\n      k2 = 1 << (bpe - 1)\n    }\n    mont_(x, x, n, np)\n\n    if (k2 & y[k1])\n      //if next bit is a 1\n      mont_(x, s3, n, np)\n  }\n}\n\n/**\n * do x=x*y*Ri mod n for bigInts x,y,n,\n * where Ri = 2**(-kn*bpe) mod n, and kn is the\n * number of elements in the n array, not\n * counting leading zeros.\n *\n * x array must have at least as many elemnts as the n array\n * It's OK if x and y are the same variable.\n *\n * must have:\n *  * x,y < n\n *  * n is odd\n *  * np = -(n^(-1)) mod radix\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @param {number} np\n * @return {void}\n */\nexport function mont_(x: number[], y: number[], n: number[], np: number): void {\n  var i, j, c, ui, t, ks\n  var kn = n.length\n  var ky = y.length\n\n  if (sa.length != kn) sa = new Array(kn)\n\n  copyInt_(sa, 0)\n\n  for (; kn > 0 && n[kn - 1] == 0; kn--); //ignore leading zeros of n\n  for (; ky > 0 && y[ky - 1] == 0; ky--); //ignore leading zeros of y\n  ks = sa.length - 1 //sa will never have more than this many nonzero elements.\n\n  //the following loop consumes 95% of the runtime for randTruePrime_() and powMod_() for large numbers\n  for (i = 0; i < kn; i++) {\n    t = sa[0] + x[i] * y[0]\n    ui = ((t & mask) * np) & mask //the inner \"& mask\" was needed on Safari (but not MSIE) at one time\n    c = (t + ui * n[0]) >> bpe\n    t = x[i]\n\n    //do sa=(sa+x[i]*y+ui*n)/b   where b=2**bpe.  Loop is unrolled 5-fold for speed\n    j = 1\n    for (; j < ky - 4; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ky; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn - 4; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ks; ) {\n      c += sa[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    sa[j - 1] = c & mask\n  }\n\n  if (!greater(n, sa)) sub_(sa, n)\n  copy_(x, sa)\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { renderImageFromUrlPromise } from \"../../helpers/dom/renderImageFromUrl\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport sequentialDom from \"../../helpers/sequentialDom\";\nimport { UserProfilePhoto, ChatPhoto, InputFileLocation } from \"../../layer\";\nimport { NULL_PEER_ID, REPLIES_PEER_ID } from \"../mtproto/mtproto_config\";\nimport RichTextProcessor from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager from \"./appUsersManager\";\n\ntype PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  public isAvatarCached(peerId: PeerId) {\n    return !!this.savedAvatarURLs[peerId];\n  }\n  \n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n\n    let cached = false;\n    let getAvatarPromise: Promise<string>;\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      //console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation', \n        pFlags: {},\n        peer: inputPeer, \n        photo_id: photo.photo_id\n      };\n\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n      }\n\n      const downloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = appDownloadManager.download(downloadOptions);\n      getAvatarPromise = saved[size] = promise.then(blob => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else if(typeof(saved[size]) !== 'string') {\n      getAvatarPromise = saved[size] as Promise<any>;\n    } else {\n      getAvatarPromise = Promise.resolve(saved[size]);\n      cached = true;\n    }\n\n    return {cached, loadPromise: getAvatarPromise};\n  }\n\n  public putAvatar(\n    div: HTMLElement, \n    peerId: PeerId, \n    photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, \n    size: PeerPhotoSize, \n    img = new Image(), \n    onlyThumb = false\n  ) {\n    let {cached, loadPromise} = this.loadAvatar(peerId, photo, size);\n\n    img.classList.add('avatar-photo');\n\n    let renderThumbPromise: Promise<void>;\n    let callback: () => void;\n    let thumbImage: HTMLImageElement;\n    if(cached) {\n      // смотри в misc.ts: renderImageFromUrl\n      callback = () => {\n        replaceContent(div, img);\n        div.dataset.color = '';\n      };\n    } else {\n      const animate = rootScope.settings.animationsEnabled;\n      if(animate) {\n        img.classList.add('fade-in');\n      }\n\n      if(size === 'photo_big') { // let's load small photo first\n        const res = this.putAvatar(div, peerId, photo, 'photo_small');\n        renderThumbPromise = res.loadPromise;\n        thumbImage = res.thumbImage;\n      } else if(photo.stripped_thumb) {\n        thumbImage = new Image();\n        div.classList.add('avatar-relative');\n        thumbImage.classList.add('avatar-photo', 'avatar-photo-thumbnail');\n        const url = appPhotosManager.getPreviewURLFromBytes(photo.stripped_thumb);\n        renderThumbPromise = renderImageFromUrlPromise(thumbImage, url).then(() => {\n          replaceContent(div, thumbImage);\n        });\n      }\n\n      callback = () => {\n        if(thumbImage) {\n          div.append(img);\n        } else {\n          replaceContent(div, img);\n        }\n\n        setTimeout(() => {\n          if(div.childElementCount) {\n            sequentialDom.mutateElement(img, () => {\n              div.dataset.color = '';\n              \n              if(animate) {\n                img.classList.remove('fade-in');\n              }\n\n              if(thumbImage) {\n                thumbImage.remove();\n              }\n            });\n          }\n        }, animate ? 200 : 0);\n      };\n    }\n\n    const renderPromise = loadPromise\n    .then((url) => renderImageFromUrlPromise(img, url/* , false */))\n    .then(callback);\n\n    return {\n      cached, \n      loadPromise: renderThumbPromise || renderPromise,\n      thumbImage\n    };\n  }\n\n  public s(div: HTMLElement, innerHTML: string, color: string, icon: string) {\n    div.innerHTML = innerHTML;\n    div.dataset.color = color;\n    div.classList.remove('tgico-saved', 'tgico-deletedaccount', 'tgico-reply_filled');\n    icon && div.classList.add(icon);\n  }\n\n  // peerId === peerId || title\n  public putPhoto(div: HTMLElement, peerId: PeerId, isDialog = false, title = '', onlyThumb = false) {\n    const myId = rootScope.myId;\n    \n    //console.log('loadDialogPhoto location:', location, inputPeer);\n    if(peerId === myId && isDialog) {\n      this.s(div, '', '', 'tgico-saved');\n      return;\n    }\n    \n    if(peerId !== NULL_PEER_ID && peerId.isUser()) {\n      const user = appUsersManager.getUser(peerId);\n      if(user && user.pFlags && user.pFlags.deleted) {\n        this.s(div, '', appPeersManager.getPeerColorById(peerId), 'tgico-deletedaccount');\n        return;\n      }\n    }\n    \n    const photo = appPeersManager.getPeerPhoto(peerId);\n    const avatarAvailable = !!photo;\n    const avatarRendered = !!div.firstElementChild && !(div.firstElementChild as HTMLElement).classList.contains('emoji');\n    if(!avatarAvailable || !avatarRendered || !this.savedAvatarURLs[peerId]) {\n      let color = '';\n      if(peerId && (peerId !== myId || !isDialog)) {\n        color = appPeersManager.getPeerColorById(peerId);\n      }\n\n      if(peerId === REPLIES_PEER_ID) {\n        this.s(div, '', color, 'tgico-reply_filled');\n        return;\n      }\n\n      let abbr: string;\n      if(!title) {\n        const peer = appPeersManager.getPeer(peerId);\n        abbr = peer.initials ?? '';\n      } else {\n        abbr = RichTextProcessor.getAbbreviation(title);\n      }\n\n      this.s(div, abbr, color, '');\n      //return Promise.resolve(true);\n    }\n\n    if(avatarAvailable/*  && false */) {\n      const size: PeerPhotoSize = 'photo_small';\n      return this.putAvatar(div, peerId, photo, size, undefined, onlyThumb);\n    }\n  }\n}\n\nconst appAvatarsManager = new AppAvatarsManager();\nexport default appAvatarsManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport const getMiddleware = () => {\r\n  let cleanupObj = {cleaned: false};\r\n  return {\r\n    clean: () => {\r\n      cleanupObj.cleaned = true;\r\n      cleanupObj = {cleaned: false};\r\n    },\r\n    get: (additionalCallback?: () => boolean) => {\r\n      const _cleanupObj = cleanupObj;\r\n      return () => {\r\n        return !_cleanupObj.cleaned && (!additionalCallback || additionalCallback());\r\n      };\r\n    }\r\n  };\r\n};\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nenum GROUP_CALL_STATE {\n  UNMUTED,\n  MUTED,\n  MUTED_BY_ADMIN,\n  CONNECTING,\n  CLOSED\n}\n\nexport default GROUP_CALL_STATE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { processSearchText, ProcessSearchTextOptions } from '../helpers/cleanSearchText';\n\nexport default class SearchIndex<SearchWhat> {\n  private fullTexts: Map<SearchWhat, string> = new Map();\n\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\n  constructor(private options?: ProcessSearchTextOptions, private minChars = 0) {\n  }\n\n  public indexObject(id: SearchWhat, searchText: string) {\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\n      return false;\n    } */\n\n    if(this.options && searchText.trim()) {\n      searchText = processSearchText(searchText, this.options);\n    }\n\n    if(!searchText) {\n      this.fullTexts.delete(id);\n      return false;\n    }\n\n    this.fullTexts.set(id, searchText);\n    \n    /* const shortIndexes = searchIndex.shortIndexes;\n    searchText.split(' ').forEach((searchWord) => {\n      let len = Math.min(searchWord.length, 3),\n        wordPart, i;\n      for(i = 1; i <= len; i++) {\n        wordPart = searchWord.substr(0, i);\n        if(shortIndexes[wordPart] === undefined) {\n          shortIndexes[wordPart] = [id];\n        } else {\n          shortIndexes[wordPart].push(id);\n        }\n      }\n    }); */\n  }\n\n  public search(query: string) {\n    const fullTexts = this.fullTexts;\n    //const shortIndexes = searchIndex.shortIndexes;\n\n    if(this.options) {\n      query = processSearchText(query, this.options);\n    }\n\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\n    const queryWords = query.split(' ');\n    const queryWordsLength = queryWords.length;\n    fullTexts.forEach((fullText, what) => {\n      let found = true;\n      let foundChars = 0;\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\n        const word = queryWords[i];\n        const idx = fullText.indexOf(word);\n        if(idx === -1 || (idx !== 0 && fullText[idx - 1] !== ' ')) { // * search only from word beginning\n          found = false;\n          break;\n        }\n\n        foundChars += word.length;\n      }\n\n      if(found) {\n        foundChars += queryWordsLength - 1;\n        const fullTextLength = fullText.length;\n        if(this.minChars <= foundChars || fullTextLength <= foundChars) {\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\n        }\n      }\n    });\n\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\n\n    //newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map(o => o.what));\n\n    /* const queryWords = query.split(' ');\n    let foundArr: number[];\n    for(let i = 0; i < queryWords.length; i++) {\n      const newFound = shortIndexes[queryWords[i].substr(0, 3)];\n      if(!newFound) {\n        foundArr = [];\n        break;\n      }\n      \n      if(foundArr === undefined || foundArr.length > newFound.length) {\n        foundArr = newFound;\n      }\n    }\n\n    for(let j = 0; j < foundArr.length; j++) {\n      let found = true;\n      let searchText = fullTexts[foundArr[j]];\n      for(let i = 0; i < queryWords.length; i++) {\n        if(searchText.indexOf(queryWords[i]) === -1) {\n          found = false;\n          break;\n        }\n      }\n\n      if(found) {\n        newFoundObjs[foundArr[j]] = true;\n      }\n    } */\n\n    return newFoundObjs2;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// Thanks to https://stackoverflow.com/a/49349813\r\nimport { clamp } from \"../helpers/number\";\r\n\r\n/**\r\n * Attibute modifier to create middle ellipsis\r\n * When the attribute value is left blank the ellipsis will be in the middle\r\n * When positive the attribute value will be used as a percentage\r\n * When negative the attribute value will be used as character index counted from the end\r\n * @example\r\n *   <div data-middle-ellipsis>A Javascript solution to middle ellipsis</div>\r\n *   <div data-middle-ellipsis=\"20\">A Javascript solution to middle ellipsis</div>\r\n *   <div data-middle-ellipsis=\"-3\">A Javascript solution to middle ellipsis</div>\r\n */\r\nconst ellipsis = '…';\r\nconst map: Map<HTMLElement, {\r\n  text: string,\r\n  textLength: number,\r\n  from: number,\r\n  multiplier: number,\r\n  font: string,\r\n  textWidth: number,\r\n  elementWidth: number\r\n}> = new Map();\r\n\r\nconst testQueue: Set<HTMLElement> = new Set();\r\nexport const fontFamily = 'Roboto, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\r\nconst fontSize = '16px';\r\nlet timeoutId: number;\r\n\r\nconst setTestQueue = () => {\r\n  cancelAnimationFrame(timeoutId);\r\n  timeoutId = window.requestAnimationFrame(testQueueElements);\r\n};\r\n\r\nconst testQueueElements = () => {\r\n  testQueue.forEach(testElement);\r\n  testQueue.clear();\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  for(const [key] of map) {\r\n    testQueue.add(key);\r\n  }\r\n  \r\n  setTestQueue();\r\n}, {capture: true, passive: true});\r\n\r\nconst testElement = (element: HTMLElement) => {\r\n  //const perf = performance.now();\r\n  // do not recalculate variables a second time\r\n  let mapped = map.get(element);\r\n  const firstTime = !mapped;\r\n\r\n  let {text, textLength, from, multiplier, font, textWidth, elementWidth} = mapped || {};\r\n  //console.log('[MEE] testElement got mapped', mapped);\r\n\r\n  if(firstTime) {\r\n    text = element.textContent;\r\n    textLength = text.length;\r\n    from = /* parseFloat(element.getAttribute(attributeName)) ||  */50;\r\n    multiplier = from > 0 && from / 100;\r\n\r\n    //const perf = performance.now();\r\n    font = `${element.dataset.fontWeight || 400} ${fontSize} ${fontFamily}`;\r\n    /* const computedStyle = window.getComputedStyle(elm, null);\r\n    font = `${computedStyle.getPropertyValue('font-weight')} ${computedStyle.getPropertyValue('font-size')} ${computedStyle.getPropertyValue('font-family')}`; */\r\n    //console.log('testMiddleEllipsis get computed style:', performance.now() - perf, font);\r\n\r\n    textWidth = getTextWidth(text, font);\r\n    //const perf = performance.now();\r\n    elementWidth = element.getBoundingClientRect().width;\r\n    //console.log('testMiddleEllipsis get offsetWidth:', performance.now() - perf, font);\r\n    mapped = {text, textLength, from, multiplier, font, textWidth, elementWidth};\r\n    map.set(element, mapped);\r\n\r\n    //console.log('[MEE] testElement map set', element);\r\n  }\r\n  \r\n  const newElementWidth = element.getBoundingClientRect().width;\r\n  const widthChanged = firstTime || elementWidth !== newElementWidth;\r\n  !firstTime && widthChanged && (mapped.elementWidth = elementWidth = newElementWidth);\r\n  \r\n  if(widthChanged) {\r\n    if(textWidth > elementWidth) {\r\n      element.setAttribute('title', text);\r\n      let smallerText = text;\r\n      let smallerWidth = elementWidth;\r\n      while(smallerText.length > 3) {\r\n        let smallerTextLength = smallerText.length;\r\n        const half = multiplier &&\r\n          clamp(multiplier * smallerTextLength << 0, 1, smallerTextLength - 2) ||\r\n          Math.max(smallerTextLength + from - 1, 1);\r\n        const half1 = smallerText.substr(0, half).replace(/\\s*$/,'');\r\n        const half2 = smallerText.substr(half + 1).replace(/^\\s*/,'');\r\n        smallerText = half1 + half2;\r\n        smallerWidth = getTextWidth(smallerText + ellipsis, font);\r\n        if(smallerWidth < elementWidth) {\r\n          element.textContent = half1 + ellipsis + half2;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // * set new width after cutting text\r\n      mapped.elementWidth = element.getBoundingClientRect().width;\r\n      //mapped.textWidth = smallerWidth;\r\n    } else {\r\n      element.removeAttribute('title');\r\n    }\r\n  }\r\n\r\n  //console.log('testMiddleEllipsis for element:', elm, performance.now() - perf);\r\n};\r\n\r\nlet context: CanvasRenderingContext2D;\r\n/**\r\n * Get the text width\r\n * @param {string} text\r\n * @param {string} font\r\n */\r\nfunction getTextWidth(text: string, font: string) {\r\n  //const perf = performance.now();\r\n  if(!context) {\r\n    const canvas = document.createElement('canvas');\r\n    context = canvas.getContext('2d');\r\n    context.font = font;\r\n  }\r\n\r\n  //context.font = font;\r\n  const metrics = context.measureText(text);\r\n  //console.log('getTextWidth perf:', performance.now() - perf);\r\n  return metrics.width;\r\n  //return Math.round(metrics.width);\r\n}\r\n\r\nexport class MiddleEllipsisElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    //console.log('[MEE]: connectedCallback before', map.has(this), testQueue.has(this), map.size, this.textContent, map);\r\n\r\n    map.set(this, null);\r\n    testQueue.add(this);\r\n    setTestQueue();\r\n    //testElement(this);\r\n\r\n    //console.log('[MEE]: connectedCallback after', map.has(this), map.size, testQueue.has(this), testQueue.size);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const deleted = map.delete(this);\r\n    //console.log('[MEE]: disconnectedCallback', deleted, map.has(this), map.size, this.textContent, map);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"middle-ellipsis-element\", MiddleEllipsisElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../rootScope\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport appMessagesManager from \"./appMessagesManager\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport RichTextProcessor from \"../richtextprocessor\";\r\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\r\nimport { MessageEntity, DraftMessage, MessagesSaveDraft } from \"../../layer\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport { deepEqual } from \"../../helpers/object\";\r\nimport { isObject } from \"../mtproto/bin_utils\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    stateStorage.get('drafts').then(drafts => {\r\n      this.drafts = drafts || {};\r\n    });\r\n\r\n    rootScope.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerID = appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft(peerID, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAllDrafts() {\r\n    return this.getAllDraftPromise || (\r\n      this.getAllDraftPromise = apiManager.invokeApi('messages.getAllDrafts')\r\n      .then((updates) => {\r\n        const p = apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n        p.then(() => {\r\n          apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n    if(typeof(draft1) !== typeof(draft2)) {\r\n      return false;\r\n    }\r\n\r\n    if(!isObject(draft1)) {\r\n      return true;\r\n    }\r\n\r\n    if(draft1._ !== draft2._) {\r\n      return false;\r\n    }\r\n  \r\n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\r\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\r\n        return false;\r\n      }\r\n  \r\n      if(!deepEqual(draft1.entities, draft2.entities)) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.message !== draft2.message) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n    \r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n    \r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    const myEntities = RichTextProcessor.parseEntities(draft.message);\r\n    const apiEntities = draft.entities || [];\r\n    const totalEntities = RichTextProcessor.mergeEntities(apiEntities.slice(), myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\r\n\r\n    draft.rMessage = RichTextProcessor.wrapDraftText(draft.message, {entities: totalEntities});\r\n    //draft.rReply = appMessagesManager.getRichReplyText(draft);\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = appMessagesIdsManager.generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: MyDraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    let params: MessagesSaveDraft = {\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      let message = localDraft.message;\r\n      let entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = appMessagesIdsManager.getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + serverTimeManager.serverTimeOffset;\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return apiManager.invokeApi('messages.clearAllDrafts').then(bool => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, null, {notify: true, force: true});  \r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});  \r\n    }\r\n  }\r\n}\r\n\r\nconst appDraftsManager = new AppDraftsManager();\r\nMOUNT_CLASS_TO.appDraftsManager = appDraftsManager;\r\nexport default appDraftsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nconst ASSETS_PATH = 'assets/audio/';\n\nexport default class AudioAssetPlayer<AssetName extends string> {\n  private audio: HTMLAudioElement;\n  private tempId: number;\n\n  constructor(private assets: AssetName[]) {\n    this.tempId = 0;\n  }\n\n  public playSound(name: AssetName, loop = false) {\n    ++this.tempId;\n    \n    try {\n      const audio = this.createAudio();\n      audio.src = ASSETS_PATH + name;\n      audio.loop = loop;\n      audio.play();\n    } catch(e) {\n      console.error('playSound', name, e);\n    }\n  }\n\n  public createAudio() {\n    let {audio} = this;\n    if(audio) {\n      return audio;\n    }\n\n    audio = this.audio = new Audio();\n    audio.play();\n    return audio;\n  }\n\n  public stopSound() {\n    this.audio.pause();\n  }\n\n  public cancelDelayedPlay() {\n    ++this.tempId;\n  }\n\n  public playSoundWithTimeout(name: AssetName, loop: boolean, timeout: number) {\n    // timeout = 0;\n    const tempId = ++this.tempId;\n    setTimeout(() => {\n      if(this.tempId !== tempId) {\n        return;\n      }\n\n      this.playSound(name, loop);\n    }, timeout);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport AudioAssetPlayer from \"../../helpers/audioAssetPlayer\";\nimport { safeReplaceObject } from \"../../helpers/object\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { GroupCall, GroupCallParticipant, GroupCallParticipantVideo, GroupCallParticipantVideoSourceGroup, InputGroupCall, Peer, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates } from \"../../layer\";\nimport GroupCallInstance from \"../calls/groupCallInstance\";\nimport GROUP_CALL_STATE from \"../calls/groupCallState\";\nimport createMainStreamManager from \"../calls/helpers/createMainStreamManager\";\nimport { generateSsrc } from \"../calls/localConferenceDescription\";\nimport { WebRTCLineType } from \"../calls/sdpBuilder\";\nimport StreamManager from \"../calls/streamManager\";\nimport { Ssrc } from \"../calls/types\";\nimport { logger } from \"../logger\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nlet IS_MUTED = true;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport type GroupCallAudioAssetName = \"group_call_connect.mp3\" | \"group_call_end.mp3\" | \"group_call_start.mp3\" | \"voip_onallowtalk.mp3\";\n\nexport class AppGroupCallsManager {\n  private log: ReturnType<typeof logger>;\n  \n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n  \n  // private audioAsset: AudioAsset;\n  \n  private currentGroupCall: GroupCallInstance;\n  private connectionAudio: HTMLAudioElement;\n  private doNotDispatchParticipantUpdate: PeerId;\n  private audioAsset: AudioAssetPlayer<GroupCallAudioAssetName>;\n\n  constructor() {\n    this.log = logger('GROUP-CALLS');\n    \n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n    \n    rootScope.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n      \n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n        \n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        const {currentGroupCall} = this;\n        if(currentGroupCall?.id === groupCall.id) {\n          currentGroupCall.hangUp(false, false, true);\n        }\n\n        this.participants.delete(groupCall.id);\n      }\n    });\n\n    this.audioAsset = new AudioAssetPlayer<GroupCallAudioAssetName>([\n      'group_call_connect.mp3',\n      'group_call_end.mp3',\n      'group_call_start.mp3',\n      'voip_onallowtalk.mp3'\n    ]);\n  }\n\n  get groupCall() {\n    return this.currentGroupCall;\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const {currentGroupCall} = this;\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = appPeersManager.getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    const isCurrentGroupCall = currentGroupCall?.id === groupCallId;\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    if(isCurrentGroupCall) {\n      currentGroupCall.onParticipantUpdate(participant, this.doNotDispatchParticipantUpdate);\n    }\n\n    // if(!skipCounterUpdating) {\n      const groupCall = this.getGroupCall(groupCallId);\n      if(groupCall?._ === 'groupCall') {\n        let modified = false;\n        if(hasLeft) {\n          --groupCall.participants_count;\n          modified = true;\n        } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n          ++groupCall.participants_count;\n          modified = true;\n        }\n  \n        if(modified) {\n          rootScope.dispatchEvent('group_call_update', groupCall);\n        }\n      }\n    // }\n    \n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant && this.doNotDispatchParticipantUpdate !== peerId) {\n      rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach(p => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    if(!Object.keys(options).length) {\n      return;\n    }\n\n    let processUpdate = true;\n    if(participant) {\n      const {currentGroupCall} = this;\n      const isCurrentCall = currentGroupCall?.id === groupCallId;\n      const isUpdatingMeInCurrentCall = isCurrentCall && participant.pFlags.self;\n\n      if(isUpdatingMeInCurrentCall) {\n        if(options.muted !== undefined && !currentGroupCall.isSharingAudio) {\n          delete options.muted;\n\n          if(!Object.keys(options).length) {\n            return;\n          }\n        }\n      }\n\n      // if(isCurrentCall) {\n        const muted = options.muted;\n        if(muted !== undefined) {\n          /* const isAdmin = appChatsManager.hasRights(currentGroupCall.chatId, 'manage_call');\n          if(isAdmin) {\n            if(muted) {\n              participant.pFlags.muted = true;\n              delete participant.pFlags.can_self_unmute;\n            } else {\n              participant.pFlags.can_self_unmute = true;\n            }\n          } else  */if(participant.pFlags.self) {\n            if(muted) {\n              participant.pFlags.muted = true;\n            } else if(participant.pFlags.can_self_unmute) {\n              delete participant.pFlags.muted;\n            }\n          }/*  else {\n            if(muted) {\n              participant.pFlags.muted_by_you = true;\n            } else {\n              delete participant.pFlags.muted_by_you;\n            }\n          } */\n        }\n      // }\n\n      /* const a: [keyof GroupCallParticipant['pFlags'], keyof typeof options][] = [\n        ['muted', 'muted']\n      ];\n\n      a.forEach(([key, optionKey]) => {\n        const value = options[optionKey];\n        if(value === undefined) {\n          return;\n        }\n\n        if(value) {\n          participant.pFlags[key] = true;\n        } else {\n          delete participant.pFlags[key];\n        }\n      }); */\n\n      if(options.raiseHand !== undefined) {\n        if(options.raiseHand) participant.raise_hand_rating = '1';\n        else delete participant.raise_hand_rating;\n      }\n\n      if(isUpdatingMeInCurrentCall) {\n        if(options.videoStopped !== undefined) {\n          if(options.videoStopped) delete participant.video;\n          else participant.video = this.generateSelfVideo(currentGroupCall.connections.main.sources.video);\n        }\n\n        if(!participant.pFlags.muted && participant.pFlags.can_self_unmute) {\n          currentGroupCall.setMuted(false);\n        }\n\n        currentGroupCall.dispatchEvent('state', currentGroupCall.state);\n      }\n\n      rootScope.dispatchEvent('group_call_participant', {groupCallId, participant});\n\n      /* if(participant.pFlags.self) {\n        processUpdate = false;\n      } */\n    }\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : appPeersManager.getPeerId(participant.peer);\n    const updates = await apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: appGroupCallsManager.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? appPeersManager.getInputPeerSelf() : appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n    \n    // do not replace with peerId because it can be null\n    if(!processUpdate) this.doNotDispatchParticipantUpdate = appPeersManager.getPeerId(participant.peer);\n    apiUpdatesManager.processUpdateMessage(updates);\n    if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n  \n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        appUsersManager.saveApiUsers(groupCall.users);\n        appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n  \n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n      \n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n  \n  public startConnectingSound() {\n    this.stopConnectingSound();\n    this.audioAsset.playSoundWithTimeout('group_call_connect.mp3', true, 2500);\n  }\n  \n  public stopConnectingSound() {\n    this.audioAsset.stopSound();\n    this.audioAsset.cancelDelayedPlay();\n  }\n\n  public setCurrentGroupCall(groupCall: GroupCallInstance) {\n    this.currentGroupCall = groupCall;\n\n    if(groupCall) {\n      rootScope.dispatchEvent('group_call_instance', groupCall);\n    }\n    /* TdLibController.clientUpdate({\n      '@type': 'clientUpdateGroupCall',\n      call\n    }); */\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await apiManager.invokeApi('phone.createGroupCall', {\n      peer: appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find(update => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n  \n  public async joinGroupCall(chatId: ChatId, groupCallId: GroupCallId, muted = IS_MUTED, rejoin?: boolean, joinVideo?: boolean) {\n    this.audioAsset.createAudio();\n\n    this.log(`joinGroupCall chatId=${chatId} id=${groupCallId} muted=${muted} rejoin=${rejoin}`);\n    \n    let streamManager: StreamManager;\n    if(rejoin) {\n      streamManager = this.currentGroupCall.connections.main.streamManager;\n    } else {\n      streamManager = await createMainStreamManager(muted, joinVideo);\n    }\n\n    return this.joinGroupCallInternal(chatId, groupCallId, streamManager, muted, rejoin, joinVideo);\n  }\n\n  public async joinGroupCallInternal(chatId: ChatId, groupCallId: GroupCallId, streamManager: StreamManager, muted: boolean, rejoin = false, joinVideo?: boolean) {\n    const log = this.log.bindPrefix('joinGroupCallInternal');\n    log('start', groupCallId);\n\n    const type: GroupCallConnectionType = 'main';\n\n    let {currentGroupCall} = this;\n    if(currentGroupCall && rejoin) {\n      // currentGroupCall.connections.main.connection = connection;\n      currentGroupCall.handleUpdateGroupCallParticipants = false;\n      currentGroupCall.updatingSdp = false;\n      log('update currentGroupCall', groupCallId, currentGroupCall);\n    } else {\n      currentGroupCall = new GroupCallInstance({\n        chatId,\n        id: groupCallId\n      });\n\n      currentGroupCall.fixSafariAudio();\n\n      currentGroupCall.addEventListener('state', (state) => {\n        if(this.currentGroupCall === currentGroupCall && state === GROUP_CALL_STATE.CLOSED) {\n          this.setCurrentGroupCall(null);\n          this.stopConnectingSound();\n          this.audioAsset.playSound('group_call_end.mp3');\n          rootScope.dispatchEvent('chat_update', currentGroupCall.chatId);\n        }\n      });\n\n      currentGroupCall.groupCall = await this.getGroupCallFull(groupCallId);\n\n      const connectionInstance = currentGroupCall.createConnectionInstance({\n        streamManager,\n        type,\n        options: {\n          type,\n          isMuted: muted,\n          joinVideo,\n          rejoin\n        }\n      });\n\n      const connection = connectionInstance.createPeerConnection();\n      connection.addEventListener('negotiationneeded', () => {\n        if(!rejoin) {\n          this.startConnectingSound();\n        }\n  \n        connectionInstance.negotiate();\n      });\n\n      connection.addEventListener('track', (event) => {\n        log('ontrack', event);\n        currentGroupCall.onTrack(event);\n      });\n  \n      connection.addEventListener('iceconnectionstatechange', () => {\n        currentGroupCall.dispatchEvent('state', currentGroupCall.state);\n        \n        const {iceConnectionState} = connection;\n        if(iceConnectionState !== 'connected' && iceConnectionState !== 'closed') {\n          this.stopConnectingSound();\n        }\n        \n        switch(iceConnectionState) {\n          case 'checking': {\n            break;\n          }\n          \n          case 'closed': {\n            currentGroupCall.hangUp();\n            break;\n          }\n          \n          case 'completed': {\n            break;\n          }\n          \n          case 'connected': {\n            if(!currentGroupCall.joined) {\n              currentGroupCall.joined = true;\n              this.audioAsset.playSound('group_call_start.mp3');\n  \n              this.getGroupCallParticipants(groupCallId).then(({participants}) => {\n                this.saveApiParticipants(groupCallId, [...participants.values()]);\n              });\n            }\n            \n            break;\n          }\n          \n          case 'disconnected': {\n            break;\n          }\n          \n          case 'failed': {\n            //TODO: replace with ICE restart\n            currentGroupCall.hangUp();\n            // connection.restartIce();\n            break;\n          }\n          \n          case 'new': {\n            break;\n          }\n        }\n      });\n\n      connectionInstance.createDescription();\n      connectionInstance.createDataChannel();\n\n      connectionInstance.appendStreamToConference();\n\n      this.setCurrentGroupCall(currentGroupCall);\n      log('set currentGroupCall', groupCallId, currentGroupCall);\n\n      return connectionInstance.negotiate();\n    }\n  }\n  \n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  public generateSelfVideo(source: Ssrc, audioSource?: number): GroupCallParticipantVideo {\n    return source && {\n      _: 'groupCallParticipantVideo',\n      pFlags: {},\n      endpoint: '',\n      source_groups: source.sourceGroups,\n      audio_source: audioSource\n    };\n  }\n  \n  public generateSelfParticipant(): GroupCallParticipant {\n    const mainSources = this.currentGroupCall.connections.main.sources;\n    const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n    return {\n      _: 'groupCallParticipant',\n      pFlags: {\n        can_self_unmute: true,\n        self: true\n      },\n      source: mainSources.audio.source,\n      video: this.generateSelfVideo(mainSources.video),\n      presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n      date: tsNow(true),\n      peer: appPeersManager.getOutputPeer(rootScope.myId)\n    };\n  }\n\n  public makeSsrcsFromParticipant = (participant: GroupCallParticipant) => {\n    return [\n      this.makeSsrcFromParticipant(participant, 'audio', participant.source),\n      participant.video?.audio_source && this.makeSsrcFromParticipant(participant, 'audio', participant.video.audio_source),\n      participant.video && this.makeSsrcFromParticipant(participant, 'video', participant.video.source_groups, participant.video.endpoint),\n      participant.presentation?.audio_source && this.makeSsrcFromParticipant(participant, 'audio', participant.presentation.audio_source),\n      participant.presentation && this.makeSsrcFromParticipant(participant, 'video', participant.presentation.source_groups, participant.presentation.endpoint)\n    ].filter(Boolean);\n  };\n\n  public makeSsrcFromParticipant(participant: GroupCallParticipant, type: WebRTCLineType, source?: number | GroupCallParticipantVideoSourceGroup[], endpoint?: string): Ssrc {\n    return generateSsrc(type, source, endpoint);\n  }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants', \n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n  \n          appChatsManager.saveApiChats(groupCallParticipants.chats);\n          appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n    \n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public async hangUp(groupCallId: GroupCallId, discard = false, rejoin = false) {\n    this.log(`hangUp start id=${groupCallId} discard=${discard} rejoin=${rejoin}`);\n    const {currentGroupCall} = this;\n    if(currentGroupCall?.id !== groupCallId) return;\n\n    currentGroupCall.hangUp(discard, rejoin);\n  }\n\n  public toggleMuted(muted?: boolean) {\n    return this.changeUserMuted(NULL_PEER_ID, muted);\n  }\n  \n  public changeUserMuted(peerId: PeerId, muted?: boolean) {\n    const {currentGroupCall} = this;\n    if(!currentGroupCall) return;\n\n    const participant = currentGroupCall.getParticipantByPeerId(peerId);\n    if(NULL_PEER_ID === peerId && participant.pFlags.can_self_unmute) {\n      muted = muted === undefined ? !participant.pFlags.muted : muted;\n    }\n\n    return this.editParticipant(currentGroupCall.id, participant, {muted});\n  }\n}\n\nconst appGroupCallsManager = new AppGroupCallsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appGroupCallsManager = appGroupCallsManager);\nexport default appGroupCallsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS } from \"../constants\";\nimport StreamManager from \"../streamManager\";\nimport getAudioConstraints from \"./getAudioConstraints\";\nimport getStream from \"./getStream\";\nimport getVideoConstraints from \"./getVideoConstraints\";\n\nexport default async function createMainStreamManager(muted?: boolean, joinVideo?: boolean) {\n  const constraints: MediaStreamConstraints = {\n    audio: getAudioConstraints(),\n    video: joinVideo && getVideoConstraints()\n  };\n\n  const streamManager = new StreamManager(GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS);\n  \n  try {\n    const stream = await getStream(constraints, muted);\n    streamManager.addStream(stream, 'input');\n  } catch(err) {\n    console.error('joinGroupCall getStream error', err, constraints);\n    streamManager.inputStream = new MediaStream();\n  }\n\n  return streamManager;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Config from \"../lib/config\";\n\nconst badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = Config.LatinizeMap[ch];\n    return latinizeCh !== undefined ? latinizeCh : ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  const hasTag = text.charAt(0) === '%';\n  text = clearBadCharsAndTrim(text);\n  if(latinize) text = latinizeString(text);\n  \n  text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n\n  return text;\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n\r\n/**\r\n * Descend sorted storage\r\n */\r\n\r\ntype ItemType = number;\r\n\r\nexport enum SliceEnd {\r\n  None = 0,\r\n  Top = 1,\r\n  Bottom = 2,\r\n  Both = SliceEnd.Top | SliceEnd.Bottom\r\n};\r\n\r\nexport interface Slice extends Array<ItemType> {\r\n  //slicedArray: SlicedArray;\r\n  end: SliceEnd;\r\n\r\n  isEnd: (side: SliceEnd) => boolean;\r\n  setEnd: (side: SliceEnd) => void;\r\n  unsetEnd: (side: SliceEnd) => void;\r\n\r\n  slice: (from?: number, to?: number) => Slice;\r\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice;\r\n}\r\n\r\nexport interface SliceConstructor {\r\n  new(...items: ItemType[]): Slice;\r\n}\r\n\r\nexport default class SlicedArray {\r\n  private slices: Slice[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\r\n  private sliceConstructor: SliceConstructor;\r\n  \r\n  constructor() {\r\n    // @ts-ignore\r\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\r\n\r\n    const first = this.constructSlice();\r\n    //first.setEnd(SliceEnd.Bottom);\r\n    this.slices = [first];\r\n  }\r\n\r\n  private static getSliceConstructor(slicedArray: SlicedArray) {\r\n    return class Slice extends Array<ItemType> implements Slice {\r\n      //slicedArray: SlicedArray;\r\n      end: SliceEnd = SliceEnd.None;\r\n  \r\n      /* constructor(...items: ItemType[]) {\r\n        super(...items);\r\n        //this.slicedArray = slicedArray;\r\n      } */\r\n  \r\n      isEnd(side: SliceEnd): boolean {\r\n        if((this.end & side) === side) {\r\n          return true;\r\n        }/*  else if(!this.slicedArray) {\r\n          return false;\r\n        } */\r\n  \r\n        let isEnd = false;\r\n        if(side === SliceEnd.Top) {\r\n          const slice = slicedArray.last;\r\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Bottom) {\r\n          const slice = slicedArray.first;\r\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Both) {\r\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\r\n        }\r\n\r\n        if(isEnd) {\r\n          this.setEnd(side);\r\n        }\r\n  \r\n        return isEnd;\r\n      }\r\n  \r\n      setEnd(side: SliceEnd) {\r\n        this.end |= side;\r\n      }\r\n\r\n      unsetEnd(side: SliceEnd) {\r\n        this.end ^= side;\r\n      }\r\n\r\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\r\n        const ret = super.splice(start, deleteCount, ...items);\r\n\r\n        if(!this.length) {\r\n          const slices = slicedArray.slices as number[][];\r\n          const idx = slices.indexOf(this);\r\n          if(idx !== -1) {\r\n            if(slices.length === 1) { // left empty slice without ends\r\n              this.unsetEnd(SliceEnd.Both);\r\n            } else { // delete this slice\r\n              slices.splice(idx, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructSlice(...items: ItemType[]) {\r\n    //const slice = new Slice(this, ...items);\r\n    // can't pass items directly to constructor because first argument is length\r\n    const slice = new this.sliceConstructor(items.length);\r\n    for(let i = 0, length = items.length; i < length; ++i) {\r\n      slice[i] = items[i];\r\n    }\r\n    return slice;\r\n    \r\n    // ! code below will slow execution in 15 times\r\n    /* const self = this;\r\n    const p: Slice = new Proxy(slice, {\r\n      get: function(target, name: any) {\r\n        if(name === 'constructor') {\r\n          const p = new Proxy(Slice, {\r\n            construct: (target, args) => {\r\n              return self.constructSlice(...args);\r\n            }\r\n          });\r\n\r\n          return p;\r\n        }\r\n\r\n        return target[name];\r\n      }\r\n    });\r\n\r\n    return p; */\r\n\r\n    /*\r\n    var p = slicedArray.constructSlice();\r\n    p.length = 100000;\r\n    p.fill(255);\r\n\r\n    var a = new Array(100000);\r\n    a.fill(255);\r\n\r\n    var b = 0;\r\n    var perf = performance.now();\r\n    for(var i = 0; i < p.length; ++i) {\r\n        b += p[i];\r\n    }\r\n\r\n    console.log('perf 1', performance.now() - perf);\r\n\r\n    b = 0;\r\n    perf = performance.now();\r\n    for(var i = 0; i < a.length; ++i) {\r\n        b += a[i];\r\n    }\r\n\r\n    console.log('perf 2', performance.now() - perf);\r\n    */\r\n  }\r\n\r\n  public insertSlice(slice: ItemType[], flatten = true) {\r\n    if(!slice.length) {\r\n      return;\r\n    }\r\n\r\n    const first = this.slices[0];\r\n    if(!first.length) {\r\n      first.push(...slice);\r\n      return first;\r\n    }\r\n\r\n    const lowerBound = slice[slice.length - 1];\r\n    const upperBound = slice[0];\r\n\r\n    let foundSlice: Slice, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\r\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\r\n      foundSlice = this.slices[foundSliceIndex];\r\n      lowerIndex = foundSlice.indexOf(lowerBound);\r\n      upperIndex = foundSlice.indexOf(upperBound);\r\n      \r\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n        break;\r\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n\r\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\r\n      const sliced = slice.slice(foundSlice.length - upperIndex);\r\n      foundSlice.push(...sliced);\r\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\r\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\r\n      foundSlice.unshift(...sliced);\r\n    } else {\r\n      let insertIndex = 0;\r\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\r\n        const s = this.slices[insertIndex];\r\n        if(slice[0] > s[0]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\r\n      foundSliceIndex = insertIndex;\r\n    }\r\n\r\n    if(flatten) {\r\n      return this.flatten(foundSliceIndex);\r\n    }\r\n  }\r\n\r\n  private flatten(foundSliceIndex: number) {\r\n    if(this.slices.length >= 2) {\r\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\r\n        const prevSlice = this.slices[i];\r\n        const nextSlice = this.slices[i + 1];\r\n  \r\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\r\n        if(upperIndex !== -1) {\r\n          prevSlice.setEnd(nextSlice.end);\r\n          this.slices.splice(i + 1, 1);\r\n\r\n          if(i < foundSliceIndex) {\r\n            --foundSliceIndex;\r\n          }\r\n\r\n          --length; // respect array bounds\r\n          --i;      // repeat from the same place\r\n  \r\n          this.insertSlice(nextSlice, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.slices[foundSliceIndex];\r\n  }\r\n\r\n  // * \r\n  \r\n  get first() {\r\n    return this.slices[0];\r\n  }\r\n  \r\n  get last() {\r\n    return this.slices[this.slices.length - 1];\r\n  }\r\n\r\n  get slice() {\r\n    return this.first;\r\n  }\r\n\r\n  get length() {\r\n    return this.slice.length;\r\n  }\r\n\r\n  public findSlice(item: ItemType) {\r\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\r\n      const slice = this.slices[i];\r\n      const index = slice.indexOf(item);\r\n      if(index !== -1) {\r\n        return {slice, index};\r\n      }\r\n    }\r\n    \r\n    return undefined;\r\n  }\r\n\r\n  public findSliceOffset(maxId: number) {\r\n    let slice: Slice;\r\n    for(let i = 0; i < this.slices.length; ++i) {\r\n      let offset = 0;\r\n      slice = this.slices[i];\r\n      if(slice.length < 2) {\r\n        continue;\r\n      }\r\n      \r\n      for(; offset < slice.length; offset++) {\r\n        if(maxId >= slice[offset]) {\r\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\r\n            return undefined;\r\n          } */\r\n\r\n          return {\r\n            slice, \r\n            offset: maxId === slice[offset] ? offset : offset - 1\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(slice && slice.isEnd(SliceEnd.Top)) {\r\n      return {\r\n        slice,\r\n        offset: slice.length\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // * https://core.telegram.org/api/offsets\r\n  public sliceMe(offsetId: number, add_offset: number, limit: number) {\r\n    let slice = this.slice;\r\n    let offset = 0;\r\n    let sliceOffset = 0;\r\n\r\n    if(offsetId) {\r\n      const pos = this.findSliceOffset(offsetId);\r\n      if(!pos) {\r\n        return undefined;\r\n      }\r\n\r\n      slice = pos.slice;\r\n      offset = sliceOffset = pos.offset;\r\n\r\n      if(slice.includes(offsetId)) {\r\n        sliceOffset += 1;\r\n      }\r\n\r\n      /* if(slice.includes(offsetId) && add_offset < 0) {\r\n        add_offset += 1;\r\n      } */\r\n    }\r\n\r\n    let sliceStart = Math.max(sliceOffset + add_offset, 0);\r\n    let sliceEnd = sliceOffset + add_offset + limit;\r\n    //const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\r\n    //sliceEnd += fixHalfBackLimit;\r\n\r\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice;\r\n\r\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(add_offset);\r\n\r\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\r\n    // useful when there is only 1 message in chat on its reopening\r\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\r\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\r\n\r\n    //console.log('sliceMe', topFulfilled, bottomFulfilled);\r\n\r\n    return {\r\n      slice: sliced, \r\n      offsetIdOffset: offset,\r\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\r\n    };\r\n  }\r\n\r\n  public unshift(...items: ItemType[]) {\r\n    let slice = this.first;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Bottom);\r\n      this.slices.unshift(slice);\r\n    }\r\n\r\n    slice.unshift(...items);\r\n  }\r\n\r\n  public push(...items: ItemType[]) {\r\n    let slice = this.last;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    } else if(!slice.isEnd(SliceEnd.Top)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Top);\r\n      this.slices.push(slice);\r\n    }\r\n\r\n    slice.push(...items);\r\n  }\r\n\r\n  public delete(item: ItemType) {\r\n    const found = this.findSlice(item);\r\n    if(found) {\r\n      found.slice.splice(found.index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { copy } from \"../../helpers/object\";\r\nimport { InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults } from \"../../layer\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport rootScope from \"../rootScope\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport appMessagesIdsManager from \"./appMessagesIdsManager\";\r\nimport appMessagesManager from './appMessagesManager';\r\nimport appPeersManager from './appPeersManager';\r\nimport appUsersManager from \"./appUsersManager\";\r\n\r\nexport class AppPollsManager {\r\n  public polls: {[id: string]: Poll} = {};\r\n  public results: {[id: string]: PollResults} = {};\r\n  public pollToMessages: {[id: string]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n        \r\n        rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.rQuestion = RichTextProcessor.wrapEmojiText(poll.question);\r\n      poll.rReply = RichTextProcessor.wrapEmojiText('📊') + ' ' + (poll.rQuestion || 'poll');\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId], \r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = RichTextProcessor.parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n    \r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map(index => {\r\n      return poll.answers[index].option;\r\n    });\r\n    \r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message, optionIds);\r\n      });\r\n    }\r\n\r\n    return apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: appMessagesIdsManager.getServerMessageId(message.mid),\r\n      options\r\n    }).then(updates => {\r\n      this.log('sendVote updates:', updates);\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: any) {\r\n    const inputPeer = appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: appMessagesIdsManager.getServerMessageId(message.mid)\r\n    }).then(updates => {\r\n      apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: appPeersManager.getInputPeerById(message.peerId),\r\n      id: appMessagesIdsManager.getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: any) {\r\n    const poll: Poll = message.media.poll;\r\n    \r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      //console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n\r\nconst appPollsManager = new AppPollsManager();\r\nMOUNT_CLASS_TO.appPollsManager = appPollsManager;\r\nexport default appPollsManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n\treturn source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n\treturn source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n\tif(!array) return 0;\n\n\tconst {length} = array;\n\tlet total = 0;\n\tfor(let i = 0; i < length; ++i) {\n\t\ttotal += array[i] * array[i];\n\t}\n\tconst rms = Math.sqrt(total / length) / 255;\n\n\treturn Math.min(1, rms * scale);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { indexOfAndSplice } from '../../helpers/array';\nimport { safeAssign } from '../../helpers/object';\nimport { GroupCallParticipantVideoSourceGroup } from '../../layer';\nimport { SDPBuilder, WebRTCLineType, WEBRTC_MEDIA_PORT } from './sdpBuilder';\nimport { AudioCodec, GroupCallConnectionTransport, Ssrc, UpdateGroupCallConnectionData, VideoCodec } from './types';\n\nexport class ConferenceEntry {\n  public source: number;\n  public sourceGroups: GroupCallParticipantVideoSourceGroup[];\n  public transceiver: RTCRtpTransceiver;\n  public originalDirection: RTCRtpTransceiverDirection;\n  public direction: RTCRtpTransceiverDirection;\n  public port: string;\n  public endpoint: string;\n  public peerId: PeerId;\n  \n  public sendEntry: ConferenceEntry;\n  public recvEntry: ConferenceEntry;\n\n  constructor(public mid: string, public type: WebRTCLineType) {\n    this.port = WEBRTC_MEDIA_PORT;\n  }\n\n  public setDirection(direction: RTCRtpTransceiverDirection) {\n    if(!this.originalDirection) {\n      this.originalDirection = direction;\n    }\n\n    return this.direction = direction;\n  }\n\n  public setPort(port: string) {\n    return this.port = port;\n  }\n\n  public setEndpoint(endpoint: string) {\n    return this.endpoint = endpoint;\n  }\n\n  public setPeerId(peerId: PeerId) {\n    return this.peerId = peerId;\n  }\n\n  public createTransceiver(connection: RTCPeerConnection, init?: RTCRtpTransceiverInit) {\n    if(init?.direction) {\n      this.setDirection(init.direction);\n    }\n\n    return this.transceiver = connection.addTransceiver(this.type, init);\n  }\n\n  public setSource(source: number | GroupCallParticipantVideoSourceGroup[]) {\n    let sourceGroups: GroupCallParticipantVideoSourceGroup[];\n    if(Array.isArray(source)) {\n      if(!source[0]) return;\n      sourceGroups = source;\n      source = sourceGroups[0].sources[0];\n    }\n\n    this.sourceGroups = sourceGroups;\n    return this.source = source;\n  }\n\n  public shouldBeSkipped(isAnswer?: boolean) {\n    return isAnswer && this.direction === 'inactive';\n  }\n}\n\nexport function generateSsrc(type: WebRTCLineType, source: number | GroupCallParticipantVideoSourceGroup[], endpoint?: string): Ssrc {\n  let sourceGroups: GroupCallParticipantVideoSourceGroup[];\n  if(Array.isArray(source)) {\n    if(!source[0]) return;\n    sourceGroups = source;\n    source = sourceGroups[0].sources[0];\n  }\n  \n  return {\n    endpoint,\n    type,\n    source,\n    sourceGroups,\n  };\n}\n\nexport default class LocalConferenceDescription implements UpdateGroupCallConnectionData {\n  public readonly sessionId: string;\n  // public ssrcs: Ssrc[];\n  public readonly transport: GroupCallConnectionTransport;\n  public readonly audio?: AudioCodec;\n  public readonly video: VideoCodec;\n  \n  private maxSeenId: number;\n  public readonly entries: ConferenceEntry[];\n  private entriesByMid: Map<ConferenceEntry['mid'], ConferenceEntry>;\n  private entriesBySource: Map<ConferenceEntry['source'], ConferenceEntry>;\n  private entriesByPeerId: Map<ConferenceEntry['peerId'], Set<ConferenceEntry>>;\n  \n  constructor(public connection: RTCPeerConnection) {\n    this.sessionId = '' + Date.now();\n    // this.ssrcs = [];\n    this.maxSeenId = -1;\n    this.entries = [];\n    this.entriesByMid = new Map();\n    this.entriesBySource = new Map();\n    this.entriesByPeerId = new Map();\n  }\n\n  public setData(data: UpdateGroupCallConnectionData) {\n    return safeAssign(this, data);\n  }\n\n  public createEntry(type: WebRTCLineType) {\n    const mid = '' + ++this.maxSeenId;\n    const entry = new ConferenceEntry(mid, type);\n    this.entries.push(entry);\n    this.entriesByMid.set(mid, entry);\n    return entry;\n  }\n\n  public deleteEntry(entry: ConferenceEntry) {\n    indexOfAndSplice(this.entries, entry);\n    this.entriesByMid.delete(entry.mid);\n    this.entriesBySource.delete(entry.source);\n\n    const set = this.entriesByPeerId.get(entry.peerId);\n    if(set) {\n      set.delete(entry);\n      if(!set.size) {\n        this.entriesByPeerId.delete(entry.peerId);\n      }\n    }\n  }\n\n  public setEntrySource(entry: ConferenceEntry, source: Parameters<ConferenceEntry['setSource']>[0]) {\n    entry.setSource(source);\n    this.entriesBySource.set(entry.source, entry);\n  }\n\n  public setEntryPeerId(entry: ConferenceEntry, peerId: ConferenceEntry['peerId']) {\n    entry.setPeerId(peerId);\n    let set = this.entriesByPeerId.get(peerId);\n    if(!set) {\n      this.entriesByPeerId.set(peerId, set = new Set());\n    }\n\n    set.add(entry);\n  }\n  \n  public findEntry(verify: Parameters<LocalConferenceDescription['entries']['find']>[0]) {\n    return this.entries.find(verify);\n  }\n\n  public findFreeSendRecvEntry(type: WebRTCLineType, isSending: boolean) {\n    let entry = this.entries.find(entry => {\n      return entry.direction === 'sendrecv' && entry.type === type && !(isSending ? entry.sendEntry : entry.recvEntry);\n    });\n\n    if(!entry) {\n      entry = this.createEntry(type);\n      entry.setDirection('sendrecv');\n    }\n\n    return entry;\n  }\n  \n  public getEntryByMid(mid: ConferenceEntry['mid']) {\n    return this.entriesByMid.get(mid);\n  }\n\n  public getEntryBySource(source: ConferenceEntry['source']) {\n    return this.entriesBySource.get(source);\n  }\n\n  public getEntriesByPeerId(peerId: ConferenceEntry['peerId']) {\n    return this.entriesByPeerId.get(peerId);\n  }\n\n  public generateSdp(options: Omit<Parameters<SDPBuilder['addConference']>[0], 'conference'>) {\n    return SDPBuilder.fromConference({\n      conference: this,\n      ...options\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\r\nimport { fastRaf } from \"./schedulers\";\r\n\r\ntype HeavyQueue<T> = {\r\n  items: any[], \r\n  process: (...args: any[]) => T,\r\n  context: any,\r\n  promise?: CancellablePromise<ReturnType<HeavyQueue<T>['process']>[]>\r\n};\r\nconst heavyQueue: HeavyQueue<any>[] = [];\r\nlet processingQueue = false;\r\n\r\nexport default function addHeavyTask<T>(queue: HeavyQueue<T>, method: 'push' | 'unshift' = 'push') {\r\n  if(!queue.items.length) {\r\n    return Promise.resolve([]);\r\n  }\r\n  \r\n  queue.promise = deferredPromise<T[]>();\r\n  heavyQueue[method](queue);\r\n  processHeavyQueue();\r\n\r\n  return queue.promise;\r\n}\r\n\r\nfunction processHeavyQueue() {\r\n  if(!processingQueue) {\r\n    const queue = heavyQueue.shift();\r\n    timedChunk(queue).finally(() => {\r\n      processingQueue = false;\r\n      if(heavyQueue.length) {\r\n        processHeavyQueue();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction timedChunk<T>(queue: HeavyQueue<T>) {\r\n  if(!queue.items.length) {\r\n    queue.promise.resolve([]);\r\n    return Promise.resolve([]);\r\n  }\r\n\r\n  const todo = queue.items.slice();\r\n  const results: T[] = [];\r\n\r\n  return new Promise<T[]>((resolve, reject) => {\r\n    const f = async() => {\r\n      const start = performance.now();\r\n\r\n      do {\r\n        await getHeavyAnimationPromise();\r\n        const possiblePromise = queue.process.apply(queue.context, todo.shift());\r\n        let realResult: T;\r\n        if(possiblePromise instanceof Promise) {\r\n          try {\r\n            realResult = await possiblePromise;\r\n          } catch(err) {\r\n            reject(err);\r\n            return;\r\n          }\r\n        } else {\r\n          realResult = possiblePromise;\r\n        }\r\n\r\n        results.push(realResult);\r\n      } while(todo.length > 0 && (performance.now() - start) < 6);\r\n\r\n      if(todo.length > 0) {\r\n        fastRaf(f);\r\n        //setTimeout(f, 25);\r\n      } else {\r\n        resolve(results);\r\n      }\r\n    };\r\n\r\n    fastRaf(f);\r\n    //setTimeout(f, 25);\r\n  }).then(queue.promise.resolve, queue.promise.reject);\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type fastBlur from '../vendor/fastBlur';\r\nimport addHeavyTask from './heavyQueue';\r\n\r\nconst RADIUS = 2;\r\nconst ITERATIONS = 2;\r\n\r\nconst isFilterAvailable = 'filter' in (document.createElement('canvas').getContext('2d') || {});\r\nlet requireBlurPromise: Promise<any>;\r\nlet fastBlurFunc: typeof fastBlur;\r\nif(!isFilterAvailable) {\r\n  requireBlurPromise = import('../vendor/fastBlur').then(m => {\r\n    fastBlurFunc = m.default;\r\n  });\r\n} else {\r\n  requireBlurPromise = Promise.resolve();\r\n}\r\n\r\nfunction processBlurNext(img: HTMLImageElement, radius: number, iterations: number) {\r\n  return new Promise<string>((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    \r\n    const ctx = canvas.getContext('2d', {alpha: false});\r\n    if(isFilterAvailable) {\r\n      ctx.filter = `blur(${radius}px)`;\r\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\r\n    } else {\r\n      ctx.drawImage(img, 0, 0);\r\n      fastBlurFunc(ctx, 0, 0, canvas.width, canvas.height, radius, iterations);\r\n    }\r\n    \r\n    resolve(canvas.toDataURL());\r\n    /* if(DEBUG) {\r\n      console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\r\n    } */\r\n\r\n    /* canvas.toBlob(blob => {\r\n      resolve(URL.createObjectURL(blob));\r\n      \r\n      if(DEBUG) {\r\n        console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\r\n      }\r\n    }); */\r\n  });\r\n}\r\n\r\nconst blurPromises: Map<string, Promise<string>> = new Map();\r\nconst CACHE_SIZE = 1000;\r\n\r\nexport default function blur(dataUri: string, radius: number = RADIUS, iterations: number = ITERATIONS) {\r\n  if(!dataUri) {\r\n    console.error('no dataUri for blur', dataUri);\r\n    return Promise.resolve(dataUri);\r\n  }\r\n\r\n  if(blurPromises.size > CACHE_SIZE) {\r\n    blurPromises.clear();\r\n  }\r\n  \r\n  if(blurPromises.has(dataUri)) return blurPromises.get(dataUri);\r\n  const promise = new Promise<string>((resolve) => {\r\n    //return resolve(dataUri);\r\n    requireBlurPromise.then(() => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        if(isFilterAvailable) {\r\n          processBlurNext(img, radius, iterations).then(resolve);\r\n        } else {\r\n          addHeavyTask({\r\n            items: [[img, radius, iterations]],\r\n            context: null,\r\n            process: processBlurNext\r\n          }, 'unshift').then(results => {\r\n            resolve(results[0]);\r\n          });\r\n        }\r\n      };\r\n      img.src = dataUri;\r\n\r\n      /* addHeavyTask({\r\n        items: [[dataUri, radius, iterations]],\r\n        context: null,\r\n        process: processBlur\r\n      }, 'unshift').then(results => {\r\n        resolve(results[0]);\r\n      }); */\r\n    });\r\n  });\r\n\r\n  blurPromises.set(dataUri, promise);\r\n\r\n  return promise;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { RefreshReferenceTask, RefreshReferenceTaskResponse } from \"./apiFileManager\";\nimport appMessagesManager from \"../appManagers/appMessagesManager\";\nimport { Photo } from \"../../layer\";\nimport { bytesToHex } from \"../../helpers/bytes\";\nimport { deepEqual } from \"../../helpers/object\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport apiManager from \"./mtprotoworker\";\nimport assumeType from \"../../helpers/assumeType\";\nimport { logger } from \"../logger\";\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n//type ReferenceBytes = Uint8Array;\n\nclass ReferenceDatabase {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  //private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n\n  constructor() {\n    apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n      const originalPayload = task.payload;\n\n      assumeType<RefreshReferenceTaskResponse>(task);\n      task.originalPayload = originalPayload;\n\n      this.refreshReference(originalPayload).then((bytes) => {\n        task.payload = bytes;\n      }, (err) => {\n        task.error = err;\n      }).then(() => apiManager.postMessage(task));\n    });\n  }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n    \n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        break; \n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw 'NO_NEW_CONTEXT';\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n\nconst referenceDatabase = new ReferenceDatabase();\nMOUNT_CLASS_TO.referenceDatabase = referenceDatabase;\nexport default referenceDatabase;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToDocumentFragment(html: string) {\r\n  var template = document.createElement('template');\r\n  html = html.trim(); // Never return a text node of whitespace as the result\r\n  template.innerHTML = html;\r\n  return template.content;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus', \r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","export default async function getStream(constraints: MediaStreamConstraints, muted: boolean) {\n  // console.log('getStream', constraints);\n  \n\tconst stream = await navigator.mediaDevices.getUserMedia(constraints);\n\tstream.getTracks().forEach(x => {\n\t\t/* x.onmute = x => {\n\t\t\tconsole.log('track.onmute', x);\n\t\t};\n\t\tx.onunmute = x => {\n\t\t\tconsole.log('track.onunmute', x);\n\t\t}; */\n\n\t\tx.enabled = !muted;\n\t});\n\n\t// console.log('getStream result', stream);\n\treturn stream;\n}\n\n(window as any).getStream = getStream;\n","export default function getVideoConstraints(): MediaTrackConstraints {\n  return {\n    width: {min: 1280, max: 1920/* , ideal: 1920 */},\n    height: {min: 720, max: 1080/* , ideal: 1080 */},\n    frameRate: {min: 24, max: 30}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { logger } from '../logger';\nimport rootScope from '../rootScope';\nimport { GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX } from './constants';\nimport stopTrack from './helpers/stopTrack';\nimport LocalConferenceDescription from './localConferenceDescription';\nimport { getAmplitude, toTelegramSource } from './utils';\n\nexport type StreamItemBase = {\n  type: 'input' | 'output',\n  track: MediaStreamTrack,\n  source: string,\n  stream: MediaStream\n};\n\nexport type StreamItem = StreamAudioItem | StreamVideoItem;\n\nexport type StreamAudioItem = StreamItemBase & {kind: 'audio', streamAnalyser: AudioStreamAnalyser};\nexport type StreamVideoItem = StreamItemBase & {kind: 'video'};\n\nexport type StreamAmplitude = {\n  type: \"input\" | \"output\";\n  source: string;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  value: number;\n};\n\nclass AudioStreamAnalyser {\n  public analyser: AnalyserNode;\n  public gain: GainNode;\n  public streamSource: MediaStreamAudioSourceNode;\n\n  constructor(context: AudioContext, stream: MediaStream) {\n    const streamSource = this.streamSource = context.createMediaStreamSource(stream);\n    const analyser = this.analyser = context.createAnalyser();\n    const gain = this.gain = context.createGain();\n    // const streamDestination = context.createMediaStreamDestination();\n    \n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n    \n    // connect Web Audio API\n    streamSource.connect(analyser);\n    // analyser.connect(context.destination);\n  }\n}\n\nexport default class StreamManager {\n  private context: AudioContext;\n  public outputStream: MediaStream;\n  public inputStream: MediaStream;\n\n  private timer: number;\n  private counter: number;\n\n  private items: StreamItem[];\n\n  private log: ReturnType<typeof logger>;\n\n  public direction: RTCRtpTransceiver['direction'];\n  public canCreateConferenceEntry: boolean;\n  public lol: boolean;\n  \n  constructor(private interval?: number) {\n    this.context = new (window.AudioContext || (window as any).webkitAudioContext)();\n    this.items = [];\n    this.outputStream = new MediaStream();\n    this.inputStream = new MediaStream();\n    this.counter = 0;\n    this.log = logger('SM');\n    this.direction = 'sendonly';\n    this.canCreateConferenceEntry = true;\n    // this.lol = true;\n  }\n\n  public addStream(stream: MediaStream, type: StreamItem['type']) {\n    stream.getTracks().forEach(track => {\n      this.addTrack(stream, track, type);\n    });\n  }\n\n  public addTrack(stream: MediaStream, track: MediaStreamTrack, type: StreamItem['type']) {\n    this.log('addTrack', type, track, stream);\n\n    const {context, items, inputStream, outputStream} = this;\n    const kind: StreamItem['kind'] = track.kind as any;\n    const source = StreamManager.getSource(stream, type);\n    \n    // this.removeTrack(track);\n    switch(type) {\n      case 'input': {\n        if(!inputStream) {\n          this.inputStream = stream;\n        } else {\n          inputStream.addTrack(track);\n        }\n\n        break;\n      }\n\n      case 'output': {\n        for(let i = 0; i < items.length; ++i) {\n          const {track: t, type, source: itemSource} = items[i];\n          if(itemSource === source && type === 'input') {\n            items.splice(i, 1);\n            outputStream.removeTrack(t);\n            break;\n          }\n        }\n        \n        if(kind !== 'video') {\n          outputStream.addTrack(track);\n        }\n        \n        break;\n      }\n    }\n\n    this.finalizeAddingTrack({\n      type,\n      source,\n      stream,\n      track,\n      kind,\n      streamAnalyser: kind === 'audio' ? new AudioStreamAnalyser(context, stream) : undefined\n    });\n\n    if(kind === 'audio' && this.interval) {\n      this.changeTimer();\n    }\n  }\n\n  private finalizeAddingTrack(item: StreamItem) {\n    const {track} = item;\n    track.addEventListener('ended', () => {\n      this.removeTrack(track);\n    }, {once: true});\n\n    this.items.push(item);\n  }\n\n  public hasInputTrackKind(kind: StreamItem['kind']) {\n    return this.items.find(item => item.type === 'input' && item.kind === kind);\n  }\n\n  public static getSource(stream: MediaStream, type: StreamItem['type']) {\n    return type === 'input' ? (stream.source || stream.id) : '' + toTelegramSource(+stream.id.substring(6));\n  }\n  \n  public removeTrack(track: MediaStreamTrack) {\n    this.log('removeTrack', track);\n\n    const {items} = this;\n    \n    let handled = false;\n    for(let i = 0, length = items.length; !handled && i < length; ++i) {\n      const {track: t, type} = items[i];\n      switch(type) {\n        case 'output': {\n          if(t === track) {\n            items.splice(i, 1);\n            this.outputStream.removeTrack(track);\n            handled = true;\n          }\n\n          break;\n        }\n\n        case 'input': {\n          if(t === track) {\n            items.splice(i, 1);\n            this.inputStream.removeTrack(track);\n            handled = true;\n          }\n\n          break;\n        }\n      }\n    }\n    \n    if(track.kind === 'audio' && this.interval) {\n      this.changeTimer();\n    }\n  }\n  \n  public replaceInputAudio(stream: MediaStream, oldTrack: MediaStreamTrack) {\n    this.removeTrack(oldTrack);\n    this.addStream(stream, 'input');\n  }\n  \n  private changeTimer() {\n    if(this.timer !== undefined) {\n      clearInterval(this.timer);\n    }\n    \n    if(this.items.length) {\n      this.timer = window.setInterval(this.analyse, this.interval);\n    }\n  }\n  \n  public getAmplitude = (item: StreamAudioItem): StreamAmplitude => {\n    const {streamAnalyser, stream, track, source, type} = item;\n    const analyser = streamAnalyser.analyser;\n    if(!analyser) return;\n    \n    const array = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(array);\n    const value = getAmplitude(array);\n    \n    return {\n      type,\n      source,\n      stream,\n      track,\n      value\n    };\n  };\n  \n  public analyse = () => {\n    const all = this.counter % 3 === 0;\n    const filteredItems = all ? this.items : this.items.filter(x => x.type === 'input');\n    const audioItems = filteredItems.filter(x => x.kind === 'audio') as StreamAudioItem[];\n    const amplitudes = audioItems.slice(0, GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX).map(this.getAmplitude);\n    if(++this.counter >= 1000) {\n      this.counter = 0;\n    }\n    \n    rootScope.dispatchEvent('group_call_amplitude', {\n      amplitudes,\n      type: all ? 'all' : 'input'\n    });\n  };\n\n  /* public appendToConnection(connection: RTCPeerConnection) {\n    if(this.inputStream) {\n      this.inputStream.getTracks().forEach(track => {\n        connection.log('addTrack', track);\n        connection.addTrack(track, this.inputStream);\n\n        if(track.kind === 'video') {\n          track.enabled = true;\n        }\n      });\n    }\n  } */\n\n  public appendToConference(conference: LocalConferenceDescription) {\n    if(this.lol) {\n      return;\n    }\n    // return;\n    const {inputStream, direction, canCreateConferenceEntry} = this;\n    // const direction: RTCRtpTransceiverInit['direction'] = 'sendrecv';\n    // const direction: RTCRtpTransceiverInit['direction'] = 'sendonly';\n    const transceiverInit: RTCRtpTransceiverInit = {direction, streams: [inputStream]};\n    const types: ['audio' | 'video', RTCRtpTransceiverInit][] = [\n      ['audio' as const, transceiverInit], \n      ['video' as const, transceiverInit/* {sendEncodings: [{maxBitrate: 2500000}], ...transceiverInit} */]\n    ];\n\n    const tracks = inputStream.getTracks();\n    // const transceivers = conference.connection.getTransceivers();\n    for(const [type, transceiverInit] of types) {\n      let entry = conference.findEntry(entry => entry.direction === direction && entry.type === type);\n      if(!entry) {\n        if(!canCreateConferenceEntry) {\n          continue;\n        }\n\n        entry = conference.createEntry(type);\n      }\n      /* const entry = conference.findFreeSendRecvEntry(type, true);\n      if(!entry.transceiver) {\n        entry.transceiver = transceivers.find(transceiver => transceiver.mid === entry.mid);\n      } */\n\n      let {transceiver} = entry;\n      if(!transceiver) {\n        transceiver = entry.createTransceiver(conference.connection, transceiverInit);\n      }\n\n      if(entry.direction !== transceiver.direction) {\n        transceiver.direction = entry.direction;\n      }\n\n      const track = tracks.find(track => track.kind === type);\n      const sender = transceiver.sender;\n      if(sender.track === track) {\n        continue;\n      }\n\n      // try { // ! don't use await here. it will wait for adding track and fake one won't be visible in startNegotiation.\n        /* await  */sender.replaceTrack(track).catch(err => {\n          this.log.error(err);\n        });\n      // } catch(err) {\n\n      // }\n    }\n  }\n\n  public stop() {\n    try {\n      const tracks = this.inputStream.getTracks().concat(this.outputStream.getTracks());\n      tracks.forEach(track => {\n        stopTrack(track);\n      });\n    } catch(e) {\n      this.log.error(e);\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { IS_SAFARI } from \"../environment/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\n\r\ntype Result = {\r\n  bytes: Uint8Array, \r\n  waveform?: Uint8Array\r\n};\r\n\r\ntype Task = {\r\n  pages: Uint8Array,\r\n  withWaveform: boolean,\r\n  waveform?: Uint8Array,\r\n  callback: {resolve: (result: Result) => void, reject: (err: any) => void},\r\n  timeout: number\r\n};\r\n\r\nexport class OpusDecodeController {\r\n  private worker: Worker;\r\n  private wavWorker : Worker;\r\n  private sampleRate = 48000;\r\n  private tasks: Array<Task> = [];\r\n  private keepAlive = false;\r\n  private isPlaySupportedResult: boolean;\r\n  private log = logger('OPUS', LogTypes.Error);\r\n\r\n  public isPlaySupported() {\r\n    if(this.isPlaySupportedResult !== undefined) return this.isPlaySupportedResult;\r\n\r\n    const audio = document.createElement('audio');\r\n    return this.isPlaySupportedResult = !!(audio.canPlayType && audio.canPlayType('audio/ogg;').replace(/no/, ''))/*  && false */;\r\n  }\r\n\r\n  public loadWavWorker() {\r\n    if(this.wavWorker) return;\r\n\r\n    this.wavWorker = new Worker('waveWorker.min.js');\r\n    this.wavWorker.addEventListener('message', (e) => {\r\n      const data = e.data;\r\n\r\n      this.log('[WAV] got message:', data);\r\n      if(data && data.page) {\r\n        const bytes = data.page;\r\n        this.onTaskEnd(this.tasks.shift(), bytes);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadWorker() {\r\n    if(this.worker) return;\r\n\r\n    this.worker = new Worker('decoderWorker.min.js');\r\n    this.worker.addEventListener('message', (e) => {\r\n      const data = e.data;\r\n      \r\n      this.log('[DECODER] got message', data);\r\n      if(data.type === 'done') {\r\n        //this.log('[DECODER] send done to wav');\r\n        this.wavWorker.postMessage({command: 'done'});\r\n\r\n        if(data.waveform) {\r\n          this.tasks[0].waveform = data.waveform;\r\n        }\r\n      } else { // e.data contains decoded buffers as float32 values\r\n        //this.log('[DECODER] send encode to wav');\r\n        this.wavWorker.postMessage({\r\n          command: 'encode',\r\n          buffers: e.data\r\n        }, IS_SAFARI ? undefined : data.map((typedArray: Uint8Array) => typedArray.buffer));\r\n      }\r\n    });\r\n  }\r\n\r\n  public setKeepAlive(keepAlive: boolean) {\r\n    this.keepAlive = keepAlive;\r\n    if(this.keepAlive) {\r\n      this.loadWorker();\r\n      this.loadWavWorker();\r\n    } else if(!this.tasks.length) {\r\n      this.terminateWorkers();\r\n    }\r\n  }\r\n\r\n  public onTaskEnd(task: Task, result?: Uint8Array) {\r\n    if(!result) {\r\n      task.callback.reject('timeout');\r\n    } else {\r\n      clearTimeout(task.timeout);\r\n      task.callback.resolve({bytes: result, waveform: task.waveform});\r\n    }\r\n\r\n    if(this.tasks.length) {\r\n      this.executeNewTask(this.tasks[0]);\r\n    }\r\n\r\n    this.terminateWorkers();\r\n  }\r\n\r\n  public terminateWorkers(kill = false) {\r\n    if((this.keepAlive || this.tasks.length) && !kill) return;\r\n\r\n    if(this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n    }\r\n    \r\n    if(this.wavWorker) {\r\n      this.wavWorker.terminate();\r\n      this.wavWorker = null;\r\n    }\r\n  }\r\n\r\n  public executeNewTask(task: Task) {\r\n    this.worker.postMessage({ \r\n      command: 'init',\r\n      decoderSampleRate: this.sampleRate,\r\n      outputBufferSampleRate: this.sampleRate\r\n    });\r\n\r\n    this.wavWorker.postMessage({ \r\n      command: 'init',\r\n      wavBitDepth: 16,\r\n      wavSampleRate: this.sampleRate\r\n    });\r\n\r\n    //console.log('sending command to worker:', task);\r\n    //setTimeout(() => {\r\n      this.log('[DECODER] send decode');\r\n      this.worker.postMessage({\r\n        command: 'decode',\r\n        pages: task.pages,\r\n        waveform: task.withWaveform\r\n      }, IS_SAFARI ? undefined : [task.pages.buffer]);\r\n    //}, 1e3);\r\n\r\n    task.timeout = window.setTimeout(() => {\r\n      this.log.error('decode timeout'/* , task */);\r\n\r\n      this.terminateWorkers(true);\r\n      if(this.tasks.length) {\r\n        this.loadWorker();\r\n        this.loadWavWorker();\r\n      }\r\n\r\n      this.onTaskEnd(this.tasks.shift());\r\n    }, 10e3);\r\n  }\r\n\r\n  public pushDecodeTask(pages: Uint8Array, withWaveform: boolean) {\r\n    return new Promise<Result>((resolve, reject) => {\r\n      const task = {\r\n        pages,\r\n        withWaveform,\r\n        callback: {resolve, reject},\r\n        timeout: 0\r\n      };\r\n\r\n      this.loadWorker();\r\n      this.loadWavWorker();\r\n\r\n      if(this.tasks.push(task) === 1) {\r\n        this.executeNewTask(task);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async decode(typedArray: Uint8Array, withWaveform = false) {\r\n    return this.pushDecodeTask(typedArray, withWaveform).then(result => {\r\n      const dataBlob = new Blob([result.bytes], {type: \"audio/wav\"});\r\n      return {url: URL.createObjectURL(dataBlob), waveform: result.waveform};\r\n    });\r\n  }\r\n}\r\n\r\nconst opusDecodeController = new OpusDecodeController();\r\nMOUNT_CLASS_TO.opusDecodeController = opusDecodeController;\r\nexport default opusDecodeController;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport appPhotosManager from \"./appPhotosManager\";\r\nimport appDocsManager from \"./appDocsManager\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\r\nimport rootScope from \"../rootScope\";\r\nimport { safeReplaceObject } from \"../../helpers/object\";\r\nimport { limitSymbols } from \"../../helpers/string\";\r\nimport { WebPage } from \"../../layer\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n  \r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage && \r\n      oldWebPage._ === apiWebPage._ && \r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n  \r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n  \r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      let shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      shortTitle = limitSymbols(shortTitle, 80, 100);\r\n\r\n      apiWebPage.rTitle = RichTextProcessor.wrapRichText(shortTitle, {noLinks: true, noLinebreaks: true});\r\n      let contextHashtag = '';\r\n      if(siteName === 'GitHub') {\r\n        const matches = apiWebPage.url.match(/(https?:\\/\\/github\\.com\\/[^\\/]+\\/[^\\/]+)/);\r\n        if(matches) {\r\n          contextHashtag = matches[0] + '/issues/{1}';\r\n        }\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n      const shortDescriptionText = limitSymbols(apiWebPage.description || '', 150, 180);\r\n      apiWebPage.rDescription = RichTextProcessor.wrapRichText(shortDescriptionText, {\r\n        contextSite: siteName || 'external',\r\n        contextHashtag: contextHashtag\r\n      });\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n    \r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n    \r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n    \r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(), \r\n          mid: +mid, \r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n}\r\n\r\nconst appWebPagesManager = new AppWebPagesManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appWebPagesManager = appWebPagesManager);\r\nexport default appWebPagesManager;\r\n","import IS_WEBP_SUPPORTED from \"./webpSupport\";\n\nconst IMAGE_MIME_TYPES_SUPPORTED = new Set([\n  'image/jpeg',\n  'image/png',\n  'image/bmp'\n]);\n\nif(IS_WEBP_SUPPORTED) {\n  IMAGE_MIME_TYPES_SUPPORTED.add('image/webp');\n}\n\nexport default IMAGE_MIME_TYPES_SUPPORTED;\n","export const GROUP_CALL_AMPLITUDE_ANALYSE_COUNT_MAX = 50;\nexport const GROUP_CALL_AMPLITUDE_ANALYSE_INTERVAL_MS = 100;\nexport const GROUP_CALL_PARTICIPANTS_LOAD_LIMIT = 100;\n","import simulateEvent from \"../../../helpers/dom/dispatchEvent\";\n\nexport default function stopTrack(track: MediaStreamTrack) {\n  track.stop();\n  simulateEvent(track, 'ended');\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":-646342540,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1073147056,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"kicked\",\"type\":\"flags.1?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-2107528095,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":-779165146,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-516145888,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-2074799289,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":1080663248,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1441072131,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":739712882,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-1673717362,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1353671392,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-818518751,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1682413576,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1007549728,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-232290676,\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":1135492588,\"predicate\":\"updateStickerSets\",\"params\":[],\"type\":\"Update\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-299124375,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1153291573,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":357013699,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":856375399,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":1248893260,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":512177195,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":408623183,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-673242758,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":-1240849242,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":460632885,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-2067782896,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":215516896,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"}],\"type\":\"Invoice\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":378828315,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?PaymentSavedCredentials\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1655957568,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1661470870,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":1648543603,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":-534283678,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-532532493,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"int\"},{\"name\":\"file_size_max\",\"type\":\"int\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":1705297877,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-2091463255,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1873957073,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":142306870,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactons\",\"type\":\"flags.1?Vector<MessageUserReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":-1826077446,\"predicate\":\"messageUserReaction\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"MessageUserReaction\"},{\"id\":-1553558980,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessageUserReaction>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":35486795,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1126886015,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":1099779595,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"reason\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1880182943,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":-323339813,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-262453244,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?int\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":-1919060949,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":228423076,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-497026848,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-869258997,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":164303470,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":864953444,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":2057376407,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1137057461,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1180140658,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":251759059,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-134016113,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1932455680,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-265962357,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":627641572,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-521245833,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":335875750,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"Vector<string>\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":-647969580,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":1926525996,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1319462148,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":536919235,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1302676017,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-956147407,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":1029681423,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1355375294,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1976353651,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-619695760,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":818134173,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"}]},\"layer\":136} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n//import sha1 from '@cryptography/sha1';\n//import sha256 from '@cryptography/sha256';\nimport {IGE} from '@cryptography/aes';\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n\nimport {str2bigInt, bpe, equalsInt, greater, \n  copy_, eGCD_, add_, rightShift_, sub_, copyInt_, isZero,\n  divide_, one, bigInt2str, powMod, bigInt2bytes, int2bigInt, mod} from '../../vendor/leemon';//from 'leemon';\n\nimport { addPadding } from '../mtproto/bin_utils';\nimport { bytesToWordss, bytesFromWordss, bytesToHex, bytesFromHex, convertToUint8Array } from '../../helpers/bytes';\nimport { nextRandomUint } from '../../helpers/random';\nimport type { RSAPublicKeyHex } from '../mtproto/rsaKeysManager';\n\nconst subtle = typeof(window) !== 'undefined' && 'crypto' in window ? window.crypto.subtle : self.crypto.subtle;\n\nexport function longToBytes(sLong: string) {\n  /* let perf = performance.now();\n  for(let i = 0; i < 1000000; ++i) {\n    bytesFromWords({words: longToInts(sLong), sigBytes: 8}).reverse();\n  }\n  console.log('longToBytes JSBN', sLong, performance.now() - perf);\n  \n  //const bytes = bytesFromWords({words: longToInts(sLong), sigBytes: 8}).reverse();\n  \n  perf = performance.now();\n  for(let i = 0; i < 1000000; ++i) {\n    bigInt2bytes(str2bigInt(sLong, 10));\n  }\n  console.log('longToBytes LEEMON', sLong, performance.now() - perf); */\n\n  const bigIntBytes = new Uint8Array(bigInt2bytes(str2bigInt(sLong, 10), false));\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  //console.log('longToBytes', bytes, b);\n  \n  return bytes;\n}\n\nexport function sha1HashSync(bytes: Parameters<typeof convertToUint8Array>[0]) {\n  return subtle.digest('SHA-1', convertToUint8Array(bytes)).then(b => {\n    return new Uint8Array(b);\n  });\n  /* //console.trace(dT(), 'SHA-1 hash start', bytes);\n\n  const hashBytes: number[] = [];\n\n  let hash = sha1(String.fromCharCode.apply(null, \n    bytes instanceof Uint8Array ? [...bytes] : [...new Uint8Array(bytes)]));\n  for(let i = 0; i < hash.length; ++i) {\n    hashBytes.push(hash.charCodeAt(i));\n  }\n\n  //console.log(dT(), 'SHA-1 hash finish', hashBytes, bytesToHex(hashBytes));\n\n  return new Uint8Array(hashBytes); */\n}\n\nexport function sha256HashSync(bytes: Parameters<typeof convertToUint8Array>[0]) {\n  return subtle.digest('SHA-256', convertToUint8Array(bytes)).then(b => {\n    //console.log('legacy', performance.now() - perfS);\n    return new Uint8Array(b);\n  });\n  /* //console.log('SHA-256 hash start');\n\n  let perfS = performance.now();\n  \n\n  let perfD = performance.now();\n  let words = typeof(bytes) === 'string' ? bytes : bytesToWordss(bytes as any);\n  let hash = sha256(words);\n  console.log('darutkin', performance.now() - perfD);\n\n  //console.log('SHA-256 hash finish', hash, sha256(words, 'hex'));\n\n  return bytesFromWordss(hash); */\n}\n\nexport function aesEncryptSync(bytes: Uint8Array, keyBytes: Uint8Array, ivBytes: Uint8Array) {\n  //console.log(dT(), 'AES encrypt start', bytes, keyBytes, ivBytes);\n  // console.log('aes before padding bytes:', bytesToHex(bytes));\n  bytes = addPadding(bytes);\n  // console.log('aes after padding bytes:', bytesToHex(bytes));\n\n  const cipher = new IGE(bytesToWordss(keyBytes), bytesToWordss(ivBytes));\n  const encryptedBytes = cipher.encrypt(bytesToWordss(bytes));\n  //console.log(dT(), 'AES encrypt finish');\n\n  return bytesFromWordss(encryptedBytes);\n}\n\nexport function aesDecryptSync(bytes: Uint8Array, keyBytes: Uint8Array, ivBytes: Uint8Array) {\n  //console.log(dT(), 'AES decrypt start', bytes, keyBytes, ivBytes);\n\n  const cipher = new IGE(bytesToWordss(keyBytes), bytesToWordss(ivBytes));\n  const decryptedBytes = cipher.decrypt(bytesToWordss(bytes));\n\n  //console.log(dT(), 'AES decrypt finish');\n\n  return bytesFromWordss(decryptedBytes);\n}\n\nexport function rsaEncrypt(bytes: Uint8Array, publicKey: RSAPublicKeyHex) {\n  //console.log(dT(), 'RSA encrypt start', publicKey, bytes);\n\n  const N = str2bigInt(publicKey.modulus, 16);\n  const E = str2bigInt(publicKey.exponent, 16);\n  const X = str2bigInt(bytesToHex(bytes), 16);\n\n  const encryptedBigInt = powMod(X, E, N);\n  const encryptedBytes = bytesFromHex(bigInt2str(encryptedBigInt, 16));\n\n  //console.log(dT(), 'RSA encrypt finish');\n\n  return encryptedBytes;\n}\n\nexport async function hash_pbkdf2(buffer: Parameters<SubtleCrypto['importKey']>[1], salt: HkdfParams['salt'], iterations: number) {\n  const importKey = await subtle.importKey(\n    'raw',\n    buffer,\n    {name: 'PBKDF2'},\n    false,\n    [/* 'deriveKey',  */'deriveBits']\n  );\n  \n  /* await subtle.deriveKey(\n    {\n      name: 'PBKDF2',\n      salt,\n      iterations,\n      hash: {name: 'SHA-512'}\n    },\n    importKey,\n    {\n      name: 'AES-CTR',\n      length: 256\n    },\n    false,\n    ['encrypt', 'decrypt']\n  ); */\n\n  let bits = subtle.deriveBits({\n      name: 'PBKDF2',\n      salt,\n      iterations,\n      hash: {name: 'SHA-512'},\n    },\n    importKey,\n    512\n  );\n\n  return bits.then(buffer => new Uint8Array(buffer));\n}\n\nexport function pqPrimeFactorization(pqBytes: Uint8Array | number[]) {\n  let result: ReturnType<typeof pqPrimeLeemon>;\n\n  //console.log('PQ start', pqBytes, bytesToHex(pqBytes));\n\n  try {\n    //console.time('PQ leemon');\n    result = pqPrimeLeemon(str2bigInt(bytesToHex(pqBytes), 16, Math.ceil(64 / bpe) + 1));\n    //console.timeEnd('PQ leemon');\n  } catch(e) {\n    console.error('Pq leemon Exception', e);\n  }\n\n  //console.log('PQ finish', result);\n\n  return result;\n}\n\nexport function pqPrimeLeemon(what: number[]): [Uint8Array, Uint8Array, number] {\n  var minBits = 64;\n  var minLen = Math.ceil(minBits / bpe) + 1;\n  var it = 0;\n  var i, q;\n  var j, lim;\n  var P;\n  var Q;\n  var a = new Array(minLen);\n  var b = new Array(minLen);\n  var c = new Array(minLen);\n  var g = new Array(minLen);\n  var z = new Array(minLen);\n  var x = new Array(minLen);\n  var y = new Array(minLen);\n\n  for(i = 0; i < 3; ++i) {\n    q = (nextRandomUint(8) & 15) + 17;\n    copy_(x, mod(int2bigInt(nextRandomUint(32), 32, 0), what));\n    copy_(y, x);\n    lim = 1 << (i + 18);\n\n    for (j = 1; j < lim; ++j) {\n      ++it;\n      copy_(a, x);\n      copy_(b, x);\n      copyInt_(c, q);\n\n      while(!isZero(b)) {\n        if(b[0] & 1) {\n          add_(c, a);\n          if(greater(c, what)) {\n            sub_(c, what);\n          }\n        }\n        add_(a, a);\n        if(greater(a, what)) {\n          sub_(a, what);\n        }\n        rightShift_(b, 1);\n      }\n\n      copy_(x, c);\n      if(greater(x, y)) {\n        copy_(z, x);\n        sub_(z, y);\n      } else {\n        copy_(z, y);\n        sub_(z, x);\n      }\n      eGCD_(z, what, g, a, b);\n      if(!equalsInt(g, 1)) {\n        break;\n      }\n      if((j & (j - 1)) === 0) {\n        copy_(y, x);\n      }\n    }\n    if(greater(g, one)) {\n      break;\n    }\n  }\n\n  divide_(what, g, x, y);\n\n  if(greater(g, x)) {\n    P = x;\n    Q = g;\n  } else {\n    P = g;\n    Q = x;\n  }\n\n  // console.log(dT(), 'done', bigInt2str(what, 10), bigInt2str(P, 10), bigInt2str(Q, 10))\n\n  return [new Uint8Array(bigInt2bytes(P)), new Uint8Array(bigInt2bytes(Q)), it];\n}\n\nexport function bytesModPow(x: number[] | Uint8Array, y: number[] | Uint8Array, m: number[] | Uint8Array) {\n  try {\n    const xBigInt = str2bigInt(bytesToHex(x), 16);\n    const yBigInt = str2bigInt(bytesToHex(y), 16);\n    const mBigInt = str2bigInt(bytesToHex(m), 16);\n    const resBigInt = powMod(xBigInt, yBigInt, mBigInt);\n\n    return bytesFromHex(bigInt2str(resBigInt, 16));\n  } catch(e) {\n    console.error('mod pow error', e);\n  }\n\n  //return bytesFromBigInt(new BigInteger(x).modPow(new BigInteger(y), new BigInteger(m)), 256);\n}\n\n//export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n//export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  //console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  //console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { bytesToHex } from '../../helpers/bytes';\nimport { isObject, longFromInts } from './bin_utils';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { str2bigInt, dup, divide_, bigInt2str } from '../../vendor/leemon';\nimport Schema, { MTProtoConstructor } from './schema';\n\n                      \n// @ts-ignore\nimport { gzipUncompress } from '../crypto/crypto_utils';\n          \n\nconst boolFalse = +Schema.API.constructors.find(c => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find(c => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find(c => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find(c => c.predicate === 'gzip_packed').id;\n\n//console.log('boolFalse', boolFalse === 0xbc799737);\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;//Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    //let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    //console.log('perf uint8', performance.now() - perf);\n\n    //perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    //console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n  \n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n  \n      resultArray.set(this.byteView.subarray(0, this.offset));\n  \n      return resultArray;\n    }\n  \n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n  \n    //console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    //const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n    \n    this.createBuffer();\n    \n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32), \n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n  \n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n  \n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n  \n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n  \n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n  \n    if(typeof sLong !== 'string') {\n      sLong = sLong ? sLong.toString() : '0';\n    }\n\n    const R = 0x100000000;\n    //const divRem = bigStringInt(sLong).divideAndRemainder(bigint(R));\n\n    const a = str2bigInt(sLong, 10, 64);\n    const q = dup(a);\n    const r = dup(a);\n    divide_(a, str2bigInt((R).toString(16), 16, 64), q, r);\n    //divInt_(a, R);\n\n    const high = +bigInt2str(q, 10);\n    let low = +bigInt2str(r, 10);\n\n    if(high < low) {\n      low -= R; \n    }\n\n    //console.log('storeLong', sLong, divRem[0].intValue(), divRem[1].intValue(), high, low);\n  \n    //this.writeInt(divRem[1].intValue(), (field || '') + ':long[low]');\n    //this.writeInt(divRem[0].intValue(), (field || '') + ':long[high]');\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n  \n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    doubleView[0] = f;\n  \n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n  \n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n  \n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n  \n    this.checkLength(sUTF8.length + 8);\n  \n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n  \n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n  \n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n  \n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n  \n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n  \n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n  \n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find(m => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n  \n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            //console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n        \n        //console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n      \n      //console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n  \n  public storeObject(obj: any, type: string, field?: string) {\n    //console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n  \n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if (type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if (type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n    \n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find(c => c.predicate === predicate);\n  \n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n  \n    if(predicate === type) {\n      isBare = true;\n    }\n  \n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      //console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        //console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            //console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      //console.log('storeObject', param, type);\n  \n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n  \n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug = \n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    //buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    //console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  private readInt(field: string) {\n    //if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n  \n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n  \n    this.debug/*  || field.includes('[dialog][read_outbox_max_id]') */ \n      && console.log('<<<', i.toString(16), i, field, \n      this.byteView.slice(this.offset - 16, this.offset + 16), \n      this.byteView.slice(this.offset - 16, this.offset + 16).hex);\n  \n    this.offset += 4;\n  \n    return i;\n  }\n  \n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n  \n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n  \n    return doubleView[0];\n  }\n  \n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n  \n    //const longDec = bigint(iHigh).shiftLeft(32).add(bigint(iLow)).toString();\n    const longDec = longFromInts(iHigh, iLow);\n\n    if(!this.mtproto) {\n      const num = +longDec;\n      if(Number.isSafeInteger(num)) {\n        // @ts-ignore\n        return num;\n      }\n    }\n  \n    // @ts-ignore\n    return longDec;\n  }\n  \n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n  \n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch (e) {\n      s = sUTF8;\n    }\n  \n    this.debug && console.log('<<<', s, (field || '') + ':string');\n  \n    return s;\n  }\n  \n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    const bytes = this.byteView.subarray(this.offset, this.offset + len);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n  \n    return bytes;\n  }\n  \n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n  \n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView.subarray(this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n  \n    return bytes;\n  }\n  \n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n  \n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView.subarray(this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n  \n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n  \n    return result;\n  }\n  \n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n  \n    field = field || type || 'Object';\n  \n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n  \n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find(c => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find(c => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n  \n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n  \n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n  \n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n  \n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n  \n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n        \n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n  \n    const predicate = constructorData.predicate;\n  \n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            //console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          //console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n  \n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n  \n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n            \n          result[param.name] = value;\n        }\n      }\n    }\n  \n    if(fallback) {\n      this.mtproto = true;\n    }\n  \n    return result;\n  }\n  \n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n  \n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport { TLDeserialization, TLSerialization };\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CryptoWorker from \"../crypto/cryptoworker\";\r\nimport {str2bigInt, isZero,\r\n  bigInt2str, powMod, int2bigInt, mult, mod, sub, bitSize, negative, add, greater} from '../../vendor/leemon';\r\n\r\nimport {logger, LogTypes} from '../logger';\r\nimport { AccountPassword, InputCheckPasswordSRP, PasswordKdfAlgo } from \"../../layer\";\r\nimport { bufferConcats, bytesToHex, bytesFromHex, bytesXor, convertToUint8Array } from \"../../helpers/bytes\";\r\nimport { addPadding } from \"../mtproto/bin_utils\";\r\n//import { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nconst log = logger('SRP', LogTypes.Error);\r\n\r\n//MOUNT_CLASS_TO && Object.assign(MOUNT_CLASS_TO, {str2bigInt, bigInt2str, int2bigInt});\r\n\r\nexport async function makePasswordHash(password: string, client_salt: Uint8Array, server_salt: Uint8Array) {\r\n  // ! look into crypto_methods.test.ts\r\n  let buffer = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(client_salt, new TextEncoder().encode(password), client_salt));\r\n  //log('encoded 1', bytesToHex(new Uint8Array(buffer)));\r\n\r\n  buffer = bufferConcats(server_salt, buffer, server_salt);\r\n\r\n  buffer = await CryptoWorker.invokeCrypto('sha256-hash', buffer);\r\n  //log('encoded 2', buffer, bytesToHex(new Uint8Array(buffer)));\r\n\r\n  let hash = await CryptoWorker.invokeCrypto('pbkdf2', new Uint8Array(buffer), client_salt, 100000);\r\n  //log('encoded 3', hash, bytesToHex(new Uint8Array(hash)));\r\n\r\n  hash = bufferConcats(server_salt, hash, server_salt);\r\n\r\n  buffer = await CryptoWorker.invokeCrypto('sha256-hash', hash);\r\n  //log('got password hash:', buffer, bytesToHex(new Uint8Array(buffer)));\r\n\r\n  return buffer;\r\n}\r\n\r\nexport async function computeSRP(password: string, state: AccountPassword, isNew: boolean) {\r\n  const algo = (isNew ? state.new_algo : state.current_algo) as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n  //console.log('computeSRP:', password, state, isNew, algo);\r\n\r\n  const p = str2bigInt(bytesToHex(algo.p), 16);\r\n  const g = int2bigInt(algo.g, 32, 256);\r\n  \r\n  //log('p', bigInt2str(p, 16));\r\n  \r\n  /* if(B.compareTo(BigInteger.ZERO) < 0) {\r\n    console.error('srp_B < 0')\r\n  }\r\n  \r\n  if(B.compareTo(p) <= 0) {\r\n    console.error('srp_B <= p');\r\n  } */\r\n  \r\n  /* let check_prime_and_good = (bytes: any, g: number) => {\r\n    let good_prime = 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b';\r\n    \r\n    if(bytesToHex(bytes) === good_prime && [3, 4, 5, 7].indexOf(g) !== -1) {\r\n      return true;\r\n    }\r\n    \r\n    // TO-DO check_prime_and_good_check\r\n  }; */\r\n  \r\n  //check_prime_and_good(algo.p, g);\r\n  \r\n  const pw_hash = await makePasswordHash(password, algo.salt1, algo.salt2);\r\n  const x = str2bigInt(bytesToHex(pw_hash), 16);\r\n  \r\n  //log('computed pw_hash:', pw_hash, x, bytesToHex(new Uint8Array(pw_hash)));\r\n  \r\n  const padArray = function(arr: number[] | Uint8Array, len: number) {\r\n    if(!(arr instanceof Uint8Array)) {\r\n      arr = convertToUint8Array(arr);\r\n    }\r\n    \r\n    return addPadding(arr, len, true, true, true);\r\n  };\r\n  \r\n  const v = powMod(g, x, p);\r\n  \r\n  const flipper = (arr: Uint8Array | number[]) => {\r\n    const out = new Uint8Array(arr.length);\r\n    for(let i = 0; i < arr.length; i += 4) {\r\n      out[i] = arr[i + 3];\r\n      out[i + 1] = arr[i + 2];\r\n      out[i + 2] = arr[i + 1];\r\n      out[i + 3] = arr[i];\r\n    }\r\n    \r\n    return out;\r\n  };\r\n  \r\n  // * https://core.telegram.org/api/srp#setting-a-new-2fa-password\r\n  if(isNew) {\r\n    const bytes = bytesFromHex(bigInt2str(v, 16));\r\n    return padArray(/* (isBigEndian ? bytes.reverse() : bytes) */bytes, 256);\r\n  }\r\n  \r\n  const B = str2bigInt(bytesToHex(state.srp_B), 16);\r\n  //log('B', bigInt2str(B, 16));\r\n  \r\n  const pForHash = padArray(bytesFromHex(bigInt2str(p, 16)), 256);\r\n  const gForHash = padArray(bytesFromHex(bigInt2str(g, 16)), 256); // like uint8array\r\n  const b_for_hash = padArray(bytesFromHex(bigInt2str(B, 16)), 256);\r\n  /* log(bytesToHex(pForHash));\r\n  log(bytesToHex(gForHash));\r\n  log(bytesToHex(b_for_hash)); */\r\n\r\n  //log('g_x', bigInt2str(g_x, 16));\r\n\r\n  const kHash = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(pForHash, gForHash));\r\n  const k = str2bigInt(bytesToHex(kHash), 16);\r\n\r\n  //log('k', bigInt2str(k, 16));\r\n\r\n  // kg_x = (k * g_x) % p\r\n  const k_v = mod(mult(k, v), p);\r\n\r\n  // good\r\n\r\n  //log('kg_x', bigInt2str(kg_x, 16));\r\n\r\n  const is_good_mod_exp_first = (modexp: any, prime: any) => {\r\n    const diff = sub(prime, modexp);\r\n    const min_diff_bits_count = 2048 - 64;\r\n    const max_mod_exp_size = 256;\r\n    if(negative(diff) ||\r\n      bitSize(diff) < min_diff_bits_count || \r\n      bitSize(modexp) < min_diff_bits_count || \r\n      Math.floor((bitSize(modexp) + 7) / 8) > max_mod_exp_size)\r\n        return false;\r\n    return true;\r\n  };\r\n\r\n  const generate_and_check_random = async() => {\r\n    while(true) {\r\n      const a = str2bigInt(bytesToHex(flipper(state.secure_random)), 16);\r\n      //const a = str2bigInt('9153faef8f2bb6da91f6e5bc96bc00860a530a572a0f45aac0842b4602d711f8bda8d59fb53705e4ae3e31a3c4f0681955425f224297b8e9efd898fec22046debb7ba8a0bcf2be1ada7b100424ea318fdcef6ccfe6d7ab7d978c0eb76a807d4ab200eb767a22de0d828bc53f42c5a35c2df6e6ceeef9a3487aae8e9ef2271f2f6742e83b8211161fb1a0e037491ab2c2c73ad63c8bd1d739de1b523fe8d461270cedcf240de8da75f31be4933576532955041dc5770c18d3e75d0b357df9da4a5c8726d4fced87d15752400883dc57fa1937ac17608c5446c4774dcd123676d683ce3a1ab9f7e020ca52faafc99969822717c8e07ea383d5fb1a007ba0d170cb', 16);\r\n\r\n      //console.log('ITERATION');\r\n\r\n      //log('g a p', bigInt2str(g, 16), bigInt2str(a, 16), bigInt2str(p, 16));\r\n\r\n      const A = powMod(g, a, p);\r\n      //log('A MODPOW', bigInt2str(A, 16));\r\n      if(is_good_mod_exp_first(A, p)) {\r\n        const a_for_hash = bytesFromHex(bigInt2str(A, 16));\r\n\r\n        const s = await CryptoWorker.invokeCrypto('sha256-hash', bufferConcats(a_for_hash, b_for_hash));\r\n        const u = str2bigInt(s.hex, 16);\r\n        if(!isZero(u) && !negative(u))\r\n          return {a, a_for_hash, u};\r\n      } \r\n    }\r\n  }\r\n    \r\n\r\n  const {a, a_for_hash, u} = await generate_and_check_random();\r\n\r\n  /* log('a', bigInt2str(a, 16));\r\n  log('a_for_hash', bytesToHex(a_for_hash));\r\n  log('u', bigInt2str(u, 16)); */\r\n\r\n  // g_b = (B - kg_x) % p\r\n  /* log('B - kg_x', bigInt2str(sub(B, kg_x), 16));\r\n  log('subtract', bigInt2str(B, 16), bigInt2str(kg_x, 16));\r\n  log('B - kg_x', bigInt2str(sub(B, kg_x), 16)); */\r\n\r\n  let g_b: number[];\r\n  if(!greater(B, k_v)) {\r\n    //log('negative');\r\n    g_b = add(B, p);\r\n  } else g_b = B;\r\n  g_b = mod(sub(g_b, k_v), p);\r\n  /* let g_b = sub(B, kg_x);\r\n  if(negative(g_b)) g_b = add(g_b, p); */\r\n  \r\n  //log('g_b', bigInt2str(g_b, 16));\r\n\r\n  /* if(!is_good_mod_exp_first(g_b, p))\r\n    throw new Error('bad g_b'); */\r\n\r\n  const ux = mult(u, x);\r\n  //log('u and x multiply', bigInt2str(u, 16), bigInt2str(x, 16), bigInt2str(ux, 16));\r\n  const a_ux = add(a, ux);\r\n  const S = powMod(g_b, a_ux, p);\r\n\r\n  const K = await CryptoWorker.invokeCrypto('sha256-hash', padArray(bytesFromHex(bigInt2str(S, 16)), 256));\r\n\r\n  //log('K', bytesToHex(K), new Uint32Array(new Uint8Array(K).buffer));\r\n\r\n  let h1 = await CryptoWorker.invokeCrypto('sha256-hash', pForHash);\r\n  const h2 = await CryptoWorker.invokeCrypto('sha256-hash', gForHash);\r\n  h1 = bytesXor(h1, h2);\r\n\r\n  const buff = bufferConcats(h1, \r\n    await CryptoWorker.invokeCrypto('sha256-hash', algo.salt1),\r\n    await CryptoWorker.invokeCrypto('sha256-hash', algo.salt2),\r\n    a_for_hash,\r\n    b_for_hash,\r\n    K\r\n  );\r\n\r\n  const M1 = await CryptoWorker.invokeCrypto('sha256-hash', buff);\r\n\r\n  const out = {\r\n    _: 'inputCheckPasswordSRP', \r\n    srp_id: state.srp_id, \r\n    A: new Uint8Array(a_for_hash), \r\n    M1\r\n  } as InputCheckPasswordSRP.inputCheckPasswordSRP;\r\n\r\n\r\n  //log('out', bytesToHex(out.A), bytesToHex(out.M1));\r\n  return out;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// import { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport CryptoWorkerMethods, { CryptoMethods } from './crypto_methods';\r\n\r\n                      \r\nimport { aesDecryptSync, aesEncryptSync, bytesModPow, gzipUncompress, hash_pbkdf2, pqPrimeFactorization, rsaEncrypt, sha1HashSync, sha256HashSync } from './crypto_utils';\r\nimport { computeSRP } from './srp';\r\n          \r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\nclass CryptoWorker extends CryptoWorkerMethods {\r\n  private webWorker: Worker | boolean = false;\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n  private debug = false;\r\n\r\n  private utils: CryptoMethods;\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('CW constructor');\r\n\r\n                          \r\n    this.utils = {\r\n      'sha1-hash': sha1HashSync,\r\n      'sha256-hash': sha256HashSync,\r\n      'pbkdf2': hash_pbkdf2,\r\n      'aes-encrypt': aesEncryptSync,\r\n      'aes-decrypt': aesDecryptSync,\r\n      'rsa-encrypt': rsaEncrypt,\r\n      'factorize': pqPrimeFactorization,\r\n      'mod-pow': bytesModPow,\r\n      'gzipUncompress': gzipUncompress,\r\n      'computeSRP': computeSRP\r\n    };\r\n\r\n    // Promise.all([\r\n    //   import('./crypto_utils').then(utils => {\r\n    //     Object.assign(this.utils, {\r\n    //       'sha1-hash': utils.sha1HashSync,\r\n    //       'sha256-hash': utils.sha256HashSync,\r\n    //       'pbkdf2': utils.hash_pbkdf2,\r\n    //       'aes-encrypt': utils.aesEncryptSync,\r\n    //       'aes-decrypt': utils.aesDecryptSync,\r\n    //       'rsa-encrypt': utils.rsaEncrypt,\r\n    //       'factorize': utils.pqPrimeFactorization,\r\n    //       'mod-pow': utils.bytesModPow,\r\n    //       'gzipUncompress': utils.gzipUncompress,\r\n    //     });\r\n    //   }),\r\n\r\n    //   import('./srp').then(srp => {\r\n    //     this.utils.computeSRP = srp.computeSRP;\r\n    //   })/* ,\r\n\r\n    //   import('../bin_utils').then(utils => {\r\n    //     this.utils.unzip = utils.gzipUncompress;\r\n    //   }) */\r\n    // ]);\r\n\r\n    return;\r\n             \r\n                       \r\n                                                          \r\n                                             \r\n                                       \r\n                                           \r\n                               \r\n                                       \r\n                                             \r\n                                  \r\n                  \r\n                                                            \r\n           \r\n          \r\n\r\n                                             \r\n                                           \r\n                                 \r\n          \r\n         \r\n     \r\n              \r\n  }\r\n\r\n                         \r\n                                                     \r\n                                         \r\n                                \r\n                                                                      \r\n                               \r\n                                   \r\n     \r\n   \r\n            \r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && console.log('CW start', task, args);\r\n\r\n                          \r\n    // @ts-ignore\r\n    return Promise.resolve<T>(this.utils[task](...args));\r\n             \r\n                                                \r\n                                                                     \r\n  \r\n                    \r\n             \r\n                            \r\n            \r\n        \r\n\r\n                                                       \r\n                                \r\n                            \r\n  \r\n                    \r\n       \r\n              \r\n  }\r\n\r\n                         \r\n                            \r\n                        \r\n                                       \r\n                                                        \r\n         \r\n\r\n                              \r\n     \r\n   \r\n            \r\n}\r\n\r\nconst cryptoWorker = new CryptoWorker();\r\n// MOUNT_CLASS_TO.CryptoWorker = cryptoWorker;\r\nexport default cryptoWorker;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport { longFromInts } from './bin_utils';\nimport { nextRandomUint } from '../../helpers/random';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { WorkerTaskVoidTemplate } from '../../types';\nimport { notifySomeone } from '../../helpers/context';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager {\n  private lastMessageId: [number, number] = [0, 0];\n  private timeOffset: number = 0;\n\n  constructor() {\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = longFromInts(messageId[0], messageId[1]);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    sessionStorage.set({\n      server_time_offset: newTimeOffset\n    });\n\n    this.lastMessageId = [0, 0];\n    this.timeOffset = newTimeOffset;\n    \n    //console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n                          \n    const task: ApplyServerTimeOffsetTask = {\n      type: 'applyServerTimeOffset',\n      payload: newTimeOffset\n    };\n    notifySomeone(task);\n              \n\n    return changed;\n  }\n}\n\nconst timeManager = new TimeManager();\nMOUNT_CLASS_TO.timeManager = timeManager;\nexport default timeManager;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import aesjs from 'aes-js';\r\nimport AES from \"@cryptography/aes\";\r\nimport { bytesFromWordss } from \"../../../helpers/bytes\";\r\nimport { Codec } from \"./codec\";\r\n\r\nclass Counter {\r\n  _counter: Uint8Array;\r\n\r\n  constructor(initialValue: Uint8Array) {\r\n    this._counter = initialValue;\r\n  }\r\n\r\n  increment() {\r\n    for(let i = 15; i >= 0; i--) {\r\n      if(this._counter[i] === 255) {\r\n        this._counter[i] = 0;\r\n      } else {\r\n        this._counter[i]++;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass CTR {\r\n  _counter: Counter;\r\n  _remainingCounter: Uint8Array = null;\r\n  _remainingCounterIndex = 16;\r\n  _aes: AES;\r\n\r\n  constructor(key: Uint8Array, counter: Uint8Array) {\r\n    this._counter = new Counter(counter);\r\n    this._aes = new AES(key);\r\n  }\r\n\r\n  update(payload: Uint8Array) {\r\n    const encrypted = payload.slice();\r\n\r\n    for(let i = 0; i < encrypted.length; i++) {\r\n      if(this._remainingCounterIndex === 16) {\r\n        this._remainingCounter = new Uint8Array(bytesFromWordss(this._aes.encrypt(this._counter._counter)));\r\n        this._remainingCounterIndex = 0;\r\n        this._counter.increment();\r\n      }\r\n\r\n      encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\r\n    }\r\n\r\n    return encrypted;\r\n  }\r\n}\r\n\r\n/* \r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* public enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  public dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  public encNew: CTR;\r\n  public decNew: CTR;\r\n\r\n  public init(codec: Codec) {\r\n    const initPayload = new Uint8Array(64);\r\n    initPayload.randomize();\r\n    \r\n    while(true) {\r\n      let val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | (initPayload[0]);\r\n      let val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | (initPayload[4]);\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n          //initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n          break;\r\n      }\r\n      initPayload.randomize();\r\n    }\r\n\r\n    ////////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    this.encNew = new CTR(encKey, encIv);\r\n    this.decNew = new CTR(decKey, decIv);\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = this.encode(initPayload);\r\n\r\n    //console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  } */\r\n  public encode(payload: Uint8Array) {\r\n    return this.encNew.update(payload);\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.decNew.update(payload);\r\n  }\r\n  /* public encode(payload: Uint8Array) {\r\n    let res = this.encNew.encrypt(payload);\r\n    let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n    return bytes;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.decNew.decrypt(payload);\r\n    let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n    return bytes;\r\n  } */\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { Codec } from \"./codec\";\r\n\r\nexport class IntermediatePacketCodec implements Codec {\r\n  public tag = 0xee;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  //private lol = 0;\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    if((data.length % 4) !== 0) {\r\n      console.error('Encode error!', data.length, data);\r\n    }\r\n\r\n    const len = data.length;\r\n    const header = new Uint8Array(new Int32Array([/* ++this.lol >= 25 ? 0x80000001 :  */len]).buffer);\r\n\r\n    //console.log('got nobody cause im braindead', header, len, /* data,  */data.buffer.byteLength === data.length);\r\n    return header.concat(data);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    const length = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\r\n\r\n    return data.slice(4, 4 + length);\r\n  }\r\n}\r\n\r\nexport default new IntermediatePacketCodec();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from \"../../../config/modes\";\nimport { logger, LogTypes } from \"../../logger\";\nimport MTPNetworker from \"../networker\";\nimport Obfuscation from \"./obfuscation\";\nimport MTTransport, { MTConnection, MTConnectionConstructable } from \"./transport\";\nimport intermediatePacketCodec from './intermediate';\nimport { ConnectionStatus } from \"../connectionStatus\";\n\n                    \nimport transportController from \"./controller\";\n          \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = intermediatePacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any, \n    reject: any, \n    body: Uint8Array, \n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n\n  //private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(private Connection: MTConnectionConstructable, \n    private dcId: number, \n    private url: string, \n    private logSuffix: string, \n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    \n    this.connect();\n  }\n\n  private onOpen = () => {\n    this.connected = true;\n\n                        \n    transportController.setTransportOpened('websocket');\n              \n\n    const initPayload = this.obfuscation.init(this.codec);\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    } else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    }\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = (buffer: ArrayBuffer) => {\n    let data = this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      //this.pending = this.pending.filter(p => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then(response => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        //this.releasePending();\n      }).catch(err => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      //this.dd();\n      return;\n    }\n\n    //console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', data.hex);\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n    \n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n    \n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = self.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                        \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n              \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n    \n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    this.pending.forEach(pending => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    //this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    //this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = this.connected ? this.encodeBody(body) : undefined;\n\n    //return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private releasePending(/* tt = false */) {\n    if(!this.connected) {\n      //this.connect();\n      return;\n    }\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    //this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    //for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      const {body, bodySent} = pending;\n      let encoded = pending.encoded;\n      if(body && !bodySent) {\n\n        //this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        if(!encoded) {\n          encoded = pending.encoded = this.encodeBody(body);\n        }\n\n        this.connection.send(encoded);\n        \n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        //delete pending.body;\n      }\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { notifyAll } from \"../../../helpers/context\";\r\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\r\nimport { WorkerTaskVoidTemplate } from \"../../../types\";\r\nimport { MTConnection } from \"./transport\";\r\n\r\nlet socketId = 0;\r\nexport interface SocketProxyTask extends WorkerTaskVoidTemplate {\r\n  type: 'socketProxy',\r\n  payload: SocketProxySetupTask | SocketProxySendTask | SocketProxyCloseTask\r\n};\r\n\r\nexport interface SocketProxySetupTask extends WorkerTaskVoidTemplate {\r\n  type: 'setup',\r\n  payload: {\r\n    dcId: number,\r\n    url: string,\r\n    logSuffix: string\r\n  },\r\n  id: number\r\n};\r\n\r\nexport interface SocketProxySendTask extends WorkerTaskVoidTemplate {\r\n  type: 'send',\r\n  payload: Uint8Array,\r\n  id: number\r\n};\r\n\r\nexport interface SocketProxyCloseTask extends WorkerTaskVoidTemplate {\r\n  type: 'close',\r\n  id: number\r\n};\r\n\r\n                   \r\nexport default class SocketProxied extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private id: number;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n    this.id = ++socketId;\r\n    socketsProxied.set(this.id, this);\r\n\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy',\r\n      payload: {\r\n        type: 'setup', \r\n        payload: {\r\n          dcId, \r\n          url,\r\n          logSuffix\r\n        },\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n\r\n  public send(payload: Uint8Array) {\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy', \r\n      payload: {\r\n        type: 'send',\r\n        payload,\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n\r\n  public close() {\r\n    const task: SocketProxyTask = {\r\n      type: 'socketProxy',\r\n      payload: {\r\n        type: 'close',\r\n        id: this.id\r\n      }\r\n    };\r\n\r\n    notifyAll(task);\r\n  }\r\n}\r\n          \r\n\r\nexport const socketsProxied: Map<number, SocketProxied> = new Map();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport MTTransport, { MTConnectionConstructable } from './transports/transport';\r\nimport Modes from '../../config/modes';\r\nimport { indexOfAndSplice } from '../../helpers/array';\r\nimport App from '../../config/app';\r\n\r\n                        \r\nimport HTTP from './transports/http';\r\n          \r\n\r\n                      \r\nimport Socket from './transports/websocket';\r\nimport TcpObfuscated from './transports/tcpObfuscated';\r\nimport { IS_SAFARI } from '../../environment/userAgent';\r\nimport { IS_WEB_WORKER } from '../../helpers/context';\r\nimport SocketProxied from './transports/socketProxied';\r\nimport { DcId } from '../../types';\r\n          \r\n\r\nexport type TransportType = 'websocket' | 'https' | 'http';\r\nexport type ConnectionType = 'client' | 'download' | 'upload';\r\ntype Servers = {\r\n  [transportType in TransportType]: {\r\n    [connectionType in ConnectionType]: {\r\n      [dcId: DcId]: MTTransport[]\r\n    }\r\n  }\r\n};\r\n\r\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\r\n\r\nexport class DcConfigurator {\r\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\r\n\r\n  private dcOptions = Modes.test\r\n    ? [\r\n      {id: 1, host: '149.154.175.10',  port: 80},\r\n      {id: 2, host: '149.154.167.40',  port: 80},\r\n      {id: 3, host: '149.154.175.117', port: 80}\r\n    ]\r\n    : [\r\n      {id: 1, host: '149.154.175.50',  port: 80},\r\n      {id: 2, host: '149.154.167.50',  port: 80},\r\n      {id: 3, host: '149.154.175.100', port: 80},\r\n      {id: 4, host: '149.154.167.91',  port: 80},\r\n      {id: 5, host: '149.154.171.5',   port: 80}\r\n    ];\r\n\r\n  public chosenServers: Servers = {} as any;\r\n\r\n                        \r\n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, suffix: string) => {\r\n    const path = 'apiws' + TEST_SUFFIX;\r\n    const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n\r\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\r\n\r\n    const oooohLetMeLive: MTConnectionConstructable = (IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\r\n\r\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\r\n  };\r\n            \r\n\r\n                          \r\n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, suffix: string) => {\r\n    let chosenServer: string;\r\n    if(Modes.ssl || !Modes.http) {\r\n      const subdomain = this.sslSubdomains[dcId - 1] + (connectionType !== 'client' ? '-1' : '');\r\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\r\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\r\n    } else {\r\n      for(let dcOption of this.dcOptions) {\r\n        if(dcOption.id === dcId) {\r\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n    return new HTTP(dcId, chosenServer, logSuffix);\r\n  };\r\n            \r\n\r\n  public chooseServer(\r\n    dcId: DcId, \r\n    connectionType: ConnectionType = 'client', \r\n    transportType: TransportType = Modes.transport, \r\n    reuse = true\r\n  ) {\r\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\r\n      connectionType = 'client';\r\n    } */\r\n\r\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\r\n      this.chosenServers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const servers = this.chosenServers[transportType][connectionType];\r\n\r\n    if(!(dcId in servers)) {\r\n      servers[dcId] = [];\r\n    }\r\n\r\n    const transports = servers[dcId];\r\n\r\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\r\n      let transport: MTTransport;\r\n\r\n      const suffix = connectionType === 'client' ? '' : '-1';\r\n\r\n                                                \r\n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, suffix);\r\n                             \r\n                                                                     \r\n               \r\n                                                                   \r\n                \r\n  \r\n      if(!transport) {\r\n        console.error('No chosenServer!', dcId);\r\n        return null;\r\n      }\r\n      \r\n      if(reuse) {\r\n        transports.push(transport);\r\n      }\r\n      \r\n      return transport;\r\n    }\r\n  \r\n    return transports[0];\r\n  }\r\n  \r\n  public static removeTransport<T>(obj: any, transport: T) {\r\n    for(const transportType in obj) {\r\n      // @ts-ignore\r\n      for(const connectionType in obj[transportType]) {\r\n        // @ts-ignore\r\n        for(const dcId in obj[transportType][connectionType]) {\r\n          // @ts-ignore\r\n          const transports: T[] = obj[transportType][connectionType][dcId];\r\n          indexOfAndSplice(transports, transport);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DcConfigurator();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../../config/app\";\nimport { deferredPromise } from \"../../../helpers/cancellablePromise\";\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\nimport { pause } from \"../../../helpers/schedulers/pause\";\nimport dcConfigurator, { TransportType } from \"../dcConfigurator\";\nimport type HTTP from \"./http\";\nimport type TcpObfuscated from \"./tcpObfuscated\";\nimport MTTransport from \"./transport\";\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    setTimeout(() => {\n      this.waitForWebSocket();\n    }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => websocketPromise.resolve(false), timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n    \n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { pause } from '../../../helpers/schedulers/pause';\r\nimport { DcId } from '../../../types';\r\nimport { logger, LogTypes } from '../../logger';\r\nimport type MTPNetworker from '../networker';\r\nimport MTTransport from './transport';\r\nimport Modes from '../../../config/modes';\r\n\r\n                    \r\nimport transportController from './controller';\r\n          \r\n\r\nexport default class HTTP implements MTTransport {\r\n  public networker: MTPNetworker;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private pending: Array<{\r\n    resolve: (body: Uint8Array) => void, \r\n    reject: any, \r\n    body: Uint8Array\r\n  }> = [];\r\n  private releasing: boolean;\r\n\r\n  public connected: boolean;\r\n  private destroyed: boolean;\r\n  private debug: boolean;\r\n  \r\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\r\n    this.debug = Modes.debug && false;\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    \r\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connected = false;\r\n  }\r\n\r\n  public _send(body: Uint8Array, mode?: RequestMode) {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    return fetch(this.url, {method: 'POST', body, mode}).then(response => {\r\n      if(response.status !== 200 && !mode) {\r\n        response.arrayBuffer().then(buffer => {\r\n          this.log.error('not 200', \r\n            new TextDecoder(\"utf-8\").decode(new Uint8Array(buffer)));\r\n        });\r\n\r\n        throw response;\r\n      }\r\n\r\n      this.setConnected(true);\r\n\r\n      // * test resending by dropping random request\r\n      // if(Math.random() > .5) {\r\n      //   throw 'asd';\r\n      // }\r\n\r\n      return response.arrayBuffer().then(buffer => {\r\n        return new Uint8Array(buffer);\r\n      }); \r\n    }, (err) => {\r\n      this.setConnected(false);\r\n      throw err;\r\n    });\r\n  }\r\n\r\n  private setConnected(connected: boolean) {\r\n    if(this.connected === connected || this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    this.connected = connected;\r\n\r\n                        \r\n    transportController.setTransportValue('https', connected);\r\n              \r\n  }\r\n\r\n  public destroy() {\r\n    this.setConnected(false);\r\n    this.destroyed = true;\r\n    this.pending.forEach(pending => pending.reject());\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    if(this.networker) {\r\n      return this._send(body);\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending() {\r\n    if(this.releasing) return;\r\n\r\n    this.releasing = true;\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    for(let i = 0; i < this.pending.length; ++i) {\r\n      const pending = this.pending[i];\r\n      const {body, resolve} = pending;\r\n\r\n      try {\r\n        const result = await this._send(body);\r\n        resolve(result);\r\n        this.pending.splice(i, 1);\r\n      } catch(err) {\r\n        this.log.error('Send plain request error:', err);\r\n        await pause(5000);\r\n      }\r\n\r\n      --i;\r\n    }\r\n\r\n    this.releasing = false;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {isObject, sortLongsArray} from './bin_utils';\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoworker';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport timeManager from './timeManager';\nimport networkerFactory from './networkerFactory';\nimport { logger, LogTypes } from '../logger';\nimport { InvokeApiOptions } from '../../types';\nimport { longToBytes } from '../crypto/crypto_utils';\nimport MTTransport from './transports/transport';\nimport { convertToUint8Array, bytesCmp, bytesToHex, bufferConcats } from '../../helpers/bytes';\nimport { nextRandomUint, randomLong } from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                        \nimport HTTP from './transports/http';\n          \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport { bigInt2str, rightShift_, str2bigInt } from '../../vendor/leemon';\nimport { forEachReverse } from '../../helpers/array';\nimport { ConnectionStatus } from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport dcConfigurator, { DcConfigurator } from './dcConfigurator';\n\n//console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n  \n  notContentRelated: true, // ACK\n  noSchedule: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: {\n    resolve: any,\n    reject: any\n  },\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst CONNECTION_TIMEOUT = 5000;\nconst DRAIN_TIMEOUT = 10000;\nlet invokeAfterMsgConstructor: number;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResends: Array<MTLong> = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n  \n                          \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n            \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    req_msg_id: MTLong,\n    resend_msg_ids: Array<MTLong>\n  } | null = null;\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n  \n  public isOnline = false;\n  public status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n  //private disconnectDelay: number;\n  //private pingPromise: CancellablePromise<any>;\n  //public onConnectionStatusChange: (online: boolean) => void;\n\n  //private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  constructor(\n    public dcId: number, \n    private authKey: Uint8Array, \n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array, \n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    //this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name, LogTypes.Log | LogTypes.Debug | LogTypes.Error | LogTypes.Warn, undefined);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n\n    // * handle outcoming dead socket, server will close the connection\n    // if((this.transport as TcpObfuscated).networker) {\n    //   this.disconnectDelay = /* (this.transport as TcpObfuscated).retryTimeout  */75;\n    //   //setInterval(this.sendPingDelayDisconnect, (this.disconnectDelay - 5) * 1000);\n    //   this.sendPingDelayDisconnect();\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = new Uint8Array(8).randomize();\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n  \n    sentMessage.msg_id = timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n  \n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n  \n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n  \n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n  \n    serializer.storeMethod(method, params);\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n  \n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n  \n    if(!this.connectionInited) { // this will call once for each new session\n      ///////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find(m => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n  \n      const initConnection = Schema.API.methods.find(m => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n  \n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(networkerFactory.userAgent || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(networkerFactory.language, 'lang_code');\n      //serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n  \n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find(m => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n      \n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n    \n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n  \n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n  \n    const messageId = timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n  \n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      DcConfigurator.removeTransport(dcConfigurator.chosenServers, this.transport);\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n                              \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n                \n    }\n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                            \n                          \n    if(transport instanceof HTTP) {\n              \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                          \n    }\n              \n              \n\n    if(transport.connected && (transport as TcpObfuscated).connection) {\n      this.setConnectionStatus(ConnectionStatus.Connected);\n    }\n\n    this.resend();\n  }\n\n  public destroy() {\n    this.changeTransport();\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  // private sendPingDelayDisconnect = () => {\n  //   if(this.pingPromise || true) return;\n\n  //   if(!this.isOnline) {\n  //     if((this.transport as TcpObfuscated).connected) {\n  //       (this.transport as TcpObfuscated).handleClose();\n  //     }\n\n  //     return;\n  //   }\n\n  //   this.log('sendPingDelayDisconnect', this.sentPingTimes);\n\n  //   /* if(this.tt) clearTimeout(this.tt);\n  //   this.tt = self.setTimeout(() => {  \n  //     (this.transport as any).ws.close(1000);\n  //     this.tt = 0;\n  //   }, this.disconnectDelay * 1000); */\n  //   /* this.wrapMtpCall('ping_delay_disconnect', {\n  //     ping_id: randomLong(),\n  //     disconnect_delay: this.disconnectDelay\n  //   }, {\n  //     noResponse: true,\n  //     notContentRelated: true\n  //   }); */\n  //   const deferred = this.pingPromise = deferredPromise<void>();\n\n  //   const timeoutTime = this.disconnectDelay * 1000;\n\n  //   /* if(!this.sentPingTimes || true) {\n  //     ++this.sentPingTimes; */\n  //     const startTime = Date.now();\n  //     this.wrapMtpCall('ping', {\n  //       ping_id: randomLong()\n  //     }, {}).then(pong => {\n  //       const elapsedTime = Date.now() - startTime;\n  //       this.log('sendPingDelayDisconnect: response', pong, elapsedTime > timeoutTime);\n\n  //       if(elapsedTime > timeoutTime) {\n  //         deferred.reject();\n  //       } else {\n  //         setTimeout(deferred.resolve, timeoutTime - elapsedTime);\n  //       }\n  //     }, deferred.reject).finally(() => {\n  //       clearTimeout(rejectTimeout);\n  //       //--this.sentPingTimes;\n  //     });\n  //   //}\n\n  //   const rejectTimeout = self.setTimeout(deferred.reject, timeoutTime);\n\n  //   deferred.catch(() => {\n  //     (this.transport as Socket).handleClose();\n  //   });\n\n  //   deferred.finally(() => {\n  //     this.pingPromise = null;\n  //     this.sendPingDelayDisconnect();\n  //   });\n  // };\n\n  // private sendPingDelayDisconnect = () => {\n  //   if(this.pingPromise || true) return;\n\n  //   /* if(!this.isOnline) {\n  //     if((this.transport as TcpObfuscated).connected) {\n  //       (this.transport as TcpObfuscated).connection.close();\n  //     }\n\n  //     return;\n  //   } */\n\n  //   const deferred = this.pingPromise = deferredPromise<void>();\n\n  //   const timeoutTime = this.disconnectDelay * 1000;\n\n  //   const startTime = Date.now();\n  //   this.wrapMtpCall('ping_delay_disconnect', {\n  //     ping_id: randomLong(),\n  //     disconnect_delay: this.disconnectDelay\n  //   }, {}).then(pong => {\n  //     const elapsedTime = Date.now() - startTime;\n  //     this.log('sendPingDelayDisconnect: response', pong, elapsedTime > timeoutTime);\n\n  //     if(elapsedTime > timeoutTime) {\n  //       deferred.reject();\n  //     } else {\n  //       setTimeout(deferred.resolve, timeoutTime - elapsedTime);\n  //     }\n  //   }, deferred.reject).finally(() => {\n  //     clearTimeout(rejectTimeout);\n  //     //--this.sentPingTimes;\n  //   });\n\n  //   const rejectTimeout = self.setTimeout(deferred.reject, timeoutTime);\n\n  //   deferred.catch(() => {\n  //     this.log.error('sendPingDelayDisconnect: catch, closing connection if exists');\n  //     (this.transport as TcpObfuscated).connection.close();\n  //   });\n\n  //   deferred.finally(() => {\n  //     this.pingPromise = null;\n  //     this.sendPingDelayDisconnect();\n  //   });\n  // };\n\n                          \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    //this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      //this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n          baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n        )) {\n        //console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n  \n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n  \n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n  \n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n  \n    const pingMessage = {\n      msg_id: timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n        \n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n        \n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n    \n                               \n                                                                              \n                                                                             \n                  \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n    \n                               \n                                                                          \n                                                                         \n                  \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n  \n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n  \n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      noResponseMsgs.forEach((msgId) => {\n        if(this.sentMessages[msgId]) {\n          const deferred = this.sentMessages[msgId].deferred;\n          delete this.sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n            \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    const promise = new Promise((resolve, reject) => {\n      this.sentMessages[message.msg_id] = Object.assign(message, options, options.notContentRelated \n        ? undefined \n        : {\n          deferred: {resolve, reject}\n        }\n      );\n\n      //this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n      this.pendingMessages[message.msg_id] = 0;\n    \n      if(!options.noSchedule) {\n        this.scheduleRequest();\n      }\n\n      if(isObject(options)) {\n        options.messageId = message.msg_id;\n      }\n    });\n\n    if(!options.notContentRelated && !options.noResponse) {\n      const timeout = setTimeout(() => {\n        if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < CONNECTION_TIMEOUT) {\n          return;\n        }\n\n        this.log.error('timeout', message);\n        if(this.isOnline) {\n          this.setConnectionStatus(ConnectionStatus.TimedOut);\n        }\n\n        /* this.getEncryptedOutput(message).then(bytes => {\n          this.log.error('timeout encrypted', bytes);\n        }); */\n      }, CONNECTION_TIMEOUT);\n  \n      promise.catch(noop).finally(() => {\n        clearTimeout(timeout);\n        this.setConnectionStatus(ConnectionStatus.Connected);\n\n        --this.activeRequests;\n        this.setDrainTimeout();\n      });\n      \n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n\n    return promise;\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(networkerFactory.onConnectionStatusChange) {\n        networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      // if((this.transport as TcpObfuscated).networker) {\n      //   this.sendPingDelayDisconnect();\n      // }\n      /* this.sentPingTimes = 0;\n      this.sendPingDelayDisconnect(); */\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n  \n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n  \n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256-hash', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n  \n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256-hash', sha2aText));\n  \n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256-hash', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n  \n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n  \n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n  \n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    // this.log('scheduled', this.dcId, this.iii)\n\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n  \n    if(this.pendingResends.length) {\n      const resendMsgIds = this.pendingResends.slice();\n      const resendOpts: MTMessageOptions = {\n        noSchedule: true,\n        notContentRelated: true,\n        messageId: '' // will set in wrapMtpMessage->pushMessage\n      };\n\n      //this.log('resendReq messages', resendMsgIds);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: resendMsgIds\n      }, resendOpts);\n\n      this.lastResendReq = {\n        req_msg_id: resendOpts.messageId,\n        resend_msg_ids: resendMsgIds\n      };\n    }\n  \n    let outMessage: MTPNetworker['sentMessages'][keyof MTPNetworker['sentMessages']];\n    const messages: typeof outMessage[] = [];\n      \n    //const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                            \n    let hasApiCall = false;\n    let hasHttpWait = false;\n              \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      //const value = this.pendingMessages[messageId];\n\n      //if(!value || value <= currentTime) {\n        const message = this.sentMessages[messageId];\n        if(message && message.body) {\n          /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n          const messageByteLength = message.body.length + 32;\n\n          if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n            this.log.warn('lengthOverflow', message, messages);\n            lengthOverflow = true;\n\n            if(outMessage) { // if it's not a first message\n              break;\n            }\n          }\n\n          messages.push(message);\n          messagesByteLen += messageByteLength;\n\n                                  \n          if(message.isAPI) {\n            hasApiCall = true;\n          } else if(message.longPoll) {\n            hasHttpWait = true;\n          }\n                    \n\n          outMessage = message;\n        } else {\n          // this.log(message, messageId)\n        }\n\n        delete this.pendingMessages[messageId];\n      //}\n    }\n  \n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    if(hasApiCall && !hasHttpWait) {\n      const serializer = new TLSerialization({mtproto: true});\n      serializer.storeMethod('http_wait', {\n        max_delay: 500,\n        wait_after: 150,\n        max_wait: 3000\n      });\n\n      messages.push({\n        msg_id: timeManager.generateId(),\n        seq_no: this.generateSeqNo(),\n        body: serializer.getBytes(true)\n      });\n    }\n              \n  \n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n  \n                            \n    const noResponseMsgs: Array<string> = messages.filter(message => message.noResponse).map(message => message.msg_id);\n              \n  \n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n  \n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n  \n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n              \n\n                          \n                            \n    if(!(this.transport instanceof HTTP))\n              \n    this.cleanupSent(); // ! WARNING\n              \n  \n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message),\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n  \n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n  \n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */new Uint8Array(paddingLength).randomize()/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    //(message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n  \n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private sendEncryptedRequest(message: MTMessage) {\n    return this.getEncryptedOutput(message).then(requestData => {\n      this.debug && this.log.debug('sendEncryptedRequest: launching message into space:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n      const promise: Promise<Uint8Array> = this.transport.send(requestData) as any;\n      // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n      \n                               \n                     \n               \n      \n                            \n      if(!(this.transport instanceof HTTP)) return promise;\n                \n      \n      const baseError = {\n        code: 406,\n        type: 'NETWORK_BAD_RESPONSE',\n        transport: this.transport\n      };\n      \n      return promise.then((result) => {\n        if(!result?.byteLength) {\n          throw baseError;\n        }\n        \n        // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n        return result;\n      }, (error) => {\n        if(!error.message && !error.type) {\n          error = Object.assign(baseError, {\n            type: 'NETWORK_BAD_REQUEST',\n            originalError: error\n          });\n        }\n\n        throw error;\n      });\n                \n    });\n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    //const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n  \n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + authKeyId.hex);\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n  \n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n  \n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n  \n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n  \n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          //this.updateSession();\n          //this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n  \n        const seqNo = deserializer.fetchInt('seq_no');\n  \n        const totalLength = dataWithPadding.byteLength;\n  \n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n  \n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n  \n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n  \n        //let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true, \n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n  \n              const offset = deserializer.getOffset();\n  \n              //self.log('mt_message!!!!!', result, field);\n  \n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n  \n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n  \n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n  \n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        //this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n  \n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n  \n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой) \n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                            \n                          \n    if(this.transport instanceof HTTP) {\n              \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                          \n    }\n              \n              \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      //this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n  \n    //this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n    \n    //const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      //this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                              \n                            \n      if(this.transport instanceof HTTP)\n                \n      if(this.offline) {\n        //this.log('Cancel scheduled');\n        return;\n      }\n                \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = self.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    delay = 30000;\n              \n\n    this.scheduleRequest(delay);\n  }\n  \n  private reqResendMessage(msgId: MTLong) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId);\n    }\n\n    this.pendingResends.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    // this.log('clean start', this.dcId/*, this.sentMessages*/)\n    Object.keys(this.sentMessages).forEach((msgId) => {\n      const message = this.sentMessages[msgId];\n    \n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete this.sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(this.sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], this.sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete this.sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n  \n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      //delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}) {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n  \n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    for(const id in this.sentMessages) {\n      const msg = this.sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then(res => {\n      this.log('status', res);\n    });\n  } */\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    /* if(this.debug) {\n      this.log('process message', message, messageId, sessionId);\n    } */\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n  \n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n        \n        this.ackMessage(messageId);\n        \n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n  \n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            //const changedOffset = timeManager.applyServerTime(bigStringInt(messageId).shiftRight(32).toString(10));\n            const bigInt = str2bigInt(messageId, 10);\n            rightShift_(bigInt, 32);\n            const changedOffset = timeManager.applyServerTime(+bigInt2str(bigInt, 10));\n            if(message.error_code === 17 || changedOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            //this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n  \n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n        \n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        //this.updateSession();\n  \n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n  \n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && networkerFactory.updatesProcessor) {\n            networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n        \n      case 'msgs_ack': {\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n  \n      case 'msg_detailed_info':\n        if(!this.sentMessages[message.msg_id]) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }\n      case 'msg_new_detailed_info':\n        if(this.pendingAcks.indexOf(message.answer_msg_id)) {\n          break;\n        }\n        this.reqResendMessage(message.answer_msg_id);\n        break;\n  \n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        if(this.lastResendReq && \n          this.lastResendReq.req_msg_id === message.req_msg_id && \n          this.pendingResends.length\n        ) {\n          for(const badMsgId of this.lastResendReq.resend_msg_ids) {\n            const pos = this.pendingResends.indexOf(badMsgId);\n            if(pos !== -1) {\n              this.pendingResends.splice(pos, 1);\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n  \n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              /* if(DEBUG) {\n                this.log.debug('Rpc response', message.result, sentMessage);\n              } */\n\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n              ////this.log('Rpc set connectionInited to:', this.connectionInited);\n            }\n          }\n  \n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId]; \n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        }\n\n        break;\n      }\n  \n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n        \n        if(networkerFactory.updatesProcessor !== null) {\n          networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ConnectionStatusChange } from \"./connectionStatus\";\r\nimport MTPNetworker from \"./networker\";\r\nimport { InvokeApiOptions } from \"../../types\";\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { indexOfAndSplice } from \"../../helpers/array\";\r\n\r\nexport class NetworkerFactory {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  public onConnectionStatusChange: (info: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n  public userAgent = navigator.userAgent;\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    //console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter(networker => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n      \r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst networkerFactory = new NetworkerFactory();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.networkerFactory = networkerFactory);\r\nexport default networkerFactory;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { TLSerialization } from \"./tl_utils\";\r\nimport CryptoWorker from '../crypto/cryptoworker';\r\nimport { bytesFromHex, bytesToHex } from \"../../helpers/bytes\";\r\nimport { bigInt2str, str2bigInt } from \"../../vendor/leemon\";\r\nimport Modes from \"../../config/modes\";\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   * \r\n   * \r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via \r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map(keyParsed => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return CryptoWorker.invokeCrypto('sha1-hash', buffer).then(bytes => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n  \r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      //console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      //fingerprintHex = bigStringInt(fingerprints[i]).toString(16);\r\n      let fingerprintHex = bigInt2str(str2bigInt(fingerprints[i], 10), 16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      //console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { TLSerialization, TLDeserialization } from \"./tl_utils\";\nimport dcConfigurator, { TransportType } from \"./dcConfigurator\";\nimport rsaKeysManager from \"./rsaKeysManager\";\nimport timeManager from \"./timeManager\";\n\nimport CryptoWorker from \"../crypto/cryptoworker\";\n\nimport { logger, LogTypes } from \"../logger\";\nimport { bytesCmp, bytesToHex, bytesFromHex, bytesXor } from \"../../helpers/bytes\";\nimport DEBUG from \"../../config/debug\";\nimport { cmp, int2bigInt, one, pow, str2bigInt, sub } from \"../../vendor/leemon\";\nimport { addPadding } from \"./bin_utils\";\nimport { Awaited, DcId } from \"../../types\";\nimport { ApiError } from \"./apiManager\";\n\n                    \nimport transportController from \"./transports/controller\";\n          \n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n  \n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n  \n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n  \n  newNonce?: Uint8Array,\n  \n  retry?: number,\n  \n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n  \n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n  \n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n  \n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                      \n  private getTransportTypePromise: Promise<void>;\n            \n  \n  constructor() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n  \n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n    \n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n    \n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n    \n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n    \n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then(result => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n      \n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n      \n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n        \n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n        \n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n        \n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n        \n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n      \n      throw error;\n    });\n  }\n  \n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n    \n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', auth.nonce.hex);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n    \n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n    \n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n    \n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n    \n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n    \n    auth.publicKey = publicKey;\n    \n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n    \n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n    \n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n    \n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n    \n    return this.sendReqDhParams(auth);\n  }\n  \n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = new Uint8Array(32).randomize();\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n    \n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = new Uint8Array(32).randomize();\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256-hash', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n    \n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256-hash', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = str2bigInt(bytesToHex(keyAesEncrypted), 16);\n        const publicKeyModulusBigInt = str2bigInt(auth.publicKey.modulus, 16);\n\n        if(cmp(keyAesEncryptedBigInt, publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n    \n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n    \n    const requestBytes = request.getBytes(true);\n    \n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n    \n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n    \n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n    \n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n    \n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n      \n      throw new Error('[MT] server_DH_params_fail');\n    }\n    \n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n    \n    //console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n    \n    return this.sendSetClientDhParams(auth);\n  }\n  \n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n    \n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1-hash', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n    \n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1-hash', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n    \n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n    \n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n    \n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n    \n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n    \n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n    \n    const offset = deserializer.getOffset();\n    \n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1-hash', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1-hash mismatch');\n    }\n    \n    timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n  \n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n    \n    const _gABigInt = str2bigInt(bytesToHex(gA), 16);\n    const _dhPrimeBigInt = str2bigInt(dhPrimeHex, 16);\n\n    if(cmp(_gABigInt, one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(cmp(_gABigInt, sub(_dhPrimeBigInt, one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n    \n    const _two = int2bigInt(2, 32, 0);\n    const _twoPow = pow(_two, 2048 - 64);\n\n    if(cmp(_gABigInt, _twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(cmp(_gABigInt, sub(_dhPrimeBigInt, _twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n    \n    return true;\n  }\n  \n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n    \n    auth.b = new Uint8Array(256).randomize();\n    //MTProto.secureRandom.nextBytes(auth.b);\n    \n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n    \n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n    \n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1-hash', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n    \n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n    \n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n    \n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n    \n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n    \n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1-hash', authKey),\n    authKeyAux = authKeyHash.slice(0, 8),\n    authKeyId = authKeyHash.slice(-8);\n    \n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n        \n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n        \n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n        \n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n        \n        return auth;\n      }\n      \n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n        \n        return this.sendSetClientDhParams(auth);\n      }\n      \n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1-hash', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n        \n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                      \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n            \n  \n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                          \n      await this.getTransportType();\n                \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId, \n            nonce: new Uint8Array(16).randomize()\n          };\n          \n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n\nexport default new Authorizer();\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { UserAuth } from './mtproto_config';\r\nimport sessionStorage from '../sessionStorage';\r\nimport MTPNetworker, { MTMessage } from './networker';\r\nimport { isObject } from './bin_utils';\r\nimport networkerFactory from './networkerFactory';\r\n//import { telegramMeWebService } from './mtproto';\r\nimport authorizer from './authorizer';\r\nimport dcConfigurator, { ConnectionType, DcConfigurator, TransportType } from './dcConfigurator';\r\nimport { logger } from '../logger';\r\nimport type { DcAuthKey, DcId, DcServerSalt, InvokeApiOptions } from '../../types';\r\nimport type { MethodDeclMap } from '../../layer';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport { bytesFromHex, bytesToHex } from '../../helpers/bytes';\r\n//import { clamp } from '../../helpers/number';\r\nimport { IS_SAFARI } from '../../environment/userAgent';\r\nimport App from '../../config/app';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport IDBStorage from '../idb';\r\nimport CryptoWorker from \"../crypto/cryptoworker\";\r\nimport ctx from '../../environment/ctx';\r\nimport noop from '../../helpers/noop';\r\nimport Modes from '../../config/modes';\r\n\r\n                       \r\n                                     \r\n          \r\n\r\n                    \r\nimport transportController from './transports/controller';\r\n          \r\n\r\n/* var networker = apiManager.cachedNetworkers.websocket.upload[2];\r\nnetworker.wrapMtpMessage({\r\n  _: 'msgs_state_req',\r\n  msg_ids: [\"6888292542796810828\"]\r\n}, {\r\n  notContentRelated: true\r\n}).then(res => {\r\n  console.log('status', res);\r\n}); */\r\n\r\n//console.error('apiManager included!');\r\n// TODO: если запрос словил флуд, нужно сохранять его параметры и возвращать тот же промис на новый такой же запрос, например - загрузка истории\r\n\r\nexport type ApiError = Partial<{\r\n  code: number,\r\n  type: string,\r\n  description: string,\r\n  originalError: any,\r\n  stack: string,\r\n  handled: boolean,\r\n  input: string,\r\n  message: ApiError\r\n}>;\r\n\r\n/* class RotatableArray<T> {\r\n  public array: Array<T> = [];\r\n  private lastIndex = -1;\r\n\r\n  public get() {\r\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\r\n    return this.array[this.lastIndex];\r\n  }\r\n} */\r\n\r\nexport class ApiManager {\r\n  private cachedNetworkers: {\r\n    [transportType in TransportType]: {\r\n      [connectionType in ConnectionType]: {\r\n        [dcId: DcId]: MTPNetworker[]\r\n      }\r\n    }\r\n  };\r\n  \r\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\r\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\r\n  private baseDcId: DcId;\r\n  \r\n  //public telegramMeNotified = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private afterMessageTempIds: {\r\n    [tempId: string]: {\r\n      messageId: string,\r\n      promise: Promise<any>\r\n    }\r\n  };\r\n\r\n  private transportType: TransportType;\r\n  \r\n  constructor() {\r\n    this.log = logger('API');\r\n\r\n    this.cachedNetworkers = {} as any;\r\n    this.cachedExportPromise = {};\r\n    this.gettingNetworkers = {};\r\n    this.baseDcId = 0;\r\n    this.afterMessageTempIds = {};\r\n\r\n    this.transportType = Modes.transport;\r\n\r\n                        \r\n    transportController.addEventListener('transport', (transportType) => {\r\n      this.changeTransportType(transportType);\r\n    });\r\n              \r\n  }\r\n\r\n  //private lol = false;\r\n  \r\n  // constructor() {\r\n    //MtpSingleInstanceService.start();\r\n    \r\n    /* AppStorage.get<number>('dc').then((dcId) => {\r\n      if(dcId) {\r\n        this.baseDcId = dcId;\r\n      }\r\n    }); */\r\n  // }\r\n  \r\n  /* public telegramMeNotify(newValue: boolean) {\r\n    if(this.telegramMeNotified !== newValue) {\r\n      this.telegramMeNotified = newValue;\r\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\r\n    }\r\n  } */\r\n\r\n  private getTransportType(connectionType: ConnectionType) {\r\n                               \r\n                 \r\n                                                                                                          \r\n                                                                                               \r\n             \r\n    // @ts-ignore\r\n    const transportType: TransportType = this.transportType;\r\n              \r\n\r\n    return transportType;\r\n  }\r\n\r\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\r\n    for(const transportType in this.cachedNetworkers) {\r\n      const connections = this.cachedNetworkers[transportType as TransportType];\r\n      for(const connectionType in connections) {\r\n        const dcs = connections[connectionType as ConnectionType];\r\n        for(const dcId in dcs) {\r\n          const networkers = dcs[dcId as any as DcId];\r\n          networkers.forEach((networker, idx, arr) => {\r\n            callback({\r\n              networker,\r\n              dcId: +dcId as DcId,\r\n              connectionType: connectionType as ConnectionType,\r\n              transportType: transportType as TransportType,\r\n              index: idx,\r\n              array: arr\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\r\n    return dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client');\r\n  }\r\n\r\n  public changeTransportType(transportType: TransportType) {\r\n    const oldTransportType = this.transportType;\r\n    if(oldTransportType === transportType) {\r\n      return;\r\n    }\r\n\r\n    this.log('changing transport from', oldTransportType, 'to', transportType);\r\n\r\n    const oldObject = this.cachedNetworkers[oldTransportType];\r\n    const newObject = this.cachedNetworkers[transportType];\r\n    this.cachedNetworkers[transportType] = oldObject;\r\n    this.cachedNetworkers[oldTransportType] = newObject;\r\n\r\n    this.transportType = transportType;\r\n\r\n    for(const oldGetKey in this.gettingNetworkers) {\r\n      const promise = this.gettingNetworkers[oldGetKey];\r\n      delete this.gettingNetworkers[oldGetKey];\r\n\r\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\r\n      this.gettingNetworkers[newGetKey] = promise;\r\n\r\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\r\n    }\r\n\r\n    this.iterateNetworkers((info) => {\r\n      const transportType = this.getTransportType(info.connectionType);\r\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\r\n      info.networker.changeTransport(transport);\r\n    });\r\n  }\r\n\r\n  public async getBaseDcId() {\r\n    if(this.baseDcId) {\r\n      return this.baseDcId;\r\n    }\r\n\r\n    const baseDcId = await sessionStorage.get('dc');\r\n    if(!this.baseDcId) {\r\n      if(!baseDcId) {\r\n        this.setBaseDcId(App.baseDcId);\r\n      } else {\r\n        this.baseDcId = baseDcId;\r\n      }\r\n    }\r\n\r\n    return this.baseDcId;\r\n  }\r\n  \r\n  public async setUserAuth(userAuth: UserAuth) {\r\n    if(!userAuth.dcID) {\r\n      const baseDcId = await this.getBaseDcId();\r\n      userAuth.dcID = baseDcId;\r\n    }\r\n\r\n    sessionStorage.set({\r\n      user_auth: userAuth\r\n    });\r\n    \r\n    //this.telegramMeNotify(true);\r\n\r\n                           \r\n                                                   \r\n              \r\n  }\r\n\r\n  public setBaseDcId(dcId: DcId) {\r\n    const wasDcId = this.baseDcId;\r\n    if(wasDcId) { // if migrated set ondrain\r\n      this.getNetworker(wasDcId).then(networker => {\r\n        this.setOnDrainIfNeeded(networker);\r\n      });\r\n    }\r\n\r\n    this.baseDcId = dcId;\r\n\r\n    sessionStorage.set({\r\n      dc: this.baseDcId\r\n    });\r\n  }\r\n  \r\n  public async logOut() {\r\n    const storageKeys: Array<DcAuthKey> = [];\r\n    \r\n    const prefix = 'dc';\r\n    for(let dcId = 1; dcId <= 5; dcId++) {\r\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\r\n    }\r\n    \r\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\r\n    const storageResult = await Promise.all(storageKeys.map(key => sessionStorage.get(key)));\r\n    \r\n    const logoutPromises: Promise<any>[] = [];\r\n    for(let i = 0; i < storageResult.length; i++) {\r\n      if(storageResult[i]) {\r\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\r\n      }\r\n    }\r\n\r\n    const clear = () => {\r\n      //console.error('apiManager: logOut clear');\r\n      \r\n      this.baseDcId = undefined;\r\n      //this.telegramMeNotify(false);\r\n      IDBStorage.closeDatabases();\r\n      self.postMessage({type: 'clear'});\r\n    };\r\n\r\n    setTimeout(clear, 1e3);\r\n\r\n    //return;\r\n    \r\n    return Promise.all(logoutPromises).catch((error) => {\r\n      error.handled = true;\r\n    }).finally(clear)/* .then(() => {\r\n      location.pathname = '/';\r\n    }) */;\r\n  }\r\n\r\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\r\n    return [dcId, transportType, connectionType].join('-');\r\n  }\r\n  \r\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\r\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\r\n    //const connectionType: ConnectionType = 'client';\r\n\r\n    const transportType = this.getTransportType(connectionType);\r\n    if(!this.cachedNetworkers[transportType]) {\r\n      this.cachedNetworkers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const cache = this.cachedNetworkers[transportType][connectionType];\r\n    if(!(dcId in cache)) {\r\n      cache[dcId] = [];\r\n    }\r\n    \r\n    const networkers = cache[dcId];\r\n    // @ts-ignore\r\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (connectionType === 'download' ? 3 : 3);\r\n    if(networkers.length >= maxNetworkers) {\r\n      let i = networkers.length - 1, found = false;\r\n      for(; i >= 0; --i) {\r\n        if(networkers[i].isOnline) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      const networker = found ? networkers.splice(i, 1)[0] : networkers.pop();\r\n      networkers.unshift(networker);\r\n      return Promise.resolve(networker);\r\n    }\r\n    \r\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\r\n    if(this.gettingNetworkers[getKey]) {\r\n      return this.gettingNetworkers[getKey];\r\n    }\r\n\r\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\r\n    \r\n    let transport = this.chooseServer(dcId, connectionType, transportType);\r\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map(key => sessionStorage.get(key)))\r\n    .then(async([authKeyHex, serverSaltHex]) => {\r\n      let networker: MTPNetworker, error: any;\r\n      if(authKeyHex && authKeyHex.length === 512) {\r\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\r\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\r\n        }\r\n        \r\n        const authKey = bytesFromHex(authKeyHex);\r\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1-hash', authKey)).slice(-8);\r\n        const serverSalt = bytesFromHex(serverSaltHex);\r\n        \r\n        networker = networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n      } else {\r\n        try { // if no saved state\r\n          const auth = await authorizer.auth(dcId);\r\n  \r\n          sessionStorage.set({\r\n            [ak]: bytesToHex(auth.authKey),\r\n            [ss]: bytesToHex(auth.serverSalt)\r\n          });\r\n          \r\n          networker = networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\r\n        } catch(_error) {\r\n          error = _error;\r\n        }\r\n      }\r\n\r\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\r\n      const newTransportType = this.getTransportType(connectionType);\r\n      if(newTransportType !== transportType) {\r\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\r\n        transport.destroy();\r\n        DcConfigurator.removeTransport(dcConfigurator.chosenServers, transport);\r\n\r\n        if(networker) {\r\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\r\n        }\r\n\r\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\r\n      }\r\n\r\n      /* networker.onConnectionStatusChange = (online) => {\r\n        console.log('status:', online);\r\n      }; */\r\n      \r\n      delete this.gettingNetworkers[getKey];\r\n\r\n      if(error) {\r\n        this.log('get networker error', error, (error as Error).stack);\r\n        throw error;\r\n      }\r\n\r\n      networker.changeTransport(transport);\r\n      networkers.unshift(networker);\r\n      this.setOnDrainIfNeeded(networker);\r\n      return networker;\r\n    });\r\n  }\r\n\r\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\r\n    if(networker.onDrain) {\r\n      return;\r\n    }\r\n    \r\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ? \r\n      Promise.resolve(true) : \r\n      this.getBaseDcId().then(baseDcId => networker.dcId !== baseDcId);\r\n    checkPromise.then(canRelease => {\r\n      if(networker.onDrain) {\r\n        return;\r\n      }\r\n      \r\n      if(canRelease) {\r\n        networker.onDrain = () => {\r\n          this.log('networker drain', networker.dcId);\r\n\r\n          networker.onDrain = undefined;\r\n          networker.destroy();\r\n          networkerFactory.removeNetworker(networker);\r\n          DcConfigurator.removeTransport(this.cachedNetworkers, networker);\r\n        };\r\n\r\n        networker.setDrainTimeout();\r\n      }\r\n    });\r\n  }\r\n  \r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T][\"res\"]> {\r\n    ///////this.log('Invoke api', method, params, options);\r\n\r\n    /* if(!this.lol) {\r\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\r\n      this.lol = true;\r\n    } */\r\n\r\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\r\n\r\n    let {afterMessageId, prepareTempMessageId} = options;\r\n    if(prepareTempMessageId) {\r\n      deferred.then(() => {\r\n        delete this.afterMessageTempIds[prepareTempMessageId];\r\n      });\r\n    }\r\n\r\n    if(MOUNT_CLASS_TO) {\r\n      const startTime = Date.now();\r\n      const interval = ctx.setInterval(() => {\r\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\r\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\r\n        }\r\n        //this.cachedUploadNetworkers[2].requestMessageStatus();\r\n      }, 5e3);\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n    }\r\n\r\n    const rejectPromise = (error: ApiError) => {\r\n      if(!error) {\r\n        error = {type: 'ERROR_EMPTY'};\r\n      } else if(!isObject(error)) {\r\n        error = {message: error};\r\n      }\r\n      \r\n      deferred.reject(error);\r\n\r\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') || \r\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\r\n        this.logOut();\r\n      }\r\n\r\n      if(options.ignoreErrors) {\r\n        return;\r\n      }\r\n      \r\n      if(error.code === 406) {\r\n        error.handled = true;\r\n      }\r\n      \r\n      if(!options.noErrorBox) {\r\n        error.input = method;\r\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\r\n        setTimeout(() => {\r\n          if(!error.handled) {\r\n            if(error.code === 401) {\r\n              this.logOut();\r\n            } else {\r\n              // ErrorService.show({error: error}); // WARNING\r\n            }\r\n            \r\n            error.handled = true;\r\n          }\r\n        }, 100);\r\n      }\r\n    };\r\n    \r\n    let dcId: DcId;\r\n    \r\n    let cachedNetworker: MTPNetworker;\r\n    let stack = (new Error()).stack || 'empty stack';\r\n    const performRequest = (networker: MTPNetworker) => {\r\n      if(afterMessageId) {\r\n        const after = this.afterMessageTempIds[afterMessageId];\r\n        if(after) {\r\n          options.afterMessageId = after.messageId;\r\n        }\r\n      }\r\n\r\n      const promise = (cachedNetworker = networker).wrapApiCall(method, params, options);\r\n\r\n      if(prepareTempMessageId) {\r\n        this.afterMessageTempIds[prepareTempMessageId] = {\r\n          messageId: (options as MTMessage).messageId,\r\n          promise: deferred\r\n        };\r\n      }\r\n\r\n      return promise.then(deferred.resolve, (error: ApiError) => {\r\n        //if(!options.ignoreErrors) {\r\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\r\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\r\n        }\r\n        \r\n        if(error.code === 401 && this.baseDcId === dcId) {\r\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\r\n            sessionStorage.delete('dc')\r\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\r\n            //this.telegramMeNotify(false);\r\n          }\r\n          \r\n          rejectPromise(error);\r\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\r\n          if(this.cachedExportPromise[dcId] === undefined) {\r\n            const promise = new Promise((exportResolve, exportReject) => {\r\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\r\n                this.invokeApi('auth.importAuthorization', {\r\n                  id: exportedAuth.id,\r\n                  bytes: exportedAuth.bytes\r\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\r\n              }, exportReject);\r\n            });\r\n            \r\n            this.cachedExportPromise[dcId] = promise;\r\n          }\r\n          \r\n          this.cachedExportPromise[dcId].then(() => {\r\n            //(cachedNetworker = networker).wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            this.invokeApi(method, params, options).then(deferred.resolve, rejectPromise);\r\n          }, rejectPromise);\r\n        } else if(error.code === 303) {\r\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            if(options.dcId) {\r\n              options.dcId = newDcId;\r\n            } else {\r\n              this.setBaseDcId(newDcId);\r\n            }\r\n            \r\n            this.getNetworker(newDcId, options).then((networker) => {\r\n              networker.wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            }, rejectPromise);\r\n          }\r\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\r\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            this.getNetworker(newDcId, options).then((networker) => {\r\n              networker.wrapApiCall(method, params, options).then(deferred.resolve, rejectPromise);\r\n            }, rejectPromise);\r\n          } else {\r\n            rejectPromise(error);\r\n          }\r\n        } else if(!options.rawError && error.code === 420) {\r\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\r\n          \r\n          if(waitTime > (options.floodMaxTimeout !== undefined ? options.floodMaxTimeout : 60) && !options.prepareTempMessageId) {\r\n            return rejectPromise(error);\r\n          }\r\n          \r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, waitTime/* (waitTime + 5) */ * 1000); // 03.02.2020\r\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\r\n          const after = this.afterMessageTempIds[afterMessageId];\r\n\r\n          afterMessageId = undefined;\r\n          delete options.afterMessageId;\r\n\r\n          if(after) after.promise.then(() => performRequest(cachedNetworker));\r\n          else performRequest(cachedNetworker);\r\n        } else if(!options.rawError && error.code === 500) {\r\n          const now = Date.now();\r\n          if(options.stopTime) {\r\n            if(now >= options.stopTime) {\r\n              return rejectPromise(error);\r\n            }\r\n          }\r\n          \r\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, options.waitTime * 1000);\r\n        } else if(error.type === 'UNKNOWN') {\r\n          setTimeout(() => {\r\n            performRequest(cachedNetworker);\r\n          }, 1000);\r\n        } else {\r\n          rejectPromise(error);\r\n        }\r\n      });\r\n    }\r\n    \r\n    if(dcId = (options.dcId || this.baseDcId)) {\r\n      this.getNetworker(dcId, options).then(performRequest, rejectPromise);\r\n    } else {\r\n      this.getBaseDcId().then(baseDcId => {\r\n        this.getNetworker(dcId = baseDcId, options).then(performRequest, rejectPromise);\r\n      });\r\n    }\r\n\r\n    return deferred;\r\n  }\r\n}\r\n\r\nconst apiManager = new ApiManager();\r\nMOUNT_CLASS_TO.apiManager = apiManager;\r\nexport default apiManager;\r\n","export default async function getScreenStream(constraints: DisplayMediaStreamConstraints) {\n  const screenStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n  return screenStream;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport getScreenStream from \"./getScreenStream\";\nimport getStream from \"./getStream\";\n\n/**\n * ! Use multiple constraints together only with first invoke\n */\nexport default function getStreamCached() {\n  const _cache: {\n    main: Partial<{\n      audio: Promise<MediaStream>,\n      video: Promise<MediaStream>\n    }>,\n    screen: Partial<{\n      audio: Promise<MediaStream>,\n      video: Promise<MediaStream>\n    }>\n  } = {\n    main: {},\n    screen: {}\n  };\n\n  return async(options: {\n    isScreen: true, \n    constraints: DisplayMediaStreamConstraints,\n  } | {\n    isScreen?: false,\n    constraints: MediaStreamConstraints, \n    muted: boolean\n  }) => {\n    const {isScreen, constraints} = options;\n    const cache = _cache[isScreen ? 'screen' : 'main'];\n    let promise: Promise<MediaStream> = cache[constraints.audio ? 'audio' : 'video'];\n\n    if(!promise) {\n      promise = (isScreen ? getScreenStream : getStream)(constraints, (options as any).muted);\n      if(constraints.audio && !cache.audio) cache.audio = promise.finally(() => cache.audio = undefined);\n      if(constraints.video && !cache.video) cache.video = promise.finally(() => cache.video = undefined);\n    }\n\n    try {\n      return await promise;\n      /* let out: Partial<{\n        audio: MediaStream,\n        video: MediaStream\n      }> = {};\n\n      await Promise.all([\n        constraints.audio && cache.audio.then(stream => out.audio = stream),\n        constraints.video && cache.video.then(stream => out.video = stream)\n      ].filter(Boolean));\n\n      return out; */\n    } catch(err) {\n      throw err;\n    }\n  };\n}\n\n(window as any).getStreamCached = getStreamCached;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport EventListenerBase, { EventListenerListeners } from \"../../helpers/eventListenerBase\";\nimport noop from \"../../helpers/noop\";\nimport { logger } from \"../logger\";\nimport getAudioConstraints from \"./helpers/getAudioConstraints\";\nimport getStreamCached from \"./helpers/getStreamCached\";\nimport getVideoConstraints from \"./helpers/getVideoConstraints\";\nimport LocalConferenceDescription from \"./localConferenceDescription\";\nimport StreamManager, { StreamItem } from \"./streamManager\";\n\nexport type TryAddTrackOptions = {\n  stream: MediaStream, \n  track: MediaStreamTrack, \n  type: StreamItem['type'], \n  source?: string\n};\n\nexport default abstract class CallInstanceBase<E extends EventListenerListeners> extends EventListenerBase<E> {\n  protected log: ReturnType<typeof logger>;\n  protected outputDeviceId: string;\n\n  protected player: HTMLElement;\n  protected elements: Map<string, HTMLMediaElement>;\n\n  protected audio: HTMLAudioElement;\n  // protected fixedSafariAudio: boolean;\n\n  protected getStream: ReturnType<typeof getStreamCached>;\n\n  constructor() {\n    super(false);\n\n    const player = this.player = document.createElement('div');\n    player.classList.add('call-player');\n    player.style.display = 'none';\n    document.body.append(player);\n\n    this.elements = new Map();\n\n    // possible Safari fix\n    const audio = this.audio = new Audio();\n    audio.autoplay = true;\n    audio.volume = 1.0;\n    this.player.append(audio);\n    this.elements.set('audio', audio);\n\n    this.fixSafariAudio();\n\n    this.getStream = getStreamCached();\n  }\n\n  public get isSharingAudio() {\n    return !!this.streamManager.hasInputTrackKind('audio');\n  }\n\n  public get isSharingVideo() {\n    return !!this.streamManager.hasInputTrackKind('video');\n  }\n\n  public abstract get isMuted(): boolean;\n  public abstract get isClosing(): boolean;\n\n  public fixSafariAudio() {\n    // if(this.fixedSafariAudio) return;\n    this.audio.play().catch(noop);\n    // this.fixedSafariAudio = true;\n  }\n\n  public requestAudioSource(muted: boolean) {\n    return this.requestInputSource(true, false, muted);\n  }\n\n  public requestInputSource(audio: boolean, video: boolean, muted: boolean) {\n    const {streamManager} = this;\n    if(streamManager) {\n      const isAudioGood = !audio || this.isSharingAudio;\n      const isVideoGood = !video || this.isSharingVideo;\n      if(isAudioGood && isVideoGood) {\n        return Promise.resolve();\n      }\n    }\n\n    const constraints: MediaStreamConstraints = {\n      audio: audio && getAudioConstraints(),\n      video: video && getVideoConstraints()\n    };\n    \n    return this.getStream({\n      constraints, \n      muted\n    }).then(stream => {\n      if(stream.getVideoTracks().length) {\n        this.saveInputVideoStream(stream, 'main');\n      }\n      \n      this.onInputStream(stream);\n    });\n  }\n\n  public getElement(endpoint: number | string) {\n    return this.elements.get('' + endpoint);\n  }\n\n  public abstract get streamManager(): StreamManager;\n  public abstract get description(): LocalConferenceDescription;\n  public abstract toggleMuted(): Promise<void>;\n\n  public cleanup() {\n    this.player.textContent = '';\n    this.player.remove();\n    this.elements.clear();\n\n    // can have no connectionInstance but streamManager with input stream\n    this.streamManager.stop();\n\n    super.cleanup();\n  }\n\n  public onTrack(event: RTCTrackEvent) {\n    this.tryAddTrack({\n      stream: event.streams[0], \n      track: event.track, \n      type: 'output'\n    });\n  }\n\n  public saveInputVideoStream(stream: MediaStream, type?: string) {\n    const track = stream.getVideoTracks()[0];\n    this.tryAddTrack({\n      stream, \n      track, \n      type: 'input', \n      source: type || 'main'\n    });\n  }\n  \n  public tryAddTrack({stream, track, type, source}: TryAddTrackOptions) {\n    if(!source) {\n      source = StreamManager.getSource(stream, type);\n    }\n\n    this.log('tryAddTrack', stream, track, type, source);\n\n    const isOutput = type === 'output';\n\n    const {player, elements, streamManager} = this;\n    \n    const tagName = track.kind as StreamItem['kind'];\n    const isVideo = tagName === 'video';\n\n    const elementEndpoint = isVideo ? source : tagName;\n    let element = elements.get(elementEndpoint);\n\n    if(isVideo) {\n      track.addEventListener('ended', () => {\n        this.log('[track] onended');\n        elements.delete(elementEndpoint);\n        // element.remove();\n      }, {once: true});\n    }\n    \n    if(isOutput) {\n      streamManager.addTrack(stream, track, type);\n    }\n\n    const useStream = isVideo ? stream : streamManager.outputStream;\n    if(!element) {\n      element = document.createElement(tagName);\n      element.autoplay = true;\n      element.srcObject = useStream;\n      element.volume = 1.0;\n\n      if((element as any).sinkId !== 'undefined') {\n        const {outputDeviceId} = this;\n        if(outputDeviceId) {\n          (element as any).setSinkId(outputDeviceId);\n        }\n      }\n      \n      if(!isVideo) {\n        player.appendChild(element);\n      }\n      // audio.play();\n\n      elements.set(elementEndpoint, element);\n    } else {\n      if(element.paused) {\n        element.play().catch(noop);\n      }\n\n      if(element.srcObject !== useStream) {\n        element.srcObject = useStream;\n      }\n    }\n\n    return source;\n  }\n\n  public setMuted(muted?: boolean) {\n    this.streamManager.inputStream.getAudioTracks().forEach((track) => {\n      if(track?.kind === 'audio') {\n        track.enabled = muted === undefined ? !track.enabled : !muted;\n      }\n    });\n  }\n\n  protected onInputStream(stream: MediaStream): void {\n    if(!this.isClosing) {\n      const {streamManager, description} = this;\n      streamManager.addStream(stream, 'input');\n      \n      if(description) {\n        streamManager.appendToConference(description);\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPMediaSection from \"./mediaSection\";\nimport SDPSessionSection from \"./sessionSection\";\n\nexport type AttributeKey = 'group' | 'rtcp' | 'ice-ufrag' | \n  'ice-pwd' | 'ice-options' | 'fingerprint' | 'setup' | \n  'mid' | 'extmap' | 'sendonly' | 'msid' | 'rtcp-mux' | \n  'rtpmap' | 'rtcp-fb' | 'fmtp' | 'ssrc' | 'ssrc-group' |\n  'extmap-allow-mixed' | 'msid-semantic';\n\nexport type AttributeMap = {[k in AttributeKey]?: boolean};\n\nexport default class SDP {\n  #session: SDPSessionSection;\n  #media: SDPMediaSection[];\n\n  constructor(session: SDP['session'], mediaSections: SDP['media']) {\n    this.#session = session;\n    this.#media = mediaSections;\n  }\n\n  public get session() {\n    return this.#session;\n  }\n\n  public get media() {\n    return this.#media;\n  }\n\n  public get bundle() {\n    const bundleLine = this.session.lines.find(line => line.parsed?.key === 'group');\n    return bundleLine.value.split(' ').slice(1);\n  }\n\n  toString() {\n    return this.session.lines\n    .concat(...this.media.map(section => section.lines))\n    .map(line => line.toString()).join('\\r\\n') + '\\r\\n';\n  }\n\n  /* get buggedMedia() {\n    const bundle = this.bundle;\n    type A = {\n      mid: SDPMediaSection['mid'],\n      mediaType: SDPMediaSection['mediaType'],\n      direction: SDPMediaSection['direction']\n    };\n    const out: A[] = [];\n    for(let i = 0, length = this.media.length; i < length; ++i) {\n      const section = this.media[i];\n      const mid = section.mid;\n      if(!bundle.includes(mid)) {\n        out.push(section);\n      }\n    }\n\n    return out;\n  } */\n\n  /* get mediaTypes() {\n    return this.media.map((section) => {\n      return {mid: section.oa.get('mid').oa, type: section.mediaType, direction: section.direction};\n    });\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function splitStringByLimitWithRest(str: string, separator: string, limit: number) {\n  const splitted = str.split(separator);\n  const out: string[] = [];\n\n  while(limit > 0 && splitted.length) {\n    out.push(splitted.shift());\n    --limit;\n  }\n\n  if(splitted.length) {\n    out.push(splitted.join(separator));\n  }\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default class UniqueNumberGenerator {\n  #set: Set<number>;\n  #min: number;\n  #max: number;\n\n  constructor(min: number, max: number) {\n    this.#set = new Set();\n    this.#min = min;\n    this.#max = max;\n  }\n\n  public generate() {\n    const min = this.#min;\n    const max = this.#max;\n    const set = this.#set;\n\n    const maxTries = max - min + 1;\n    let value = Math.floor(min + maxTries * Math.random()), _try = 0;\n    while(set.has(value)) {\n      if(value < max) {\n        ++value;\n      } else {\n        value = min;\n      }\n\n      if(++_try >= maxTries) {\n        return null;\n      }\n    }\n\n    set.add(value);\n    return value;\n  }\n\n  public add(value: number) {\n    this.#set.add(value);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { AttributeKey } from \".\";\n\nexport default class SDPAttributeSplitted {\n  #key: AttributeKey;\n  #value: string;\n\n  // key = 'ssrc-group', value = 'SIM 1 2 3'\n  constructor(key: AttributeKey, value: string) {\n    this.#key = key;\n    this.#value = value;\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get value() {\n    return this.#value;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default class SDPMediaLineParts {\n  #type: 'audio' | 'video' | 'application';\n  #port: string;\n  #protocol: string;\n  #ids: string[];\n\n  constructor(\n    type: SDPMediaLineParts['type'], \n    port: SDPMediaLineParts['port'], \n    protocol: SDPMediaLineParts['protocol'], \n    ids: SDPMediaLineParts['ids']\n  ) {\n    this.#type = type;\n    this.#port = port;\n    this.#protocol = protocol;\n    this.#ids = ids;\n  }\n\n  public get type() {\n    return this.#type;\n  }\n  \n  public get port() {\n    return this.#port;\n  }\n\n  public get protocol() {\n    return this.#protocol;\n  }\n\n  public get ids() {\n    return this.#ids;\n  }\n\n  toString() {\n    return this.type + ' ' + this.port + ' ' + this.protocol + ' ' + this.ids.join(' ');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\nimport SDPAttributeSplitted from \"./attributeSplitted\";\nimport SDPMediaLineParts from \"./mediaLineParts\";\n\nexport default class SDPLine {\n  #key: 'm' | 'a' | 'o' | 'v' | 's' | 't' | 'c';\n  #value: string;\n  #mediaLineParts: SDPMediaLineParts;\n  #parsed?: SDPAttributeSplitted;\n\n  // key = 'a', value = 'ssrc-group:SIM 1 2 3'\n  constructor(key: SDPLine['key'], value: string | SDPMediaLineParts | SDPAttributeSplitted) {\n    this.#key = key;\n\n    if(typeof(value) === 'string') {\n      this.#value = value;\n\n      if(key === 'm') {\n        const splitted = value.split(' ');\n        this.#mediaLineParts = new SDPMediaLineParts(splitted[0] as any, splitted[1], splitted[2], splitted.slice(3));\n      } else {\n        if(key === 'a') {\n          const result = splitStringByLimitWithRest(value, ':', 1);\n          value = result[0];\n          this.#parsed = result.length === 1 ? new SDPAttributeSplitted(value as any, null) : new SDPAttributeSplitted(value as any, result[1]);\n        }\n      }\n    } else {\n      if(value instanceof SDPMediaLineParts) {\n        this.#mediaLineParts = value;\n        this.#value = value.toString();\n      } else if(value instanceof SDPAttributeSplitted) {\n        this.#parsed = value;\n        this.#value = value.value ? `${value.key}:${value.value}` : value.key;\n      }\n    }\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get value() {\n    return this.#value;\n  }\n\n  public get parsed() {\n    return this.#parsed;\n  }\n\n  public get mediaLineParts() {\n    return this.#mediaLineParts;\n  }\n\n  toString() {\n    return `${this.key}=${this.value}`;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\n\nexport default class SDPAttributeInner {\n  #key: string;\n  #lines: Array<string>;\n  #prefix: string;\n  #nestedMap: Map<string, SDPAttributeInner>;\n  #missed: boolean;\n  #keys: Array<string>;\n\n  constructor(key: SDPAttributeInner['key'], lines: SDPAttributeInner['lines'], prefix: string = ':', missed = false) {\n    this.#key = key;\n    this.#lines = lines;\n    this.#prefix = prefix;\n    this.#missed = missed;\n    this.#nestedMap = missed ? new Map() : null;\n    this.#keys = missed ? [] : null;\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get value() {\n    return this.#missed || !this.lines.length ? null : this.lines[0];\n  }\n\n  public get exists() {\n    return !this.#missed;\n  }\n\n  public get key() {\n    return this.#key;\n  }\n\n  public get keys() {\n    SDPAttributeInner.fill(this);\n    return this.#keys;\n  }\n\n  public forEach(callback: Parameters<Map<string, SDPAttributeInner>['forEach']>[0]) {\n    SDPAttributeInner.fill(this);\n    this.#nestedMap.forEach(callback);\n  }\n\n  public get(key: string) {\n    SDPAttributeInner.fill(this);\n    return this.#nestedMap.get(key) || new SDPAttributeInner(key, [], ':', true);\n  }\n  \n  private static fill(attribute: SDPAttributeInner) {\n    if(attribute.#nestedMap !== null) {\n      return;\n    }\n\n    const map: Map<string, Array<string>> = new Map();\n    attribute.lines.forEach(str => {\n      const [key, rest] = splitStringByLimitWithRest(str, attribute.#prefix, 1);\n      const values = map.get(key) || [];\n      map.set(key, [...values, rest || '']);\n    });\n  \n    const nestedMap = attribute.#nestedMap = SDPAttributeInner.makeAttributes(map);\n    attribute.#keys = Array.from(nestedMap.keys());\n  }\n\n  private static makeAttributes(innerParts: Map<string, Array<string>>) {\n    const out: Map<string, SDPAttributeInner> = new Map();\n  \n    innerParts.forEach((lines, key) => {\n      out.set(key, new SDPAttributeInner(key, lines));\n    });\n  \n    return out;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPAttributeInner from \"./attributeInner\";\nimport SDPLine from \"./line\";\n\nexport default class SDPAttributes {\n  #lines: SDPLine[];\n  #attributes: Map<string, SDPAttributeInner>;\n\n  constructor(lines: SDPLine[]) {\n    this.#lines = lines;\n    this.#attributes = new Map();\n    SDPAttributes.fillAttributes(this);\n  }\n\n  public get(key: string) {\n    return this.#attributes.get(key) || new SDPAttributeInner(key, [], ' ', true);\n  }\n\n  private static fillAttributes(attributes: SDPAttributes) {\n    const attributesMap: Map<string, Array<string>> = new Map();\n    attributes.#lines.forEach((line) => {\n      if(line.key === 'a') {\n        const {key, value} = line.parsed;\n\n        let linesArray = attributesMap.get(key);\n        if(!linesArray) {\n          linesArray = [];\n          attributesMap.set(key, linesArray);\n        }\n        \n        linesArray.push(value || '');\n      }\n    });\n\n    attributesMap.forEach((linesArray, key) => {\n      attributes.#attributes.set(key, new SDPAttributeInner(key, linesArray, ' ', false));\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { AttributeMap } from \".\";\nimport { NoExtraProperties } from \"../../../types\";\nimport SDPAttributes from \"./attributes\";\nimport SDPLine from \"./line\";\n\nexport type SDPMediaDirection = 'sendonly' | 'recvonly' | 'inactive' | 'sendrecv';\nexport default class SDPMediaSection {\n  #lines: Array<SDPLine>;\n  #mediaLine: SDPLine;\n  #attributes: SDPAttributes;\n  #direction: SDPMediaDirection;\n\n  constructor(lines: Array<SDPLine>) {\n    this.#lines = lines;\n    this.#mediaLine = lines[0];\n    this.#attributes = this.#direction = null;\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get mediaLine() {\n    return this.#mediaLine;\n  }\n\n  public get mediaLineParts() {\n    return this.#mediaLine.mediaLineParts;\n  }\n\n  public get mediaType() {\n    return this.mediaLineParts.type;\n  }\n\n  public get direction() {\n    if(!this.#direction) {\n      const attributes = this.attributes;\n\n      let direction: SDPMediaDirection;\n      if(attributes.get('sendonly').exists) direction = 'sendonly';\n      else if(attributes.get('recvonly').exists) direction = 'recvonly';\n      else if(attributes.get('inactive').exists) direction = 'inactive';\n      else direction = 'sendrecv';\n\n      this.#direction = direction;\n    }\n\n    return this.#direction;\n  }\n\n  public get isSending() {\n    return this.direction === 'sendrecv' || this.direction === 'sendonly';\n  }\n\n  public get isReceiving() {\n    return this.direction === 'sendrecv' || this.direction === 'recvonly';\n  }\n\n  public get attributes() {\n    this.#attributes || (this.#attributes = new SDPAttributes(this.lines));\n    return this.#attributes;\n  }\n\n  public get mid() {\n    return this.attributes.get('mid').value;\n  }\n\n  public lookupAttributeKeys<T extends AttributeMap>(keys: NoExtraProperties<AttributeMap, T>): {[k in keyof T]: T[k] extends true ? string : string[]} {\n    const out: any = {};\n\n    for(const key in keys) {\n      const result = this.attributes.get(key);\n      // @ts-ignore\n      const resultShouldBeArray = !keys[key];\n      if(!result) {\n        out[key] = resultShouldBeArray ? [] : undefined;\n      } else {\n        out[key] = resultShouldBeArray ? result.lines : result.value;\n      }\n    }\n\n    return out;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDPLine from \"./line\";\n\nexport default class SDPSessionSection {\n  #lines: SDPLine[];\n  #sessionId: string;\n\n  constructor(lines: SDPLine[]) {\n    this.#lines = lines;\n    this.#sessionId = lines.filter(line => line.key === 'o').map(line => line.value.split(' ')[1])[0];\n  }\n\n  public get lines() {\n    return this.#lines;\n  }\n\n  public get sessionId() {\n    return this.#sessionId;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDP from \".\";\nimport splitStringByLimitWithRest from \"../../../helpers/string/splitStringByLimitWithRest\";\nimport UniqueNumberGenerator from \"../../../helpers/uniqueNumberGenerator\";\nimport SDPLine from \"./line\";\nimport SDPMediaSection from \"./mediaSection\";\nimport SDPSessionSection from \"./sessionSection\";\n\nexport function parseSdp(str: string) {\n  function createSection() {\n    if(sessionSection) {\n      mediaSections.push(new SDPMediaSection(lines));\n    } else {\n      sessionSection = new SDPSessionSection(lines);\n    }\n  }\n\n  let sessionSection: SDPSessionSection = null, mediaSections: SDPMediaSection[] = [], lines: SDPLine[] = [];\n  str.split(/\\r?\\n/).forEach(lineStr => {\n    if(!isIncorrectSdpLine(lineStr)) {\n      const line = parseSdpLine(lineStr);\n      if(line.key === 'm') {\n        createSection();\n        lines = [];\n      }\n\n      lines.push(line);\n    }\n  });\n\n  createSection();\n  return new SDP(sessionSection, mediaSections);\n}\n\nexport function isIncorrectSdpLine(str: string) {\n  return /^[\\s\\xa0]*$/.test(str);\n}\n\nexport function parseSdpLine(str: string) {\n  const splitted = splitStringByLimitWithRest(str, '=', 1);\n  return new SDPLine(splitted[0] as any, splitted[1]);\n}\n\nexport function addSimulcast(sdp: SDP) {\n  let generator: UniqueNumberGenerator;\n  sdp.media.forEach((section, idx) => {\n    if(section.mediaType === 'video' && section.isSending && !section.attributes.get('ssrc-group').get('SIM').exists) {\n      if(!generator) {\n        generator = new UniqueNumberGenerator(2, 4294967295);\n      }\n\n      const originalSsrcs = section.attributes.get('ssrc-group').get('FID').value.split(' ');\n      const lines = section.lines;\n      originalSsrcs.forEach(ssrc => generator.add(+ssrc)); // fix possible duplicates\n      const ssrcs = [originalSsrcs[0], generator.generate(), generator.generate()];\n      const ssrcs2 = [originalSsrcs[1], generator.generate(), generator.generate()];\n\n      lines.push(parseSdpLine('a=ssrc-group:SIM ' + ssrcs.join(' ')));\n\n      const ssrcsStrLines = section.attributes.get('ssrc').get(originalSsrcs[0]).lines;\n\n      ssrcs.forEach((ssrc, idx) => {\n        const ssrc2 = ssrcs2[idx];\n        if(idx > 0) {\n          lines.push(parseSdpLine('a=ssrc-group:FID ' + ssrc + ' ' + ssrc2));\n\n          ssrcsStrLines.forEach(v => {\n            lines.push(parseSdpLine('a=ssrc:' + ssrc + ' ' + v));\n          });\n\n          ssrcsStrLines.forEach(v => {\n            lines.push(parseSdpLine('a=ssrc:' + ssrc2 + ' ' + v));\n          });\n        }\n      });\n\n      sdp.media[idx] = new SDPMediaSection(lines);\n    }\n  });\n\n  return !!generator;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport SDP from \"../sdp\";\nimport SDPMediaSection from \"../sdp/mediaSection\";\nimport { toTelegramSource } from \"../utils\";\nimport { parseSourceGroups } from \"./parseSourceGroups\";\n\nexport default function parseMediaSectionInfo(sdp: SDP, channel: SDPMediaSection) {\n  const clientInfo = channel.lookupAttributeKeys({\n    'ice-ufrag': true,\n    'ice-pwd': true,\n    fingerprint: true,\n    setup: true,\n    ssrc: true,\n    mid: true,\n    'ssrc-group': false\n  });\n\n  if(!clientInfo.fingerprint) { // support Firefox\n    const line = sdp.session.lines.find(line => line.parsed?.key === 'fingerprint');\n    clientInfo.fingerprint = line.parsed.value;\n  }\n\n  const telegramSourceGroups = parseSourceGroups(clientInfo['ssrc-group']);\n  const [hash, fingerprint] = clientInfo.fingerprint.split(' ', 2);\n  const ssrc = clientInfo.ssrc && toTelegramSource(+clientInfo.ssrc.split(' ', 1)[0]);\n  // ssrc = telegramSourceGroups ? telegramSourceGroups[0].sources[0] : ssrc;\n\n  return {\n    raw: clientInfo,\n    ufrag: clientInfo['ice-ufrag'],\n    pwd: clientInfo['ice-pwd'],\n    fingerprint: {\n      fingerprint,\n      setup: clientInfo.setup,\n      hash\n    },\n    source: ssrc,\n    sourceGroups: telegramSourceGroups,\n    mid: clientInfo.mid\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { GroupCallParticipantVideoSourceGroup } from \"../../../layer\";\nimport { toTelegramSource } from \"../utils\";\n\nexport function parseSourceGroups(sdpLines: string[]) {\n  const telegramSourceGroups = sdpLines.map(str => {\n    const [semantics, ...rest] = str.split(' ');\n\n    const sourceGroup: GroupCallParticipantVideoSourceGroup = {\n      _: 'groupCallParticipantVideoSourceGroup',\n      semantics,\n      // sources: rest.map(ssrc => +ssrc)\n      sources: rest.map(ssrc => toTelegramSource(+ssrc))\n    };\n\n    return sourceGroup;\n  });\n\n  /* const simIndex = telegramSourceGroups.findIndex(g => g.semantics === 'SIM');\n  if(simIndex !== -1) {\n    const sourceGroup = telegramSourceGroups.splice(simIndex, 1)[0];\n    telegramSourceGroups.unshift(sourceGroup);\n  } */\n\n  return telegramSourceGroups.length ? telegramSourceGroups : undefined;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../../helpers/array\";\nimport { copy } from \"../../../helpers/object\";\nimport { ConferenceEntry } from \"../localConferenceDescription\";\nimport { parseSdp, addSimulcast } from \"../sdp/utils\";\nimport { generateMediaFirstLine, SDPBuilder } from \"../sdpBuilder\";\nimport { UpdateGroupCallConnectionData } from \"../types\";\nimport parseMediaSectionInfo from \"./parseMediaSectionInfo\";\n\nexport default function fixLocalOffer(options: {\n  offer: RTCSessionDescriptionInit, \n  data: UpdateGroupCallConnectionData,\n  skipAddingMulticast?: boolean\n  // mids?: string[]\n}) {\n  const {offer, data} = options;\n  const sdp = parseSdp(offer.sdp);\n  let hasMunged = false;\n\n  if(!options.skipAddingMulticast) {\n    hasMunged = addSimulcast(sdp) || hasMunged;\n  }\n\n  // const bundleLine = parsedSdp.session.lines.find(line => line.Ha?.key === 'group');\n  // const bundleMids = bundleLine.value.split(' ').slice(1);\n\n  forEachReverse(sdp.media, (section, idx, arr) => {\n    // const mid = section.oa.get('mid').oa;\n\n    // это может случиться при выключении и включении видео. почему-то появится секция уже удалённая\n    // ! нельзя тут модифицировать локальное описание, будет критовать\n    /* if(mids && !mids.includes(mid) && !bundleMids.includes(mid)) {\n      console.error('wtf');\n      hasMunged = true;\n      arr.splice(idx, 1);\n      return;\n    } */\n\n    if(/* section.mediaType !== 'video' ||  */section.isSending) {\n      return;\n    }\n\n    if(section.mediaType === 'application') {\n      return;\n    }\n\n    const mediaLine = section.mediaLine;\n    const mediaLineParts = mediaLine.mediaLineParts;\n    const mediaCodecIds = mediaLineParts.ids;\n    const localMLine = mediaLine.toString();\n\n    const codec = data[section.mediaType];\n    const payloadTypes = codec['payload-types'];\n\n    /* forEachReverse(payloadTypes, (payloadType, idx, arr) => {\n      if(!mediaCodecIds.includes('' + payloadType.id) && section.mediaType === 'video') {\n      // if(payloadType.name === 'H265') {\n        console.warn('[sdp] filtered unsupported codec', payloadType, mediaCodecIds, section.mediaType);\n        arr.splice(idx, 1);\n      }\n    }); */\n\n    const codecIds = payloadTypes.map(payload => '' + payload.id);\n    const correctMLine = generateMediaFirstLine(section.mediaType, undefined, codecIds);\n    \n    if(localMLine !== correctMLine) {\n      const sectionInfo = parseMediaSectionInfo(sdp, section);\n\n      let newData = {...data};\n      newData.transport = copy(newData.transport);\n      newData.transport.ufrag = sectionInfo.ufrag;\n      newData.transport.pwd = sectionInfo.pwd;\n      newData.transport.fingerprints = [sectionInfo.fingerprint];\n      newData.transport.candidates = [];\n\n      const entry = new ConferenceEntry(sectionInfo.mid, mediaLineParts.type);\n      entry.setPort(mediaLineParts.port);\n      sectionInfo.source && entry.setSource(sectionInfo.sourceGroups || sectionInfo.source);\n      entry.setDirection(section.direction);\n\n      const newSdp = new SDPBuilder().addSsrcEntry(entry, newData).finalize();\n\n      const newChannel = parseSdp(newSdp).media[0];\n      arr[idx] = newChannel;\n\n      hasMunged = true;\n    }\n  });\n\n  if(hasMunged) {\n    const mungedSdp = sdp.toString();\n    offer.sdp = mungedSdp;\n  }\n\n  return {offer, sdp/* , bundleMids */};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../helpers/array\";\nimport throttle from \"../../helpers/schedulers/throttle\";\nimport { Updates, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update } from \"../../layer\";\nimport apiUpdatesManager from \"../appManagers/apiUpdatesManager\";\nimport appGroupCallsManager, { GroupCallConnectionType, JoinGroupCallJsonPayload } from \"../appManagers/appGroupCallsManager\";\nimport apiManager from \"../mtproto/apiManager\";\nimport rootScope from \"../rootScope\";\nimport CallConnectionInstanceBase, { CallConnectionInstanceOptions } from \"./callConnectionInstanceBase\";\nimport GroupCallInstance from \"./groupCallInstance\";\nimport filterServerCodecs from \"./helpers/filterServerCodecs\";\nimport fixLocalOffer from \"./helpers/fixLocalOffer\";\nimport processMediaSection from \"./helpers/processMediaSection\";\nimport { ConferenceEntry } from \"./localConferenceDescription\";\nimport SDP from \"./sdp\";\nimport SDPMediaSection from \"./sdp/mediaSection\";\nimport { WebRTCLineType } from \"./sdpBuilder\";\nimport { UpdateGroupCallConnectionData } from \"./types\";\n\nexport default class GroupCallConnectionInstance extends CallConnectionInstanceBase {\n  private groupCall: GroupCallInstance;\n  public updateConstraints?: boolean;\n  private type: GroupCallConnectionType;\n  private options: {\n    type: Extract<GroupCallConnectionType, 'main'>, \n    isMuted?: boolean, \n    joinVideo?: boolean, \n    rejoin?: boolean\n  } | {\n    type: Extract<GroupCallConnectionType, 'presentation'>,\n  };\n\n  private updateConstraintsInterval: number;\n  public negotiateThrottled: () => void;\n\n  constructor(options: CallConnectionInstanceOptions & {\n    groupCall: GroupCallConnectionInstance['groupCall'],\n    type: GroupCallConnectionInstance['type'],\n    options: GroupCallConnectionInstance['options'],\n  }) {\n    super(options);\n\n    this.negotiateThrottled = throttle(this.negotiate.bind(this), 0, false);\n  }\n\n  public createPeerConnection() {\n    return this.connection || super.createPeerConnection({ \n      iceServers: [], \n      iceTransportPolicy: 'all', \n      bundlePolicy: 'max-bundle', \n      rtcpMuxPolicy: 'require', \n      iceCandidatePoolSize: 0, \n      // sdpSemantics: \"unified-plan\", \n      // extmapAllowMixed: true,\n    });\n  }\n\n  public createDataChannel() {\n    if(this.dataChannel) {\n      return this.dataChannel;\n    }\n\n    const dataChannel = super.createDataChannel();\n\n    dataChannel.addEventListener('open', () => {\n      this.maybeUpdateRemoteVideoConstraints();\n    });\n\n    dataChannel.addEventListener('close', () => {\n      if(this.updateConstraintsInterval) {\n        clearInterval(this.updateConstraintsInterval);\n        this.updateConstraintsInterval = undefined;\n      }\n    });\n\n    return dataChannel;\n  }\n\n  public createDescription() {\n    if(this.description) {\n      return this.description;\n    }\n\n    const description = super.createDescription();\n\n    /* const perType = 0;\n    const types = ['audio' as const, 'video' as const];\n    const count = types.length * perType;\n    const init: RTCRtpTransceiverInit = {direction: 'recvonly'};\n    types.forEach(type => {\n      for(let i = 0; i < perType; ++i) {\n        description.createEntry(type).createTransceiver(connection, init);\n      }\n    }); */\n\n    return description;\n  }\n\n  public appendStreamToConference() {\n    super.appendStreamToConference();/* .then(() => {\n      currentGroupCall.connections.main.negotiating = false;\n      this.startNegotiation({\n        type: type,\n        isMuted: muted,\n        rejoin\n      });\n    }); */\n  }\n\n  private async invokeJoinGroupCall(localSdp: SDP, mainChannels: SDPMediaSection[], options: GroupCallConnectionInstance['options']) {\n    const {groupCall, description} = this;\n    const groupCallId = groupCall.id;\n\n    const processedChannels = mainChannels.map(section => {\n      const processed = processMediaSection(localSdp, section);\n\n      this.sources[processed.entry.type as 'video' | 'audio'] = processed.entry;\n      \n      return processed;\n    });\n\n    let promise: Promise<Updates>;\n    const audioChannel = processedChannels.find(channel => channel.media.mediaType === 'audio');\n    const videoChannel = processedChannels.find(channel => channel.media.mediaType === 'video');\n    let {source, params} = audioChannel || {};\n    const useChannel = videoChannel || audioChannel;\n\n    const channels: {[type in WebRTCLineType]?: typeof audioChannel} = {\n      audio: audioChannel,\n      video: videoChannel\n    };\n\n    description.entries.forEach(entry => {\n      if(entry.direction === 'sendonly') {\n        const channel = channels[entry.type];\n        if(!channel) return;\n\n        description.setEntrySource(entry, channel.sourceGroups || channel.source);\n        description.setEntryPeerId(entry, rootScope.myId);\n      }\n    });\n\n    // overwrite ssrc with audio in video params\n    if(params !== useChannel.params) {\n      const data: JoinGroupCallJsonPayload = JSON.parse(useChannel.params.data);\n      // data.ssrc = source || data.ssrc - 1; // audio channel can be missed in screensharing\n      if(source) data.ssrc = source;\n      else delete data.ssrc;\n      params = {\n        _: 'dataJSON',\n        data: JSON.stringify(data)\n      };\n    }\n    \n    const groupCallInput = appGroupCallsManager.getGroupCallInput(groupCallId);\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params,\n      };\n\n      promise = apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    apiUpdatesManager.processUpdateMessage(updates);\n    const update = (updates as Updates.updates).updates.find(update => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n\n    const data: UpdateGroupCallConnectionData = JSON.parse(update.params.data);\n\n    data.audio = data.audio || groupCall.connections.main.description.audio;\n    description.setData(data);\n    filterServerCodecs(mainChannels, data);\n\n    return data;\n  }\n\n  protected async negotiateInternal() {\n    const {connection, description} = this;\n    const isNewConnection = connection.iceConnectionState === 'new' && !description.getEntryByMid('0').source;\n    const log = this.log.bindPrefix('startNegotiation');\n    log('start');\n    \n    const originalOffer = await connection.createOffer({iceRestart: false});\n\n    if(isNewConnection && this.dataChannel) {\n      const dataChannelEntry = description.createEntry('application');\n      dataChannelEntry.setDirection('sendrecv');\n    }\n\n    const {sdp: localSdp, offer} = fixLocalOffer({\n      offer: originalOffer, \n      data: description\n    });\n\n    log('[sdp] setLocalDescription', offer.sdp);\n    await connection.setLocalDescription(offer);\n\n    const mainChannels = localSdp.media.filter(media => {\n      return media.mediaType !== 'application' && media.isSending;\n    });\n\n    if(isNewConnection) {\n      try {\n        await this.invokeJoinGroupCall(localSdp, mainChannels, this.options);\n      } catch(e) {\n        this.log.error('[tdweb] joinGroupCall error', e);\n      }\n    }\n    \n    /* if(!data) {\n      log('abort 0');\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n\n    /* if(connection.iceConnectionState !== 'new') {\n      log(`abort 1 connectionState=${connection.iceConnectionState}`);\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n    /* if(this.currentGroupCall !== currentGroupCall || connectionHandler.connection !== connection) {\n      log('abort', this.currentGroupCall, currentGroupCall);\n      this.closeConnectionAndStream(connection, streamManager);\n      return;\n    } */\n    \n    const isAnswer = true;\n    // const _bundleMids = bundleMids.slice();\n    const entriesToDelete: ConferenceEntry[] = [];\n    const bundle = localSdp.bundle;\n    forEachReverse(bundle, (mid, idx, arr) => {\n      const entry = description.getEntryByMid(mid);\n      if(entry.shouldBeSkipped(isAnswer)) {\n        arr.splice(idx, 1);\n        entriesToDelete.push(entry);\n      }\n    });\n\n    /* forEachReverse(description.entries, (entry, idx, arr) => {\n      const mediaSection = _parsedSdp.media.find(section => section.oa.get('mid').oa === entry.mid);\n      const deleted = !mediaSection;\n      // const deleted = !_bundleMids.includes(entry.mid); // ! can't use it because certain mid can be missed in bundle\n      if(deleted) {\n        arr.splice(idx, 1);\n      }\n    }); */\n\n    const entries = localSdp.media.map((section) => {\n      const mid = section.mid;\n      let entry = description.getEntryByMid(mid);\n      if(!entry) {\n        entry = new ConferenceEntry(mid, section.mediaType);\n        entry.setDirection('inactive');\n      }\n\n      return entry;\n    });\n\n    const answerDescription: RTCSessionDescriptionInit = {\n      type: 'answer',\n      sdp: description.generateSdp({\n        bundle, \n        entries, \n        isAnswer\n      })\n    };\n\n    entriesToDelete.forEach(entry => {\n      description.deleteEntry(entry);\n    });\n\n    log(`[sdp] setRemoteDescription signaling=${connection.signalingState} ice=${connection.iceConnectionState} gathering=${connection.iceGatheringState} connection=${connection.connectionState}`, answerDescription.sdp);\n    await connection.setRemoteDescription(answerDescription);\n\n    log('end');\n  }\n\n  public negotiate() {\n    let promise = this.negotiating;\n    if(promise) {\n      return promise;\n    }\n\n    promise = super.negotiate();\n\n    if(this.updateConstraints) {\n      promise.then(() => {\n        this.maybeUpdateRemoteVideoConstraints();\n        this.updateConstraints = false;\n      });\n    }\n\n    return promise;\n  }\n\n  public maybeUpdateRemoteVideoConstraints() {\n    if(this.dataChannel.readyState !== 'open') {\n      return;\n    }\n\n    this.log('maybeUpdateRemoteVideoConstraints');\n    \n    // * https://github.com/TelegramMessenger/tgcalls/blob/6f2746e04c9b040f8c8dfc64d916a1853d09c4ce/tgcalls/group/GroupInstanceCustomImpl.cpp#L2549\n    type VideoConstraints = {minHeight?: number, maxHeight: number};\n    const obj: {\n      colibriClass: 'ReceiverVideoConstraints',\n      constraints: {[endpoint: string]: VideoConstraints},\n      defaultConstraints: VideoConstraints,\n      onStageEndpoints: string[]\n    } = {\n      colibriClass: 'ReceiverVideoConstraints',\n      constraints: {},\n      defaultConstraints: {maxHeight: 0},\n      onStageEndpoints: []\n    };\n\n    for(const entry of this.description.entries) {\n      if(entry.direction !== 'recvonly' || entry.type !== 'video') {\n        continue;\n      }\n\n      const {endpoint} = entry;\n      obj.onStageEndpoints.push(endpoint);\n      obj.constraints[endpoint] = {\n        minHeight: 180,\n        maxHeight: 720\n      };\n    }\n\n    this.sendDataChannelData(obj);\n\n    if(!obj.onStageEndpoints.length) {\n      if(this.updateConstraintsInterval) {\n        clearInterval(this.updateConstraintsInterval);\n        this.updateConstraintsInterval = undefined;\n      }\n    } else if(!this.updateConstraintsInterval) {\n      this.updateConstraintsInterval = window.setInterval(this.maybeUpdateRemoteVideoConstraints.bind(this), 5000);\n    }\n  }\n  \n  public addInputVideoStream(stream: MediaStream) {\n    // const {sources} = this;\n    // if(sources?.video) {\n      // const source = this.sources.video.source;\n      // stream.source = '' + source;\n      this.groupCall.saveInputVideoStream(stream, this.type);\n    // }\n\n    this.streamManager.addStream(stream, 'input');\n    this.appendStreamToConference(); // replace sender track\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { safeAssign } from \"../../helpers/object\";\nimport { logger } from \"../logger\";\nimport createDataChannel from \"./helpers/createDataChannel\";\nimport createPeerConnection from \"./helpers/createPeerConnection\";\nimport LocalConferenceDescription from \"./localConferenceDescription\";\nimport StreamManager from \"./streamManager\";\nimport { Ssrc } from \"./types\";\n\nexport type CallConnectionInstanceOptions = {\n  streamManager: StreamManager,\n  connection?: RTCPeerConnection,\n  log?: ReturnType<typeof logger>\n};\n\nexport default abstract class CallConnectionInstanceBase {\n  public connection: RTCPeerConnection;\n  public streamManager: StreamManager;\n  public dataChannel: RTCDataChannel;\n  public description: LocalConferenceDescription;\n  public sources: {\n    audio: Ssrc,\n    video?: Ssrc,\n  };\n  protected negotiating: Promise<void>;\n  protected log: ReturnType<typeof logger>;\n\n  constructor(options: CallConnectionInstanceOptions) {\n    safeAssign(this, options);\n\n    if(!this.log) {\n      this.log = this.connection?.log || logger('CALL-CONNECTION-BASE');\n    }\n\n    this.sources = {} as any;\n  }\n\n  public createPeerConnection(config?: RTCConfiguration) {\n    return this.connection || (this.connection = createPeerConnection(config, this.log.bindPrefix('connection')).connection);\n  }\n\n  public createDataChannel(dict?: RTCDataChannelInit) {\n    return this.dataChannel || (this.dataChannel = createDataChannel(this.connection, dict, this.log.bindPrefix('data')));\n  }\n\n  public createDescription() {\n    return this.description || (this.description = new LocalConferenceDescription(this.connection));\n  }\n\n  public appendStreamToConference() {\n    return this.streamManager.appendToConference(this.description);\n  }\n\n  public closeConnection() {\n    const {connection} = this;\n    if(!connection) {\n      return;\n    }\n\n    try {\n      connection.log('close');\n      connection.close();\n    } catch(e) {\n      this.log.error(e);\n    }\n  }\n\n  public closeConnectionAndStream(stopStream: boolean) {\n    this.closeConnection();\n    stopStream && this.streamManager.stop();\n  }\n\n  protected abstract negotiateInternal(): CallConnectionInstanceBase['negotiating'];\n\n  public negotiate() {\n    let promise = this.negotiating;\n    if(promise) {\n      return promise;\n    }\n\n    return this.negotiating = this.negotiateInternal().finally(() => {\n      this.negotiating = undefined;\n    });\n  }\n\n  public sendDataChannelData(data: any) {\n    if(this.dataChannel.readyState !== 'open') {\n      return;\n    }\n\n    this.dataChannel.send(JSON.stringify(data));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Logger, logger } from \"../../logger\";\n\nexport default function createPeerConnection(config: RTCConfiguration, log?: Logger) {\n  if(!log) {\n    log = logger('RTCPeerConnection');\n  }\n\n  log('constructor');\n\n  // @ts-ignore\n  const connection = new RTCPeerConnection(config);\n  connection.addEventListener('track', (event) => {\n    log('ontrack', event);\n  });\n  connection.addEventListener('signalingstatechange', () => {\n    log('onsignalingstatechange', connection.signalingState);\n  });\n  connection.addEventListener('connectionstatechange', () => {\n    log('onconnectionstatechange', connection.connectionState);\n  });\n  connection.addEventListener('negotiationneeded', () => { // * will be fired every time input device changes\n    log('onnegotiationneeded', connection.signalingState);\n  });\n  connection.addEventListener('icecandidate', (event) => {\n    log('onicecandidate', event);\n  });\n  connection.addEventListener('iceconnectionstatechange', () => {\n    log('oniceconnectionstatechange', connection.iceConnectionState);\n  });\n  connection.addEventListener('datachannel', () => {\n    log('ondatachannel');\n  });\n\n  connection.log = log;\n\n  return {connection};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Logger, logger } from \"../../logger\";\n\nexport default function createDataChannel(connection: RTCPeerConnection, dict?: RTCDataChannelInit, log?: Logger) {\n  // return;\n\n  if(!log) {\n    log = logger('RTCDataChannel');\n  }\n\n  const channel = connection.createDataChannel('data', dict);\n\n  channel.addEventListener('message', (e) => {\n    log('onmessage', e);\n  });\n  channel.addEventListener('open', () => {\n    log('onopen');\n  });\n  channel.addEventListener('close', () => {\n    log('onclose');\n  });\n\n  channel.log = log;\n\n  return channel;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { DataJSON } from \"../../../layer\";\nimport { JoinGroupCallJsonPayload } from \"../../appManagers/appGroupCallsManager\";\nimport SDP from \"../sdp\";\nimport { Ssrc } from \"../types\";\nimport parseMediaSectionInfo from \"./parseMediaSectionInfo\";\n\nexport default function processMediaSection(sdp: SDP, media: SDP['media'][0]) {\n  const sectionInfo = parseMediaSectionInfo(sdp, media);\n\n  const mediaType: Exclude<typeof media['mediaType'], 'application'> = media.mediaType as any;\n  const entry: Ssrc = {\n    source: sectionInfo.source,\n    sourceGroups: sectionInfo.sourceGroups,\n    type: mediaType\n  };\n\n  // do not change this value, otherwise onconnectionstatechange won't fire\n  sectionInfo.fingerprint.setup = 'active';\n  const payload: JoinGroupCallJsonPayload = {\n    fingerprints: [sectionInfo.fingerprint],\n    pwd: sectionInfo.pwd,\n    ssrc: sectionInfo.source,\n    'ssrc-groups': sectionInfo.sourceGroups || [],\n    ufrag: sectionInfo.ufrag\n  };\n  const paramsDataJson = JSON.stringify(payload);\n\n  const params: DataJSON = {\n    _: 'dataJSON',\n    data: paramsDataJson\n  };\n\n  return {\n    params, \n    source: sectionInfo.source, \n    media, \n    sourceGroups: sectionInfo.sourceGroups, \n    entry\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { forEachReverse } from \"../../../helpers/array\";\nimport SDPMediaSection from \"../sdp/mediaSection\";\nimport { UpdateGroupCallConnectionData, Codec } from \"../types\";\n\nexport default function filterServerCodecs(mainChannels: SDPMediaSection[], data: UpdateGroupCallConnectionData) {\n  // ! Need to filter server's extmap for Firefox\n  const performExtmap = (channel: typeof mainChannels[0]) => {\n    const out: {[id: string]: string} = {};\n    const extmap = channel.attributes.get('extmap');\n    extmap.forEach((extmap) => {\n      const id = extmap.key.split('/', 1)[0];\n      out[id] = extmap.value;\n    });\n\n    return out;\n  };\n\n  const codecsToPerform: [Codec, 'audio' | 'video'][] = /* flatten([data, dataPresentation].filter(Boolean).map(data => {\n    return  */['audio' as const, 'video' as const].filter(type => data[type]).map(type => ([data[type], type]));\n  // }));\n\n  codecsToPerform.forEach(([codec, type]) => {\n    const channel = mainChannels.find(line => line.mediaType === type);\n    if(!channel) {\n      return;\n    }\n\n    const extmap = performExtmap(channel);\n    forEachReverse(codec[\"rtp-hdrexts\"], (value, index, arr) => {\n      if(extmap[value.id] !== value.uri) {\n        arr.splice(index, 1);\n        console.log(`[sdp] filtered extmap:`, value, index, type);\n      }\n    });\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_SAFARI } from \"../../environment/userAgent\";\nimport { indexOfAndSplice } from \"../../helpers/array\";\nimport { safeAssign } from \"../../helpers/object\";\nimport throttle from \"../../helpers/schedulers/throttle\";\nimport { GroupCall, GroupCallParticipant, Updates } from \"../../layer\";\nimport apiUpdatesManager from \"../appManagers/apiUpdatesManager\";\nimport appGroupCallsManager, { GroupCallConnectionType, GroupCallId, GroupCallOutputSource } from \"../appManagers/appGroupCallsManager\";\nimport appPeersManager from \"../appManagers/appPeersManager\";\nimport { logger } from \"../logger\";\nimport apiManager from \"../mtproto/apiManager\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport rootScope from \"../rootScope\";\nimport CallInstanceBase, { TryAddTrackOptions } from \"./callInstanceBase\";\nimport GroupCallConnectionInstance from \"./groupCallConnectionInstance\";\nimport GROUP_CALL_STATE from \"./groupCallState\";\nimport getScreenConstraints from \"./helpers/getScreenConstraints\";\nimport getScreenStream from \"./helpers/getScreenStream\";\nimport getStream from \"./helpers/getStream\";\nimport getVideoConstraints from \"./helpers/getVideoConstraints\";\nimport stopTrack from \"./helpers/stopTrack\";\nimport localConferenceDescription from \"./localConferenceDescription\";\nimport { WebRTCLineType } from \"./sdpBuilder\";\nimport StreamManager from \"./streamManager\";\nimport { Ssrc } from \"./types\";\n\nexport default class GroupCallInstance extends CallInstanceBase<{\n  state: (state: GROUP_CALL_STATE) => void,\n  pinned: (source?: GroupCallOutputSource) => void,\n}> {\n  public id: GroupCallId;\n  public chatId: ChatId;\n  public handleUpdateGroupCallParticipants: boolean;\n  public updatingSdp: boolean;\n  public isSpeakingMap: Map<any, any>;\n  public connections: {[k in GroupCallConnectionType]?: GroupCallConnectionInstance};\n  public groupCall: GroupCall;\n  public participant: GroupCallParticipant;\n  \n  // will be set with negotiation\n  public joined: boolean;\n  \n  private pinnedSources: Array<GroupCallOutputSource>;\n  private participantsSsrcs: Map<PeerId, Ssrc[]>;\n  private hadAutoPinnedSources: Set<GroupCallOutputSource>;\n  private dispatchPinnedThrottled: () => void;\n  private startVideoSharingPromise: Promise<void>;\n  private startScreenSharingPromise: Promise<void>;\n\n  constructor(options: {\n    id: GroupCallInstance['id'],\n    chatId: GroupCallInstance['chatId'],\n    isSpeakingMap?: GroupCallInstance['isSpeakingMap'],\n    connections?: GroupCallInstance['connections']\n  }) {\n    super();\n\n    safeAssign(this, options);\n\n    if(!this.log) {\n      this.log = logger('GROUP-CALL');\n    }\n\n    if(!this.connections) {\n      this.connections = {};\n    }\n\n    if(!this.isSpeakingMap) {\n      this.isSpeakingMap = new Map();\n    }\n\n    this.pinnedSources = [];\n    this.participantsSsrcs = new Map();\n    this.hadAutoPinnedSources = new Set();\n    this.dispatchPinnedThrottled = throttle(() => {\n      this.dispatchEvent('pinned', this.pinnedSource);\n    }, 0, false);\n\n    this.addEventListener('state', (state) => {\n      if(state === GROUP_CALL_STATE.CLOSED) {\n        this.cleanup();\n      }\n    });\n  }\n\n  get connectionState() {\n    return this.connections.main.connection.iceConnectionState;\n  }\n\n  get state() {\n    const {connectionState} = this;\n    if(connectionState === 'closed') {\n      return GROUP_CALL_STATE.CLOSED;\n    } else if(connectionState !== 'connected' && (!IS_SAFARI || connectionState !== 'completed')) {\n      return GROUP_CALL_STATE.CONNECTING;\n    } else {\n      const {participant} = this;\n      if(!participant.pFlags.can_self_unmute) {\n        return GROUP_CALL_STATE.MUTED_BY_ADMIN;\n      } else if(participant.pFlags.muted) {\n        return GROUP_CALL_STATE.MUTED;\n      } else {\n        return GROUP_CALL_STATE.UNMUTED;\n      }\n    }\n  }\n\n  get participants() {\n    return appGroupCallsManager.getCachedParticipants(this.id);\n  }\n\n  get isSharingScreen() {\n    return !!this.connections.presentation;\n  }\n\n  get pinnedSource() {\n    return this.pinnedSources[this.pinnedSources.length - 1];\n  }\n\n  public get isMuted() {\n    return this.state !== GROUP_CALL_STATE.UNMUTED;\n  }\n\n  public get isClosing() {\n    const {state} = this;\n    return state === GROUP_CALL_STATE.CLOSED;\n  }\n\n  public get streamManager(): StreamManager {\n    return this.connections.main.streamManager;\n  }\n\n  public get description(): localConferenceDescription {\n    return this.connections.main.description;\n  }\n\n  public pinSource(source: GroupCallOutputSource) {\n    indexOfAndSplice(this.pinnedSources, source);\n    this.pinnedSources.push(source);\n    this.dispatchPinnedThrottled();\n  }\n\n  public unpinSource(source: GroupCallOutputSource) {\n    this.hadAutoPinnedSources.delete(source);\n    indexOfAndSplice(this.pinnedSources, source);\n    this.dispatchPinnedThrottled();\n  }\n\n  public unpinAll() {\n    this.pinnedSources.length = 0;\n    this.dispatchPinnedThrottled();\n  }\n\n  public getParticipantByPeerId(peerId: PeerId) {\n    return NULL_PEER_ID === peerId ? this.participant : this.participants.get(peerId);\n  }\n\n  public toggleMuted() {\n    return this.requestAudioSource(true).then(() => appGroupCallsManager.toggleMuted());\n  }\n\n  public getElement(endpoint: GroupCallOutputSource) {\n    return super.getElement(endpoint);\n  }\n\n  public getVideoElementFromParticipantByType(participant: GroupCallParticipant, type: 'video' | 'presentation') {\n    let source: GroupCallOutputSource;\n    if(participant.pFlags.self) {\n      const connectionType: GroupCallConnectionType = type === 'video' ? 'main' : 'presentation';\n      source = connectionType;\n    } else {\n      const codec = participant[type];\n      source = codec.source_groups[0].sources[0];\n    }\n\n    const element = this.getElement(source) as HTMLVideoElement;\n    if(!element) return;\n\n    const clone = element.cloneNode() as typeof element;\n    clone.srcObject = element.srcObject;\n    clone.setAttribute('playsinline', 'true');\n    clone.muted = true;\n    return {video: clone, source};\n  }\n\n  public createConnectionInstance(options: {\n    streamManager: StreamManager,\n    type: GroupCallConnectionType,\n    options: GroupCallConnectionInstance['options'],\n  }) {\n    return this.connections[options.type] = new GroupCallConnectionInstance({\n      groupCall: this,\n      log: this.log.bindPrefix(options.type),\n      ...options\n    });\n  }\n\n  public changeRaiseHand(raise: boolean) {\n    return appGroupCallsManager.editParticipant(this.id, this.participant, {raiseHand: raise});\n  }\n\n  public async startScreenSharingInternal() {\n    try {\n      const type: GroupCallConnectionType = 'presentation';\n\n      const stream = await getScreenStream(getScreenConstraints());\n      const streamManager = new StreamManager();\n      \n      const connectionInstance = this.createConnectionInstance({\n        streamManager,\n        type,\n        options: {\n          type\n        }\n      });\n      \n      const connection = connectionInstance.createPeerConnection();\n      connection.addEventListener('negotiationneeded', () => {\n        connectionInstance.negotiate();\n      });\n\n      stream.getVideoTracks()[0].addEventListener('ended', () => {\n        if(this.connections.presentation) { // maybe user has stopped screensharing through browser's ui\n          this.stopScreenSharing();\n        }\n      }, {once: true});\n      \n      connectionInstance.createDescription();\n      connectionInstance.addInputVideoStream(stream);\n    } catch(err) {\n      this.log.error('start screen sharing error', err);\n    }\n  }\n\n  public startScreenSharing() {\n    return this.startScreenSharingPromise || (this.startScreenSharingPromise = this.startScreenSharingInternal().finally(() => {\n      this.startScreenSharingPromise = undefined;\n    }));\n  }\n\n  public stopScreenSharing() {\n    const connectionInstance = this.connections.presentation;\n    if(!connectionInstance) {\n      return Promise.resolve();\n    }\n\n    delete this.connections.presentation;\n    this.unpinSource('presentation');\n    connectionInstance.closeConnectionAndStream(true);\n\n    delete this.participant.presentation;\n    appGroupCallsManager.saveApiParticipant(this.id, this.participant);\n\n    return apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: appGroupCallsManager.getGroupCallInput(this.id)\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleScreenSharing() {\n    if(this.isSharingScreen) {\n      return this.stopScreenSharing();\n    } else {\n      return this.startScreenSharing();\n    }\n  }\n\n  public async startVideoSharingInternal() {\n    const constraints: MediaStreamConstraints = {\n      video: getVideoConstraints()\n    };\n\n    try {\n      const stream = await getStream(constraints, false);\n      const connectionInstance = this.connections.main;\n      connectionInstance.addInputVideoStream(stream);\n\n      await appGroupCallsManager.editParticipant(this.id, this.participant, {\n        videoPaused: false,\n        videoStopped: false\n      });\n    } catch(err) {\n      this.log.error('startVideoSharing error', err, constraints);\n    }\n  }\n\n  public startVideoSharing() {\n    return this.startVideoSharingPromise || (this.startVideoSharingPromise = this.startVideoSharingInternal().finally(() => {\n      this.startVideoSharingPromise = undefined;\n    }));\n  }\n\n  public async stopVideoSharing() {\n    const connectionInstance = this.connections.main;\n    const track = connectionInstance.streamManager.inputStream.getVideoTracks()[0];\n    if(!track) {\n      return;\n    }\n\n    stopTrack(track);\n    connectionInstance.streamManager.appendToConference(connectionInstance.description); // clear sender track\n\n    await appGroupCallsManager.editParticipant(this.id, this.participant, {\n      videoStopped: true\n    });\n  }\n\n  public toggleVideoSharing() {\n    if(this.isSharingVideo) {\n      return this.stopVideoSharing();\n    } else {\n      return this.startVideoSharing();\n    }\n  }\n\n  public async hangUp(discard = false, rejoin = false, isDiscarded = false) {\n    for(const type in this.connections) {\n      const connection = this.connections[type as GroupCallConnectionType];\n      connection.closeConnectionAndStream(!rejoin);\n    }\n\n    this.dispatchEvent('state', this.state);\n\n    if(isDiscarded) {\n      return;\n    }\n    \n    if(!rejoin) {\n      let promise: Promise<Updates>;\n      const groupCallInput = appGroupCallsManager.getGroupCallInput(this.id);\n\n      if(discard) {\n        this.log(`[api] discardGroupCall id=${this.id}`);\n        promise = apiManager.invokeApi('phone.discardGroupCall', {\n          call: groupCallInput\n        });\n      } else if(this.joined) {\n        this.log(`[api] leaveGroupCall id=${this.id}`);\n        const connectionInstance = this.connections.main;\n        promise = apiManager.invokeApi('phone.leaveGroupCall', {\n          call: groupCallInput,\n          source: connectionInstance.sources.audio.source\n        });\n      } else {\n        this.log(`[api] id=${this.id} payload=null`);\n        promise = apiManager.invokeApi('phone.joinGroupCall', {\n          call: groupCallInput,\n          join_as: {_: 'inputPeerSelf'},\n          muted: true,\n          video_stopped: true,\n          params: {\n            _: 'dataJSON',\n            data: ''\n          }\n        });\n      }\n\n      const updates = await promise;\n      apiUpdatesManager.processUpdateMessage(updates);\n    }\n  }\n\n  public tryAddTrack(options: Omit<TryAddTrackOptions, 'streamManager'>) {\n    const {description} = this;\n    const source = super.tryAddTrack(options);\n    \n    if(options.type === 'output') {\n      const entry = description.getEntryBySource(+source);\n      const participant = this.participants.get(entry.peerId);\n      if(participant) {\n        rootScope.dispatchEvent('group_call_participant', {groupCallId: this.id, participant});\n      }\n    }\n\n    return source;\n  }\n\n  public onParticipantUpdate(participant: GroupCallParticipant, doNotDispatchParticipantUpdate?: PeerId) {\n    const connectionInstance = this.connections.main;\n    const {connection, description} = connectionInstance;\n\n    const peerId = appPeersManager.getPeerId(participant.peer);\n    const hasLeft = !!participant.pFlags.left;\n    const oldSsrcs = this.participantsSsrcs.get(peerId) || [];\n\n    if(participant.presentation && !hasLeft) {\n      const {source} = appGroupCallsManager.makeSsrcFromParticipant(participant, 'video', participant.presentation.source_groups, participant.presentation.endpoint);\n      if(!this.hadAutoPinnedSources.has(source)) {\n        this.hadAutoPinnedSources.add(source);\n        this.pinSource(participant.pFlags.self ? 'presentation' : source);\n      }\n    }\n\n    if(participant.pFlags.self) {\n      this.participant = participant;\n\n      if(connectionInstance.sources.audio.source !== participant.source) {\n        this.hangUp();\n      }\n\n      let mute = false;\n      if(!participant.pFlags.can_self_unmute) {\n        this.stopScreenSharing();\n        this.stopVideoSharing();\n        mute = true;\n      } else if(participant.pFlags.muted) {\n        mute = true;\n      }\n\n      if(mute) {\n        this.setMuted(true);\n      }\n\n      if(doNotDispatchParticipantUpdate !== peerId) {\n        this.dispatchEvent('state', this.state);\n      }\n\n      return;\n    }\n\n    const ssrcs = hasLeft ? [] : appGroupCallsManager.makeSsrcsFromParticipant(participant);\n\n    if(!hasLeft) {\n      this.participantsSsrcs.set(peerId, ssrcs);\n    } else {\n      this.participantsSsrcs.delete(peerId);\n    }\n\n    // const TEST_OLD = false;\n\n    const modifiedTypes: Set<WebRTCLineType> = new Set();\n    oldSsrcs.forEach(oldSsrc => {\n      const oldSource = oldSsrc.source;\n      const newSsrc = ssrcs.find(ssrc => ssrc.source === oldSource);\n      if(!newSsrc) {\n        this.unpinSource(oldSource);\n\n        const oldEntry = description.getEntryBySource(oldSource);\n        if(oldEntry && oldEntry.direction !== 'inactive') {\n          oldEntry.setDirection('inactive');\n          modifiedTypes.add(oldEntry.type);\n        }\n      }\n    });\n\n    ssrcs.forEach(ssrc => {\n      let entry = description.getEntryBySource(ssrc.source);\n      if(entry) {\n        if(entry.direction === 'inactive') {\n          entry.setDirection(entry.originalDirection);\n          modifiedTypes.add(entry.type);\n        }\n\n        return;\n      }\n\n      entry = description.createEntry(ssrc.type);\n      description.setEntrySource(entry, ssrc.sourceGroups || ssrc.source);\n      description.setEntryPeerId(entry, peerId);\n\n      // if(TEST_OLD) {\n      //   description.bundleMids.push(entry.mid);\n      //   entry.setDirection('recvonly');\n      // } else {\n        ssrc.type === 'video' && entry.setEndpoint(ssrc.endpoint);\n        entry.createTransceiver(connection, {direction: 'recvonly'});\n      // }\n\n      modifiedTypes.add(entry.type);\n    });\n\n    /* if(TEST_OLD) {\n      this.setRemoteOffer({\n        connection,\n        description,\n        ssrcs\n      });\n    } else  */if(modifiedTypes.size) {\n      if(modifiedTypes.has('video')) {\n        connectionInstance.updateConstraints = true;\n      }\n\n      connectionInstance.negotiateThrottled();\n    }\n  }\n}\n","export default function getScreenConstraints(): DisplayMediaStreamConstraints {\n  return {\n   video: {\n      // @ts-ignore\n      // cursor: 'always',\n      width: {max: 1920},\n      height: {max: 1080},\n      frameRate: {max: 30}\n    },\n    audio: true\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport I18n, { i18n, join, LangPackKey } from \"../lib/langPack\";\r\nimport formatDuration, { DurationType } from \"./formatDuration\";\r\n\r\nconst CALL_DURATION_LANG_KEYS: {[type in DurationType]: LangPackKey} = {\r\n  s: 'Seconds',\r\n  m: 'Minutes',\r\n  h: 'Hours',\r\n  d: 'Days',\r\n  w: 'Weeks'\r\n};\r\nexport default function formatCallDuration(duration: number, plain?: boolean) {\r\n  const a = formatDuration(duration, 2);\r\n  if(plain) {\r\n    const strings = a.map(d => I18n.format(CALL_DURATION_LANG_KEYS[d.type], true, [d.duration]));\r\n    return join(strings, false, plain);\r\n  }\r\n\r\n  const elements = a.map(d => i18n(CALL_DURATION_LANG_KEYS[d.type], [d.duration]));\r\n\r\n  const fragment = document.createElement('span');\r\n  fragment.append(...join(elements, false));\r\n\r\n  return fragment;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type DurationType = 's' | 'm' | 'h' | 'd' | 'w';\r\nexport default function formatDuration(duration: number, showLast = 2) {\r\n  if(!duration) {\r\n    duration = 1;\r\n  }\r\n\r\n  let d: {duration: number, type: DurationType}[] = [];\r\n  const p = [\r\n    {m: 1, t: 's'},\r\n    {m: 60, t: 'm'}, \r\n    {m: 60, t: 'h'}, \r\n    {m: 24, t: 'd'}, \r\n    {m: 7, t: 'w'}\r\n  ] as Array<{m?: number, t: DurationType}>\r\n  const s = 1;\r\n  let t = s;\r\n  p.forEach((o, idx) => {\r\n    t *= o.m;\r\n\r\n    if(duration < t) {\r\n      return;\r\n    }\r\n\r\n    const modulus = p[idx === (p.length - 1) ? idx : idx + 1].m;\r\n    d.push({\r\n      duration: (duration / t % modulus | 0),\r\n      type: o.t\r\n    });\r\n  });\r\n\r\n  const out = d.slice(-showLast).reverse();\r\n  for(let i = out.length - 1; i >= 0; --i) {\r\n    if(out[i].duration === 0) {\r\n      out.splice(i, 1);\r\n    }\r\n  }\r\n  \r\n  return out;\r\n}\r\n","import { IS_APPLE_MOBILE, IS_SAFARI } from \"./userAgent\";\n\n// mov is not supported in Chrome on macOS\nconst IS_MOV_SUPPORTED = !!document.createElement('video').canPlayType('video/quicktime') || IS_SAFARI || IS_APPLE_MOBILE;\n\nexport default IS_MOV_SUPPORTED;\n","import IS_MOV_SUPPORTED from \"./movSupport\";\n\nconst VIDEO_MIME_TYPES_SUPPORTED = new Set([\n  'image/gif', // have to display it as video\n  'video/mp4',\n  'video/webm'\n]);\n\nif(IS_MOV_SUPPORTED) {\n  VIDEO_MIME_TYPES_SUPPORTED.add('video/quicktime');\n}\n\nexport default VIDEO_MIME_TYPES_SUPPORTED;\n","import constraintSupported, { MyMediaTrackSupportedConstraints } from \"../../../environment/constraintSupport\";\n\nexport default function getAudioConstraints(): MediaTrackConstraints {\n  const constraints: MediaTrackConstraints = {\n    channelCount: 2\n  };\n\n  const desirable: (keyof MyMediaTrackSupportedConstraints)[] = [\n    'noiseSuppression',\n    'echoCancellation',\n    'autoGainControl'\n  ];\n\n  desirable.forEach(constraint => {\n    if(constraintSupported(constraint)) {\n      // @ts-ignore\n      constraints[constraint] = true;\n    }\n  });\n\n  return constraints;\n}\n","export type MyMediaTrackSupportedConstraints = MediaTrackSupportedConstraints & {\n  noiseSuppression?: boolean, \n  autoGainControl?: boolean\n};\n\nexport default function constraintSupported(constraint: keyof MyMediaTrackSupportedConstraints) {\n  return (!!navigator?.mediaDevices?.getSupportedConstraints() as any as MyMediaTrackSupportedConstraints)[constraint];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport { IS_FIREFOX } from '../../environment/userAgent';\nimport LocalConferenceDescription, { ConferenceEntry } from './localConferenceDescription';\nimport StringFromLineBuilder from './stringFromLineBuilder';\nimport { GroupCallConnectionTransport, PayloadType, UpdateGroupCallConnectionData } from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type WebRTCLineType = 'video' | 'audio' | 'application';\n\nexport const WEBRTC_MEDIA_PORT = '9';\n\nexport function performCandidate(c: GroupCallConnectionTransport['candidates'][0]) {\n  const arr: string[] = [];\n  arr.push('a=candidate:');\n  arr.push(`${c.foundation} ${c.component} ${c.protocol.toUpperCase()} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`);\n  if(c['rel-addr'] !== undefined) {\n    arr.push(` raddr ${c['rel-addr']} rport ${c['rel-port']}`);\n  }\n  arr.push(` generation ${c.generation}`);\n  return arr.join('');\n}\n\nexport function getConnectionTypeForMediaType(mediaType: WebRTCLineType) {\n  return mediaType === 'application' ? 'DTLS/SCTP' : 'RTP/SAVPF';\n}\n\nexport function generateMediaFirstLine(mediaType: WebRTCLineType, port = WEBRTC_MEDIA_PORT, payloadIds: (string | number)[]) {\n  const connectionType = getConnectionTypeForMediaType(mediaType);\n  return `m=${mediaType} ${port} ${connectionType} ${payloadIds.join(' ')}`;\n}\n\ntype ConferenceData = UpdateGroupCallConnectionData;\n\n// https://tools.ietf.org/id/draft-ietf-rtcweb-sdp-08.html\n// https://datatracker.ietf.org/doc/html/draft-roach-mmusic-unified-plan-00\nexport class SDPBuilder extends StringFromLineBuilder {\n  public addCandidate(c: GroupCallConnectionTransport['candidates'][0]) {\n    return this.add(performCandidate(c));\n  }\n\n  /* public addDataChannel(mid: string, transport: GroupCallConnectionTransport, isAnswer?: boolean) {\n    this.add(\n      'm=application 9 UDP/DTLS/SCTP webrtc-datachannel',\n      'c=IN IP4 0.0.0.0',\n      'a=ice-options:trickle',\n      `a=mid:${mid}`\n    );\n\n    // if(!isAnswer) {\n      this.add('a=sendrecv');\n    // }\n\n    this.addTransport(transport, isAnswer);\n\n    return this.add(\n      'a=sctp-port:5000',\n      'a=max-message-size:262144'\n    );\n  } */\n  \n  public addHeader(sId: string, bundleMids: string[]) {\n    const bundle = bundleMids.join(' ');\n    return this.add(\n      'v=0',                          // version\n      `o=- ${sId} 2 IN IP4 0.0.0.0`,  // sessionId, 2=sessionVersion\n      's=-',                          // name of the session\n      't=0 0',                        // time when session is valid\n      'a=extmap-allow-mixed',\n      `a=group:BUNDLE ${bundle}`,\n      'a=ice-options:trickle',\n      'a=ice-lite',                   // ice-lite: is a minimal version of the ICE specification, intended for servers running on a public IP address.\n      'a=msid-semantic:WMS *'\n    );\n  }\n  \n  public addTransport(transport: GroupCallConnectionTransport, skipCandidates?: boolean) {\n    this.add(\n      `a=ice-ufrag:${transport.ufrag}`,\n      `a=ice-pwd:${transport.pwd}`,\n      'a=ice-options:trickle'           // ! test\n    );\n\n    for(const fingerprint of transport.fingerprints) {\n      this.add(\n        `a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`,\n        `a=setup:${fingerprint.setup}`\n      );\n    }\n\n    if(!skipCandidates && transport.candidates) {\n      for(const candidate of transport.candidates) {\n        this.addCandidate(candidate);\n      }\n    }\n\n    return this;\n  }\n\n  public addSsrc(entry: ConferenceEntry) {\n    let streamName = 'stream';\n    let {type, sourceGroups} = entry;\n\n    // let source = ssrc.source ?? ssrc.sourceGroups[0].sources[0];\n    // source = fromTelegramSource(source);\n    const source = fromTelegramSource(entry.source);\n\n    streamName += source;\n    type += source as any;\n\n    // streamName += mid;\n    // type += mid as any;\n\n    // streamName = type = entry.transceiver.receiver.track.id as any;\n\n    const addMsid = () => {\n      this.add(`a=msid:${streamName} ${type}`);\n    };\n\n    const addSource = (ssrc: number) => {\n      this.add(\n        `a=ssrc:${ssrc} cname:${streamName}`,\n        `a=ssrc:${ssrc} msid:${streamName} ${type}`,\n        `a=ssrc:${ssrc} mslabel:${streamName}`,\n        `a=ssrc:${ssrc} label:${type}`\n      );\n    };\n\n    addMsid();\n    if(sourceGroups?.length) {\n      sourceGroups.forEach(ssrcGroup => {\n        if(ssrcGroup.sources.length) {\n          const sources = ssrcGroup.sources.map(fromTelegramSource);\n          this.add(`a=ssrc-group:${ssrcGroup.semantics} ${sources.join(' ')}`);\n          sources.forEach(addSource);\n        }\n      });\n    } else {\n      addSource(source);\n    }\n  \n    return this;\n  }\n\n  public addSsrcEntry(entry: ConferenceEntry, data: ConferenceData, isAnswer?: boolean) {\n    const add = (...x: string[]) => this.add(...x);\n    \n    const {type, mid, direction, port} = entry;\n    const transport = data.transport;\n\n    /* if(type === 'application') {\n      return this.addDataChannel(mid, transport, isAnswer);\n    } */\n\n    const isApplication = type === 'application';\n    const codec = isApplication ? undefined : data[type];\n\n    const isInactive = direction === 'inactive';\n    if(entry.shouldBeSkipped(isAnswer)) {\n      return add(\n        `m=${type} 0 ${getConnectionTypeForMediaType(type)} 0`,\n        `c=IN IP4 0.0.0.0`,\n        `a=inactive`,\n        `a=mid:${mid}`\n      );\n    }\n    \n    const payloadTypes = !isApplication ? codec['payload-types'] : [{id: 5000} as PayloadType];\n    const ids = payloadTypes.map(type => type.id);\n    add(\n      generateMediaFirstLine(type, port, ids),\n      'c=IN IP4 0.0.0.0',\n      `a=rtcp:${port} IN IP4 0.0.0.0`,\n    );\n\n    if(transport['rtcp-mux']) {\n      add('a=rtcp-mux');\n    }\n\n    add(`a=mid:${mid}`);\n    /* if(type === 'video') {\n      add('b=AS:2500');\n    } */\n\n    let setDirection = direction;\n    if(direction !== 'sendrecv' && isAnswer && !(isInactive || isApplication)) {\n      setDirection = direction === 'sendonly' ? 'recvonly' : 'sendonly';\n    }\n\n    // a=bundle-only\n    add(`a=${setDirection}`);\n    \n    // this.addTransport(transport, isAnswer);\n    this.addTransport(transport);\n\n    if(!isApplication) {\n      const hdrexts = codec['rtp-hdrexts'];\n      if(hdrexts?.length) {\n        hdrexts.forEach(hdrext => {\n          add(`a=extmap:${hdrext.id} ${hdrext.uri}`);\n        });\n      }\n  \n      payloadTypes.forEach(type => {\n        add(`a=rtpmap:${type.id} ${type.name}/${type.clockrate}${type.channels && type.channels > 1 ? `/${type.channels}` : ''}`);\n  \n        const parameters = type.parameters;\n        if(Array.isArray(parameters)) {\n          if(parameters.length) {\n            console.error('parameters is array???', parameters);\n          }\n        } else if(parameters && Object.keys(parameters).length) {\n          const p: string[] = [];\n          for(const i in parameters) {\n            p.push(`${i}=${parameters[i]}`);\n          }\n          add(`a=fmtp:${type.id} ${p.join(';')}`);\n        }\n  \n        const fbs = type['rtcp-fbs'];\n        if(fbs?.length) {\n          fbs.forEach(fb => {\n            add(`a=rtcp-fb:${type.id} ${fb.type}${fb.subtype ? ' ' + fb.subtype : ''}`);\n          });\n        }\n      });\n    } else {\n      add(`a=sctpmap:${payloadTypes[0].id} webrtc-datachannel 256`);\n    }\n\n    if(entry.source && (setDirection === 'sendonly' || setDirection === 'sendrecv')) {\n      this.addSsrc(entry);\n    }\n\n    return this;\n  }\n  \n  public addConference(options: {\n    conference: LocalConferenceDescription, \n    bundle: string[],\n    entries: ConferenceEntry[],\n    isAnswer?: boolean, \n  }) {\n    const {conference, entries, bundle, isAnswer} = options;\n    this.addHeader(conference.sessionId, bundle);\n\n    if(IS_FIREFOX) {\n      this.addTransport(conference.transport); // support Firefox\n    }\n\n    for(const entry of entries) {\n      // this.addSsrcEntry(entry, conference, isAnswer);\n      this.addSsrcEntry((isAnswer ? entry.recvEntry || entry.sendEntry : entry.sendEntry || entry.recvEntry) || entry, conference, isAnswer);\n    }\n\n    return this;\n  }\n  \n  public static fromConference(options: Parameters<SDPBuilder['addConference']>[0]) {\n    return new SDPBuilder().addConference(options).finalize();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nexport default class StringFromLineBuilder {\n  private lines: string[] = [];\n  private newLine: string[] = [];\n\n  constructor(private joiner = '\\r\\n') {\n\n  }\n\n  public add(...strs: string[]) {\n    this.lines.push(...strs);\n    return this;\n  }\n\n  public push(word: string) {\n    this.newLine.push(word);\n    return this;\n  }\n  \n  public addJoined(separator = '') {\n    this.add(this.newLine.join(separator));\n    this.newLine = [];\n    return this;\n  }\n\n  public join() {\n    return this.lines.join(this.joiner);\n  }\n\n  public finalize() {\n    return this.join() + this.joiner;\n  }\n}\n"],"sourceRoot":""}